{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'intertype/test-basics'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\n# WGUY                      = require '../../../apps/webguy'\nGTNG                      = require '../../../apps/guy-test-NG'\n{ Test                  } = GTNG\n{ f }                     = require '../../../apps/effstring'\n\n\n\n############################################################################################################\n#\n#===========================================================================================================\n@cleartype_tasks =\n\n  #=========================================================================================================\n  basics: ->\n    CT                  = require '../../../apps/cleartype'\n    { Type\n      std             } = CT\n    info 'Ω___1', Object.keys CT\n    info 'Ω___2', CT.std\n    do =>\n      @eq ( Ωcltt___3 = -> CT.type_of?    ), true\n      @eq ( Ωcltt___4 = -> CT.Type?       ), true\n      @eq ( Ωcltt___5 = -> CT.Typespace?  ), true\n      @eq ( Ωcltt___6 = -> CT.internals?  ), true\n      @eq ( Ωcltt___7 = -> CT.std?        ), true\n    do =>\n      echo()\n      info 'Ω___8', std.integer\n      info 'Ω___9', std.integer.isa 3.141\n      info 'Ω__10', std.integer.isa 3\n      info 'Ω__11', std.integer.create()\n      info 'Ω__12', std.integer.create '3'\n    do =>\n      @eq ( Ωcltt__13 = -> std.text           instanceof Type ), true\n      @eq ( Ωcltt__14 = -> std.float          instanceof Type ), true\n      @eq ( Ωcltt__15 = -> std.integer        instanceof Type ), true\n      @eq ( Ωcltt__16 = -> std.nonempty_text  instanceof Type ), true\n      @eq ( Ωcltt__17 = -> std.quantity_q     instanceof Type ), true\n      @eq ( Ωcltt__18 = -> std.quantity_u     instanceof Type ), true\n      @eq ( Ωcltt__19 = -> std.quantity       instanceof Type ), true\n    do =>\n      @eq ( Ωcltt__20 = -> std.text.constructor.name          ), 'Text'\n      @eq ( Ωcltt__21 = -> std.float.constructor.name         ), 'Float'\n      @eq ( Ωcltt__22 = -> std.integer.constructor.name       ), 'Integer'\n      @eq ( Ωcltt__23 = -> std.nonempty_text.constructor.name ), 'Nonempty_text'\n      @eq ( Ωcltt__24 = -> std.quantity_q.constructor.name    ), 'Quantity_q'\n      @eq ( Ωcltt__25 = -> std.quantity_u.constructor.name    ), 'Quantity_u'\n      @eq ( Ωcltt__26 = -> std.quantity.constructor.name      ), 'Quantity'\n    do =>\n      @eq ( Ωcltt__27 = -> std.text.isa.name                  ), 'isa_text'\n      @eq ( Ωcltt__28 = -> std.float.isa.name                 ), 'isa_float'\n      @eq ( Ωcltt__29 = -> std.integer.isa.name               ), 'isa_integer'\n      @eq ( Ωcltt__30 = -> std.nonempty_text.isa.name         ), 'isa_nonempty_text'\n      @eq ( Ωcltt__31 = -> std.quantity_q.isa.name            ), 'isa_quantity_q'\n      @eq ( Ωcltt__32 = -> std.quantity_u.isa.name            ), 'isa_quantity_u'\n      @eq ( Ωcltt__33 = -> std.quantity.isa.name              ), 'isa_quantity'\n    do =>\n      @eq ( Ωcltt__34 = -> std.text.isa                  null ), false\n      @eq ( Ωcltt__35 = -> std.float.isa                 null ), false\n      @eq ( Ωcltt__36 = -> std.integer.isa               null ), false\n      @eq ( Ωcltt__37 = -> std.nonempty_text.isa         null ), false\n      @eq ( Ωcltt__38 = -> std.quantity_q.isa            null ), false\n      @eq ( Ωcltt__39 = -> std.quantity_u.isa            null ), false\n      @eq ( Ωcltt__40 = -> std.quantity.isa              null ), false\n    do =>\n      @eq ( Ωcltt__41 = -> std.text.isa                  Infinity ), false\n      @eq ( Ωcltt__42 = -> std.float.isa                 Infinity ), false\n      @eq ( Ωcltt__43 = -> std.integer.isa               Infinity ), false\n      @eq ( Ωcltt__44 = -> std.nonempty_text.isa         Infinity ), false\n      @eq ( Ωcltt__45 = -> std.quantity_q.isa            Infinity ), false\n      @eq ( Ωcltt__46 = -> std.quantity_u.isa            Infinity ), false\n      @eq ( Ωcltt__47 = -> std.quantity.isa              Infinity ), false\n    do =>\n      @eq ( Ωcltt__48 = -> std.text.isa           ''                        ), true\n      @eq ( Ωcltt__49 = -> std.float.isa          7.56                      ), true\n      @eq ( Ωcltt__50 = -> std.integer.isa        9                         ), true\n      @eq ( Ωcltt__51 = -> std.nonempty_text.isa  'www'                     ), true\n      @eq ( Ωcltt__52 = -> std.quantity_q.isa     1.5e32                    ), true\n      @eq ( Ωcltt__53 = -> std.quantity_u.isa     'km'                      ), true\n      @eq ( Ωcltt__54 = -> std.quantity.isa       { q: 1.5e32, u: 'km', }   ), true\n    do =>\n      echo()\n      info 'Ω__55', std.nonempty_text\n      @eq ( Ωcltt__56 = -> std.nonempty_text.isa 3.141                  ), false\n      @eq ( Ωcltt__57 = -> std.nonempty_text.isa ''                     ), false\n      @eq ( Ωcltt__58 = -> std.nonempty_text.isa 'd'                    ), true\n      @eq ( Ωcltt__59 = -> std.text.create()                            ), ''\n      @eq ( Ωcltt__60 = -> std.nonempty_text.create 'wat'               ), 'wat'\n      @throws ( Ωcltt__61 = -> std.nonempty_text.create()               ), /validation/i\n      @throws ( Ωcltt__62 = -> std.nonempty_text.create ''              ), /validation/i\n      @throws ( Ωcltt__63 = -> std.nonempty_text.create null            ), /validation/i\n      @throws ( Ωcltt__64 = -> std.nonempty_text.create undefined       ), /validation/i\n      @throws ( Ωcltt__65 = -> std.nonempty_text.create false           ), /validation/i\n      @eq ( Ωcltt__66 = -> std.nonempty_text.create 'd'                 ), 'd'\n    do =>\n      echo()\n      info 'Ω__67', std.quantity\n      @eq ( Ωcltt__68 = -> std.quantity.create()                        ), { q: 0, u: 'u', }\n      @eq ( Ωcltt__69 = -> std.quantity.create    { q: 4.3, u: 's', }   ), { q: 4.3, u: 's', }\n      @eq ( Ωcltt__70 = -> std.nonempty_text.create      'g'            ), 'g'\n      @eq ( Ωcltt__71 = -> std.quantity_u.create         'g'            ), 'g'\n      @eq ( Ωcltt__72 = -> std.quantity.fields.u.create  'g'            ), 'g'\n      @throws ( Ωcltt__73 = -> std.quantity.fields.u.create  false          ), /validation/i\n    do =>\n      echo()\n      help 'Ω__74', std.quantity\n      help 'Ω__75', std.quantity.constructor\n      help 'Ω__76', std.quantity.constructor.name\n      help 'Ω__77', std.quantity.isa\n      help 'Ω__78', std.quantity.isa {}\n      @eq ( Ωcltt__79 = -> std.quantity.isa { u: 7, q: 3, }           ), false\n      @eq ( Ωcltt__80 = -> std.quantity.isa { u: '7', q: 3, }         ), true\n      @eq ( Ωcltt__81 = -> std.quantity.isa { u: '7', q: Infinity, }  ), false\n      @eq ( Ωcltt__82 = -> std.quantity.isa { u: '7', q: NaN, }       ), false\n      @eq ( Ωcltt__83 = -> std.quantity.name                          ), 'quantity'\n      @eq ( Ωcltt__84 = -> std.integer.name                           ), 'integer'\n      @eq ( Ωcltt__85 = -> std.quantity_q.name                        ), 'quantity_q'\n      @eq ( Ωcltt__86 = -> std.quantity_u.name                        ), 'quantity_u'\n      echo()\n      help 'Ω__87', std.text.isa\n      help 'Ω__88', std.text.isa 'abc'\n      help 'Ω__89', std.text.isa Array.from 'abc'\n      echo()\n      help 'Ω__90', std.nonempty_text\n      help 'Ω__91', std.nonempty_text.isa\n      @eq ( Ωcltt__92 = -> std.nonempty_text.isa 'abc'            ), true\n      @eq ( Ωcltt__93 = -> std.nonempty_text.isa Array.from 'abc' ), false\n      return null\n    do =>\n      echo()\n      for typename, type of std\n        @eq ( Ωcltt__94 = -> type.name          ), typename\n        @eq ( Ωcltt__95 = -> type.isa.name      ), \"isa_#{typename}\"\n        @eq ( Ωcltt__96 = -> type.create.name   ), \"create_#{typename}\"\n        debug 'Ω__97', [typename, type.create.name, ]\n      return null\n    #.......................................................................................................\n    for typename, type of std\n      urge 'Ω__98', f\"#{typename}:<20c; #{type.constructor.name}:<20c; #{type.isa.name}:<20c;\"\n    #.......................................................................................................\n    debug 'Ω__99', 'integer                 template  ', std.integer.template\n    debug 'Ω_100', 'integer                 fields    ', std.integer.fields\n    debug 'Ω_101', 'quantity                template  ', std.quantity.template\n    debug 'Ω_102', 'quantity                fields    ', std.quantity.fields\n    debug 'Ω_103', 'quantity_with_template  template  ', std.quantity_with_template.template\n    debug 'Ω_104', 'quantity_with_template  fields    ', std.quantity_with_template.fields\n    #.......................................................................................................\n    return null\n\n  #=========================================================================================================\n  templates: ->\n    { Type\n      internals\n      std             } = require '../../../apps/cleartype'\n    do =>\n      @eq ( Ωcltt_105 = -> std.text.template?                                     ), true\n      @eq ( Ωcltt_106 = -> internals.gnd.function.isa std.text.template           ), false\n      @eq ( Ωcltt_107 = -> internals.gnd.function.isa std.text.get_template       ), true\n      @eq ( Ωcltt_108 = -> std.text.template                                      ), ''\n      @eq ( Ωcltt_109 = -> std.text.get_template()                                ), ''\n      return null\n    do =>\n      @eq ( Ωcltt_110 = -> std.list.template?                                     ), true\n      @eq ( Ωcltt_111 = -> internals.gnd.function.isa std.list.template           ), true\n      @eq ( Ωcltt_112 = -> internals.gnd.function.isa std.list.get_template       ), true\n      @eq ( Ωcltt_113 = -> std.list.template()                                    ), []\n      @eq ( Ωcltt_114 = -> std.list.get_template()                                ), []\n      @eq ( Ωcltt_115 = -> std.list.get_template() is std.list.get_template()     ), false\n      return null\n    do =>\n      @eq ( Ωcltt_116 = -> std.quantity.template?                                     ), true\n      @eq ( Ωcltt_117 = -> internals.gnd.function.isa std.quantity.template           ), true\n      @eq ( Ωcltt_118 = -> internals.gnd.function.isa std.quantity.get_template       ), true\n      @eq ( Ωcltt_119 = -> std.quantity.template()                                    ), []\n      @eq ( Ωcltt_120 = -> std.quantity.get_template()                                ), []\n      @eq ( Ωcltt_121 = -> std.quantity.get_template() is std.list.get_template()     ), false\n      return null\n    #.......................................................................................................\n    return null\n\n  #=========================================================================================================\n  builtins:\n\n    #-------------------------------------------------------------------------------------------------------\n    property_is_set: ->\n      BI = require '../../../apps/cleartype/lib/builtins'\n      #.....................................................................................................\n      @eq ( Ωctt_122 = -> BI.type_of BI.unset                                 ), 'unset'\n      @eq ( Ωctt_123 = -> BI.gnd.unset.isa  BI.unset                          ), true\n      @eq ( Ωctt_124 = -> BI.gnd.symbol.isa BI.unset                          ), true\n      @eq ( Ωctt_125 = -> BI.type_of BI.property_is_set                       ), 'function'\n      @eq ( Ωctt_126 = -> BI.type_of BI.property_is_unset                     ), 'function'\n      #.....................................................................................................\n      @eq ( Ωctt_127 = -> BI.property_is_set    {                     }, 'd'  ), false\n      @eq ( Ωctt_128 = -> BI.property_is_set    { d: BI.unset,        }, 'd'  ), false\n      #.....................................................................................................\n      @eq ( Ωctt_129 = -> BI.property_is_set    { d: null,            }, 'd'  ), true\n      @eq ( Ωctt_130 = -> BI.property_is_set    { d: undefined,       }, 'd'  ), true\n      @eq ( Ωctt_131 = -> BI.property_is_set    { d: Symbol 'unset',  }, 'd'  ), true\n      #.....................................................................................................\n      @eq ( Ωctt_132 = -> BI.property_is_unset  {                     }, 'd'  ), true\n      @eq ( Ωctt_133 = -> BI.property_is_unset  { d: BI.unset,        }, 'd'  ), true\n      #.....................................................................................................\n      @eq ( Ωctt_134 = -> BI.property_is_unset  { d: null,            }, 'd'  ), false\n      @eq ( Ωctt_135 = -> BI.property_is_unset  { d: undefined,       }, 'd'  ), false\n      @eq ( Ωctt_136 = -> BI.property_is_unset  { d: Symbol 'unset',  }, 'd'  ), false\n      #.....................................................................................................\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    type_of: ->\n      BI = require '../../../apps/cleartype/lib/builtins'\n      @eq ( Ωctt_137 = -> BI.type_of null                   ), 'null'\n      @eq ( Ωctt_138 = -> BI.type_of undefined              ), 'undefined'\n      @eq ( Ωctt_139 = -> BI.type_of +Infinity              ), 'infinity'\n      @eq ( Ωctt_140 = -> BI.type_of -Infinity              ), 'infinity'\n      @eq ( Ωctt_141 = -> BI.type_of true                   ), 'boolean'\n      @eq ( Ωctt_142 = -> BI.type_of false                  ), 'boolean'\n      @eq ( Ωctt_143 = -> BI.type_of NaN                    ), 'nan'\n      @eq ( Ωctt_144 = -> BI.type_of 8                      ), 'float'\n      @eq ( Ωctt_145 = -> BI.type_of /xxx/                  ), 'regex'\n      @eq ( Ωctt_146 = -> BI.type_of 'xyz'                  ), 'text'\n      @eq ( Ωctt_147 = -> BI.type_of [ 'xyz', ]             ), 'list'\n      @eq ( Ωctt_148 = -> BI.type_of {}                     ), 'object'\n      @eq ( Ωctt_149 = -> BI.type_of Symbol 's'             ), 'symbol'\n      @eq ( Ωctt_150 = -> BI.type_of Symbol.for 's'         ), 'symbol'\n      @eq ( Ωctt_151 = -> BI.type_of BI.unset               ), 'unset'\n      #.....................................................................................................\n      return null\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  guytest_cfg = { throw_on_error: false,  show_passes: false, report_checks: false, }\n  guytest_cfg = { throw_on_error: true,   show_passes: false, report_checks: false, }\n  ( new Test guytest_cfg ).test @cleartype_tasks\n  # ( new Test guytest_cfg ).test @cleartype_tasks.builtins\n"
  ]
}