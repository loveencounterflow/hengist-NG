{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'intertype/test-basics'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\n# WGUY                      = require '../../../apps/webguy'\nGTNG                      = require '../../../apps/guy-test-NG'\n{ Test                  } = GTNG\n\n\n###\n\n# from `ltsort` which uses an outdated version of `intertype`:\n\nget_base_types = ->\n  return base_types if base_types?\n  #.........................................................................................................\n  base_types                = new Cleartype()\n  { declare }               = base_types\n  #.........................................................................................................\n  declare.lt_nodelist 'list.of.nonempty.text'\n  #.........................................................................................................\n  declare.lt_constructor_cfg\n    fields:\n      loners:     'boolean'\n    default:\n      loners:     true\n  #.........................................................................................................\n  declare.lt_add_cfg\n    fields:\n      name:       'nonempty.text'\n      precedes:   'lt_nodelist'\n      needs:      'lt_nodelist'\n    default:\n      name:       null\n      precedes:     null\n      needs:      null\n    create: ( x ) ->\n      R           = x ? {}\n      return R unless @isa.object R\n      R.needs      ?= []\n      R.precedes   ?= []\n      R.needs       = [ R.needs,    ] unless @isa.list R.needs\n      R.precedes    = [ R.precedes, ] unless @isa.list R.precedes\n      return R\n  #.........................................................................................................\n  declare.lt_linearize_cfg\n    fields:\n      groups:     'boolean'\n    default:\n      groups:     false\n  #.........................................................................................................\n  return base_types\n\n###\n\n#===========================================================================================================\nget_typespaces = ->\n  { CT, \\\n    std } = require '../../../apps/cleartype'\n  #.........................................................................................................\n  lt_types =\n    #.........................................................................................................\n    lt_nodelist:\n      $isa: ( x ) ->\n        # 'list.of.nonempty.text'\n        return false unless @ct.isa std.list, x\n        return x.every ( e ) => @ct.isa std.nonempty_text, e\n      $create: ( x ) ->\n        return x if x?\n        return []\n    #.........................................................................................................\n    lt_constructor_cfg:\n      $isa: ( x ) ->\n        return false unless @ct.isa std.object, x\n        return false unless @ct.isa @me.loners, x.loners\n        return true\n      loners:\n        $isa:       ( x ) -> @ct.isa std.boolean, x\n      $template:\n        loners:     true\n      $create: ( x ) ->\n        return x unless @ct.isa_optional std.object, x\n        return { @me.$template..., x..., }\n    #.........................................................................................................\n    lt_add_cfg:\n      $isa: ( x ) ->\n        return false unless @ct.isa std.object,   x\n        return false unless @ct.isa @me.name,     x.name\n        return false unless @ct.isa @me.precedes, x.precedes\n        return false unless @ct.isa @me.needs,    x.needs\n        return true\n      $create: ( x ) ->\n        return x unless @ct.isa_optional std.object, x\n        return { @me.$template..., x..., }\n      #.....................................................................................................\n      name:         $isa: ( x ) -> @ct.isa std.nonempty_text,             x\n      precedes:     $isa: ( x ) -> @ct.isa_optional lt_types.lt_nodelist, x\n      needs:        $isa: ( x ) -> @ct.isa_optional lt_types.lt_nodelist, x\n      $template:\n        name:       null\n        precedes:   null\n        needs:      null\n    #.........................................................................................................\n    lt_linearize_cfg:\n      $isa: ( x ) ->\n        return false unless @ct.isa std.object, x\n        return false unless @ct.isa @me.groups, x.groups\n        return true\n      $create: ( x ) ->\n        return x unless @ct.isa_optional std.object, x\n        return { @me.$template..., x..., }\n      #.....................................................................................................\n      groups:\n        $isa:       ( x ) -> @ct.isa std.boolean, x\n      $template:\n        groups:     false\n  #.........................................................................................................\n  return { lt_types, }\n\n\n############################################################################################################\n#\n#===========================================================================================================\n@cleartype_tasks =\n\n  #=========================================================================================================\n  basics:\n\n    #-------------------------------------------------------------------------------------------------------\n    builtins: ->\n      { Cleartype\n        std } = require '../../../apps/cleartype'\n      ct = new Cleartype()\n      #.....................................................................................................\n      @eq ( Ωctt___1 = -> ct.isa std.primitive, 1          ), true\n      @eq ( Ωctt___2 = -> ct.isa std.primitive, true       ), true\n      @eq ( Ωctt___3 = -> ct.isa std.primitive, false      ), true\n      @eq ( Ωctt___4 = -> ct.isa std.primitive, null       ), true\n      @eq ( Ωctt___5 = -> ct.isa std.primitive, undefined  ), true\n      @eq ( Ωctt___6 = -> ct.isa std.primitive, 'text'     ), true\n      @eq ( Ωctt___7 = -> ct.isa std.primitive, []         ), false\n      @eq ( Ωctt___8 = -> ct.isa std.primitive, {}         ), false\n      @eq ( Ωctt___9 = -> ct.isa std.primitive, ( -> )     ), false\n      @eq ( Ωctt__10 = -> ct.isa std.primitive, ( => )     ), false\n      #.....................................................................................................\n      @eq ( Ωctt__11 = -> ct.isa std.integer, 1            ), true\n      @eq ( Ωctt__12 = -> ct.isa std.integer, 1.1          ), false\n      #.....................................................................................................\n      @eq ( Ωctt__13 = -> ct.isa std.text, 1.1            ), false\n      @eq ( Ωctt__14 = -> ct.isa std.text, '1.1'          ), true\n      @eq ( Ωctt__15 = -> ct.isa std.text, ''             ), true\n      @eq ( Ωctt__16 = -> ct.isa std.nonempty_text, 1.1   ), false\n      @eq ( Ωctt__17 = -> ct.isa std.nonempty_text, '1.1' ), true\n      @eq ( Ωctt__18 = -> ct.isa std.nonempty_text, ''    ), false\n      #.....................................................................................................\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    isa: ->\n      { Cleartype\n        std } = require '../../../apps/cleartype'\n      tt      = new Cleartype()\n      { lt_types }  = get_typespaces()\n      #.....................................................................................................\n      @eq ( Ωctt__19 = -> tt.isa std.float, true                                        ), false\n      @eq ( Ωctt__20 = -> tt.isa std.float, '3'                                         ), false\n      @eq ( Ωctt__21 = -> tt.isa std.float, 337465                                      ), true\n      @eq ( Ωctt__22 = -> tt.isa lt_types.lt_constructor_cfg, 337465                    ), false\n      @eq ( Ωctt__23 = -> tt.isa lt_types.lt_constructor_cfg, {}                        ), false\n      @eq ( Ωctt__24 = -> tt.isa lt_types.lt_constructor_cfg, { loners: 8, }            ), false\n      @eq ( Ωctt__25 = -> tt.isa lt_types.lt_constructor_cfg, { loners: true, }         ), true\n      do =>\n        contexts = new Set tt._contexts.keys()\n        @eq ( Ωctt__26 = -> contexts.has std.float                                      ), true\n        @eq ( Ωctt__27 = -> contexts.has lt_types.lt_constructor_cfg                    ), true\n        @eq ( Ωctt__28 = -> contexts.has lt_types.lt_constructor_cfg.loners             ), true\n        @eq ( Ωctt__29 = -> contexts.has std.text                                       ), false\n      #.....................................................................................................\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    create: ->\n      { Cleartype\n        std } = require '../../../apps/cleartype'\n      tt      = new Cleartype()\n      { lt_types }  = get_typespaces()\n      #.....................................................................................................\n      @eq ( Ωctt__30 = -> tt.create lt_types.lt_constructor_cfg                         ), { loners: true, }\n      @eq ( Ωctt__31 = -> tt.create lt_types.lt_constructor_cfg, null                   ), { loners: true, }\n      @eq ( Ωctt__32 = -> tt.create lt_types.lt_constructor_cfg, undefined              ), { loners: true, }\n      @throws ( Ωctt__33 = -> tt.create    lt_types.lt_constructor_cfg, { loners: 7, }  ), /validation error/\n      do =>\n        contexts = new Set tt._contexts.keys()\n        @eq ( Ωctt__34 = -> contexts.has lt_types.lt_constructor_cfg                    ), true\n        @eq ( Ωctt__35 = -> contexts.has lt_types.lt_constructor_cfg.loners             ), true\n        @eq ( Ωctt__36 = -> contexts.has std.text                                       ), false\n      #.....................................................................................................\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    validate: ->\n      { Cleartype\n        std } = require '../../../apps/cleartype'\n      tt      = new Cleartype()\n      { lt_types }  = get_typespaces()\n      #.....................................................................................................\n      @eq ( Ωctt__37 = -> tt.validate lt_types.lt_constructor_cfg, { loners: true, }    ), { loners: true, }\n      @throws ( Ωctt__38 = -> tt.validate  lt_types.lt_constructor_cfg, { loners: 8, }  ), /validation error/\n      do =>\n        contexts = new Set tt._contexts.keys()\n        @eq ( Ωctt__39 = -> contexts.has lt_types.lt_constructor_cfg                    ), true\n        @eq ( Ωctt__40 = -> contexts.has lt_types.lt_constructor_cfg.loners             ), true\n        @eq ( Ωctt__41 = -> contexts.has std.text                                       ), false\n      #.....................................................................................................\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    instance_methods_are_bound: ->\n      { Cleartype\n        std } = require '../../../apps/cleartype'\n      { lt_types }  = get_typespaces()\n      { isa\n        isa_optional\n        create\n        validate\n        validate_optional } = new Cleartype()\n      #.....................................................................................................\n      @eq (     Ωctt__42 = -> isa       std.float, 337465                               ), true\n      @eq (     Ωctt__43 = -> isa       lt_types.lt_constructor_cfg, 337465             ), false\n      @eq (     Ωctt__44 = -> create    lt_types.lt_constructor_cfg, undefined          ), { loners: true, }\n      @throws ( Ωctt__45 = -> create    lt_types.lt_constructor_cfg, { loners: 7, }     ), /validation error/\n      @eq (     Ωctt__46 = -> validate  lt_types.lt_constructor_cfg, { loners: true, }  ), { loners: true, }\n      @throws ( Ωctt__47 = -> validate  lt_types.lt_constructor_cfg, { loners: 8, }     ), /validation error/\n      #.....................................................................................................\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    exported_methods_are_bound: ->\n      { Cleartype\n        std } = require '../../../apps/cleartype'\n      { lt_types }  = get_typespaces()\n      { isa\n        isa_optional\n        create\n        validate\n        validate_optional } = require '../../../apps/cleartype'\n      #.....................................................................................................\n      @eq (     Ωctt__48 = -> isa       std.float, 337465                               ), true\n      @eq (     Ωctt__49 = -> isa       lt_types.lt_constructor_cfg, 337465             ), false\n      @eq (     Ωctt__50 = -> create    lt_types.lt_constructor_cfg, undefined          ), { loners: true, }\n      @throws ( Ωctt__51 = -> create    lt_types.lt_constructor_cfg, { loners: 7, }     ), /validation error/\n      @eq (     Ωctt__52 = -> validate  lt_types.lt_constructor_cfg, { loners: true, }  ), { loners: true, }\n      @throws ( Ωctt__53 = -> validate  lt_types.lt_constructor_cfg, { loners: 8, }     ), /validation error/\n      #.....................................................................................................\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    exported_methods_can_accessed_via_CT: ->\n      { CT\n        isa\n        isa_optional\n        create\n        validate\n        validate_optional } = require '../../../apps/cleartype'\n      #.....................................................................................................\n      @eq ( Ωctt__54 = -> isa               is CT.isa               ), true\n      @eq ( Ωctt__55 = -> isa_optional      is CT.isa_optional      ), true\n      @eq ( Ωctt__56 = -> validate          is CT.validate          ), true\n      @eq ( Ωctt__57 = -> validate_optional is CT.validate_optional ), true\n      @eq ( Ωctt__58 = -> create            is CT.create            ), true\n      #.....................................................................................................\n      return null\n\n\n  #=========================================================================================================\n  lt_types:\n\n    #-------------------------------------------------------------------------------------------------------\n    lt_constructor_cfg: ->\n      { Cleartype\n        std } = require '../../../apps/cleartype'\n      { lt_types }  = get_typespaces()\n      { isa\n        isa_optional\n        create\n        validate\n        validate_optional } = require '../../../apps/cleartype'\n      #.....................................................................................................\n      @eq (     Ωctt__59 = -> isa               lt_types.lt_constructor_cfg, 337465             ), false\n      @eq (     Ωctt__60 = -> isa_optional      lt_types.lt_constructor_cfg, 337465             ), false\n      @eq (     Ωctt__61 = -> isa_optional      lt_types.lt_constructor_cfg, null               ), true\n      @eq (     Ωctt__62 = -> create            lt_types.lt_constructor_cfg, undefined          ), { loners: true, }\n      @throws ( Ωctt__63 = -> create            lt_types.lt_constructor_cfg, { loners: 7, }     ), /validation error/\n      @eq (     Ωctt__64 = -> validate_optional lt_types.lt_constructor_cfg, { loners: true, }  ), { loners: true, }\n      @eq (     Ωctt__65 = -> validate_optional lt_types.lt_constructor_cfg, null               ), null\n      @eq (     Ωctt__66 = -> validate          lt_types.lt_constructor_cfg, { loners: true, }  ), { loners: true, }\n      @throws ( Ωctt__67 = -> validate          lt_types.lt_constructor_cfg, { loners: 8, }     ), /validation error/\n      @throws ( Ωctt__68 = -> validate_optional lt_types.lt_constructor_cfg, { loners: 8, }     ), /validation error/\n      #.....................................................................................................\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    lt_nodelist: ->\n      { Cleartype\n        std } = require '../../../apps/cleartype'\n      { lt_types }  = get_typespaces()\n      { isa\n        isa_optional\n        create\n        validate\n        validate_optional } = require '../../../apps/cleartype'\n      #.....................................................................................................\n      @eq (     Ωctt__69 = -> isa               lt_types.lt_nodelist, 337465              ), false\n      @eq (     Ωctt__70 = -> isa               lt_types.lt_nodelist, []                  ), true\n      @eq (     Ωctt__71 = -> isa               lt_types.lt_nodelist, [ 'name', ]         ), true\n      @eq (     Ωctt__72 = -> isa               lt_types.lt_nodelist, [ 'name', 3, ]      ), false\n      @eq (     Ωctt__73 = -> isa_optional      lt_types.lt_nodelist, 337465              ), false\n      @eq (     Ωctt__74 = -> isa_optional      lt_types.lt_nodelist, null                ), true\n      @eq (     Ωctt__75 = -> create            lt_types.lt_nodelist, undefined           ), []\n      @throws ( Ωctt__76 = -> create            lt_types.lt_nodelist, { loners: 7, }      ), /validation error/\n      @eq (     Ωctt__77 = -> validate_optional lt_types.lt_nodelist, []                  ), []\n      @eq (     Ωctt__78 = -> validate_optional lt_types.lt_nodelist, null                ), null\n      # @eq (     Ωctt__79 = -> validate          lt_types.lt_nodelist, { loners: true, }  ), { loners: true, }\n      # @throws ( Ωctt__80 = -> validate          lt_types.lt_nodelist, { loners: 8, }     ), /validation error/\n      # @throws ( Ωctt__81 = -> validate_optional lt_types.lt_nodelist, { loners: 8, }     ), /validation error/\n      #.....................................................................................................\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    lt_add_cfg: ->\n      { Cleartype\n        std } = require '../../../apps/cleartype'\n      { lt_types }  = get_typespaces()\n      { isa\n        isa_optional\n        create\n        validate\n        validate_optional } = require '../../../apps/cleartype'\n      #.....................................................................................................\n      @eq (     Ωctt__82 = -> isa               lt_types.lt_add_cfg.name, 337465              ), false\n      @eq (     Ωctt__83 = -> isa               lt_types.lt_add_cfg.name, ''                  ), false\n      @eq (     Ωctt__84 = -> isa               lt_types.lt_add_cfg.name, 'foo'               ), true\n      @eq (     Ωctt__85 = -> isa               lt_types.lt_add_cfg.needs, 337465             ), false\n      @eq (     Ωctt__86 = -> isa               lt_types.lt_add_cfg.needs, [ 337465, ]        ), false\n      @eq (     Ωctt__87 = -> isa               lt_types.lt_add_cfg.needs, [ '337465', ]      ), true\n      @eq (     Ωctt__88 = -> isa               lt_types.lt_add_cfg.needs, []                 ), true\n      @eq (     Ωctt__89 = -> isa               lt_types.lt_add_cfg.precedes, 337465          ), false\n      @eq (     Ωctt__90 = -> isa               lt_types.lt_add_cfg.precedes, [ 337465, ]     ), false\n      @eq (     Ωctt__91 = -> isa               lt_types.lt_add_cfg.precedes, []              ), true\n      @eq (     Ωctt__92 = -> isa               lt_types.lt_add_cfg.precedes, [ '337465', ]   ), true\n      @eq (     Ωctt__93 = -> isa               lt_types.lt_add_cfg, 337465                   ), false\n      @eq (     Ωctt__94 = -> isa               lt_types.lt_add_cfg, {}                       ), false\n      @eq (     Ωctt__95 = -> isa               lt_types.lt_add_cfg, { name: 'g', precedes: null, needs: null     }    ), true\n      @eq (     Ωctt__96 = -> isa               lt_types.lt_add_cfg, { name: 'g', precedes: [], needs: [ 'name', ]     }    ), true\n      @eq (     Ωctt__97 = -> isa               lt_types.lt_add_cfg, { name: 'g', precedes: [], needs: [ 'name', 3, ]  }    ), false\n      @eq (     Ωctt__98 = -> create            lt_types.lt_add_cfg, { name: 'g', precedes: [], needs: [ 'name', ]     }    ), { name: 'g', precedes: [], needs: [ 'name', ]  }\n      @eq (     Ωctt__99 = -> create            lt_types.lt_add_cfg, { name: 'g',                                      }    ), { name: 'g', precedes: null, needs: null  }\n      # @eq (     Ωctt_100 = -> isa_optional      lt_types.lt_add_cfg, 337465              ), false\n      # @eq (     Ωctt_101 = -> isa_optional      lt_types.lt_add_cfg, null                ), true\n      # @eq (     Ωctt_102 = -> create            lt_types.lt_add_cfg, undefined           ), []\n      # @throws ( Ωctt_103 = -> create            lt_types.lt_add_cfg, { loners: 7, }      ), /validation error/\n      # @eq (     Ωctt_104 = -> validate_optional lt_types.lt_add_cfg, []                  ), []\n      # @eq (     Ωctt_105 = -> validate_optional lt_types.lt_add_cfg, null                ), null\n      # @eq (     Ωctt_106 = -> validate          lt_types.lt_add_cfg, { loners: true, }  ), { loners: true, }\n      # @throws ( Ωctt_107 = -> validate          lt_types.lt_add_cfg, { loners: 8, }     ), /validation error/\n      # @throws ( Ωctt_108 = -> validate_optional lt_types.lt_add_cfg, { loners: 8, }     ), /validation error/\n      #.....................................................................................................\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    lt_linearize_cfg: ->\n      { Cleartype\n        std } = require '../../../apps/cleartype'\n      { lt_types }  = get_typespaces()\n      { isa\n        isa_optional\n        create\n        validate\n        validate_optional } = require '../../../apps/cleartype'\n      #.....................................................................................................\n      @eq (     Ωctt_109 = -> isa               lt_types.lt_linearize_cfg, 337465                   ), false\n      @eq (     Ωctt_110 = -> isa               lt_types.lt_linearize_cfg, {}                       ), false\n      @eq (     Ωctt_111 = -> isa               lt_types.lt_linearize_cfg, { groups: 5, }           ), false\n      @eq (     Ωctt_112 = -> isa               lt_types.lt_linearize_cfg, { groups: true, }        ), true\n      @eq (     Ωctt_113 = -> isa               lt_types.lt_linearize_cfg, { groups: false, }       ), true\n      @eq (     Ωctt_114 = -> create            lt_types.lt_linearize_cfg, { groups: true,  }       ), { groups: true, }\n      @eq (     Ωctt_115 = -> create            lt_types.lt_linearize_cfg, { groups: false, }       ), { groups: false, }\n      @eq (     Ωctt_116 = -> create            lt_types.lt_linearize_cfg, {}                       ), { groups: false, }\n      @eq (     Ωctt_117 = -> create            lt_types.lt_linearize_cfg, null                     ), { groups: false, }\n      #.....................................................................................................\n      return null\n\n  #=========================================================================================================\n  standard_basic_methods:\n\n    #-------------------------------------------------------------------------------------------------------\n    type_of: ->\n      { type_of } = require '../../../apps/cleartype'\n      @eq ( Ωctt_118 = -> type_of null                  ), 'null'\n      @eq ( Ωctt_119 = -> type_of undefined             ), 'undefined'\n      @eq ( Ωctt_120 = -> type_of +Infinity             ), 'infinity'\n      @eq ( Ωctt_121 = -> type_of -Infinity             ), 'infinity'\n      @eq ( Ωctt_122 = -> type_of true                  ), 'boolean'\n      @eq ( Ωctt_123 = -> type_of false                 ), 'boolean'\n      @eq ( Ωctt_124 = -> type_of NaN                   ), 'nan'\n      @eq ( Ωctt_125 = -> type_of 8                     ), 'float'\n      @eq ( Ωctt_126 = -> type_of /xxx/                 ), 'regex'\n      @eq ( Ωctt_127 = -> type_of 'xyz'                 ), 'text'\n      @eq ( Ωctt_128 = -> type_of [ 'xyz', ]            ), 'list'\n      @eq ( Ωctt_129 = -> type_of {}                    ), 'object'\n      #.....................................................................................................\n      return null\n\n  #=========================================================================================================\n  demo:\n\n    #-------------------------------------------------------------------------------------------------------\n    standard_function_signatures: ->\n      { Cleartype\n        std } = require '../../../apps/cleartype'\n      { f: ff, } = require '../../../apps/effstring'\n      # { lt_types }  = get_typespaces()\n      # { isa\n      #   isa_optional\n      #   create\n      #   validate\n      #   validate_optional } = require '../../../apps/cleartype'\n      #.....................................................................................................\n      clean_arguments = ( P ) -> P.pop() while ( P.length > 0 ) and ( ( P.at -1 ) is undefined ); P\n      g = ( cfg, P... ) -> ( h cfg ) P...\n      h = ( cfg ) ->\n        debug 'Ωctt_130', cfg\n        unless arguments.length is 1\n          throw new Error \"Ωctt_131 expected 1 arguments, got #{arguments.length}\"\n        #...................................................................................................\n        template  = { name: '(anonymous)', min: 1, max: 1, template: {}, }\n        cfg       = { template..., cfg..., }\n        #...................................................................................................\n        return ( P... ) ->\n          debug 'Ωctt_132', clean_arguments P\n          unless cfg.min <= P.length <= cfg.max\n            throw new Error \"Ωctt_133 expected between #{cfg.min} and #{cfg.max} arguments, got #{P.length}\"\n          R = {}\n          return R\n      #.....................................................................................................\n      do =>\n        f = ( name, matcher, cfg ) ->\n          info 'Ωctt_134', g { name: 'f', min: 1, max: 3, }, name, matcher, cfg\n          # info 'Ωctt_135', g { name: 'f', min: 1, max: 3, }, arguments...\n          name_rpr    = if ( name    is undefined ) then '█' else rpr name\n          matcher_rpr = if ( matcher is undefined ) then '█' else rpr matcher\n          cfg_rpr     = if ( cfg     is undefined ) then '█' else rpr cfg\n          A = [ arguments..., ]\n          help 'Ωctt_136', f.length, A.length, ff\"#{name_rpr}:20c; #{matcher_rpr}:20c; #{cfg_rpr}:20c;\"\n          # help 'Ωctt_137', cfg\n          # help 'Ωctt_138', { cfg..., }\n          # help 'Ωctt_139', Object.assign cfg...\n        urge 'Ωctt_140', '———————————————————————————————————————————————————'\n        @throws ( Ωctt_141 = -> f() ), /expected/\n        f 'myname'\n        f 'myname', 'mymatcher'\n        f 'myname', 'mymatcher', { jump: true, {}..., }\n        f 'myname', { jump: true, }\n        f { jump: true, }\n        return null\n      #.....................................................................................................\n      do =>\n        f = ( name, matcher = /./, cfg ) ->\n          name_rpr    = if ( name    is undefined ) then '█' else rpr name\n          matcher_rpr = if ( matcher is undefined ) then '█' else rpr matcher\n          cfg_rpr     = if ( cfg     is undefined ) then '█' else rpr cfg\n          A = [ arguments..., ]\n          help 'Ωctt_142', f.length, A.length, ff\"#{name_rpr}:20c; #{matcher_rpr}:20c; #{cfg_rpr}:20c;\"\n          # help 'Ωctt_143', cfg\n          # help 'Ωctt_144', { cfg..., }\n          # help 'Ωctt_145', Object.assign cfg...\n        urge 'Ωctt_146', '———————————————————————————————————————————————————'\n        f()\n        f 'myname'\n        f 'myname', 'mymatcher'\n        f 'myname', 'mymatcher', { jump: true, {}..., }\n        f 'myname', { jump: true, }\n        f { jump: true, }\n        return null\n      #.....................................................................................................\n      return null\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  ( new Test { throw_on_error: true, } ).test @cleartype_tasks\n  # ( new Test { throw_on_error: true, } ).test @cleartype_tasks.demo\n  # ( new Test { throw_on_error: false, } ).test @cleartype_tasks\n  # ( new Test { throw_on_error: true, } ).test { mvp_isa: @cleartype_tasks.MVP.isa, }\n  # ( new Test { throw_on_error: true, } ).test { instance_methods_are_bound: @cleartype_tasks.basics.instance_methods_are_bound, }\n\n  ->\n    d =\n      a: ->\n        foo: 1\n        bar: 2\n    debug 'Ωctt_147', d\n    debug 'Ωctt_148', d.a\n    debug 'Ωctt_149', d.a.name\n    debug 'Ωctt_150', d.a()\n"
  ]
}