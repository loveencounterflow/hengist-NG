{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'intertype/test-basics'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\n# WGUY                      = require '../../../apps/webguy'\nGTNG                      = require '../../../apps/guy-test-NG'\n{ Test                  } = GTNG\n{ f }                     = require '../../../apps/effstring'\n\n\n###\n\n# from `ltsort` which uses an outdated version of `intertype`:\n\nget_base_types = ->\n  return base_types if base_types?\n  #.........................................................................................................\n  base_types                = new Cleartype()\n  { declare }               = base_types\n  #.........................................................................................................\n  declare.lt_nodelist 'list.of.nonempty.text'\n  #.........................................................................................................\n  declare.lt_constructor_cfg\n    fields:\n      loners:     'boolean'\n    default:\n      loners:     true\n  #.........................................................................................................\n  declare.lt_add_cfg\n    fields:\n      name:       'nonempty.text'\n      precedes:   'lt_nodelist'\n      needs:      'lt_nodelist'\n    default:\n      name:       null\n      precedes:     null\n      needs:      null\n    create: ( x ) ->\n      R           = x ? {}\n      return R unless @isa.object R\n      R.needs      ?= []\n      R.precedes   ?= []\n      R.needs       = [ R.needs,    ] unless @isa.list R.needs\n      R.precedes    = [ R.precedes, ] unless @isa.list R.precedes\n      return R\n  #.........................................................................................................\n  declare.lt_linearize_cfg\n    fields:\n      groups:     'boolean'\n    default:\n      groups:     false\n  #.........................................................................................................\n  return base_types\n\n###\n\n#===========================================================================================================\nget_typespaces = ->\n  { CT, \\\n    std } = require '../../../apps/cleartype'\n  #.........................................................................................................\n  lt_types =\n    #.........................................................................................................\n    lt_nodelist:\n      $isa: ( x ) ->\n        # 'list.of.nonempty.text'\n        return false unless @ct.isa std.list, x\n        return x.every ( e ) => @ct.isa std.nonempty_text, e\n      $create: ( x ) ->\n        return x if x?\n        return []\n    #.........................................................................................................\n    lt_constructor_cfg:\n      $isa: ( x ) ->\n        return false unless @ct.isa std.object, x\n        return false unless @ct.isa @me.loners, x.loners\n        return true\n      loners:\n        $isa:       ( x ) -> @ct.isa std.boolean, x\n      $template:\n        loners:     true\n      $create: ( x ) ->\n        return x unless @ct.isa_optional std.object, x\n        return { @me.$template..., x..., }\n    #.........................................................................................................\n    lt_add_cfg:\n      $isa: ( x ) ->\n        return false unless @ct.isa std.object,   x\n        return false unless @ct.isa @me.name,     x.name\n        return false unless @ct.isa @me.precedes, x.precedes\n        return false unless @ct.isa @me.needs,    x.needs\n        return true\n      $create: ( x ) ->\n        return x unless @ct.isa_optional std.object, x\n        return { @me.$template..., x..., }\n      #.....................................................................................................\n      name:         $isa: ( x ) -> @ct.isa std.nonempty_text,             x\n      precedes:     $isa: ( x ) -> @ct.isa_optional lt_types.lt_nodelist, x\n      needs:        $isa: ( x ) -> @ct.isa_optional lt_types.lt_nodelist, x\n      $template:\n        name:       null\n        precedes:   null\n        needs:      null\n    #.........................................................................................................\n    lt_linearize_cfg:\n      $isa: ( x ) ->\n        return false unless @ct.isa std.object, x\n        return false unless @ct.isa @me.groups, x.groups\n        return true\n      $create: ( x ) ->\n        return x unless @ct.isa_optional std.object, x\n        return { @me.$template..., x..., }\n      #.....................................................................................................\n      groups:\n        $isa:       ( x ) -> @ct.isa std.boolean, x\n      $template:\n        groups:     false\n  #.........................................................................................................\n  return { lt_types, }\n\n\n############################################################################################################\n#\n#===========================================================================================================\n@cleartype_tasks =\n\n  #=========================================================================================================\n  basics: ->\n    { Type\n      std2\n      std             } = require '../../../apps/cleartype'\n    info 'Ω___8', std\n    do =>\n      echo()\n      info 'Ω___9', std.integer\n      info 'Ω__10', std.integer.isa 3.141\n      info 'Ω__11', std.integer.isa 3\n      info 'Ω__12', std.integer.create '3'\n      info 'Ω__13', std.integer.create()\n    do =>\n      @eq ( Ωcltt__14 = -> std.text           instanceof Type ), true\n      @eq ( Ωcltt__15 = -> std.float          instanceof Type ), true\n      @eq ( Ωcltt__16 = -> std.integer        instanceof Type ), true\n      @eq ( Ωcltt__17 = -> std.nonempty_text  instanceof Type ), true\n      @eq ( Ωcltt__18 = -> std.quantity_q     instanceof Type ), true\n      @eq ( Ωcltt__19 = -> std.quantity_u     instanceof Type ), true\n      @eq ( Ωcltt__20 = -> std.quantity       instanceof Type ), true\n    do =>\n      @eq ( Ωcltt__21 = -> std.text.constructor.name          ), 'Text'\n      @eq ( Ωcltt__22 = -> std.float.constructor.name         ), 'Float'\n      @eq ( Ωcltt__23 = -> std.integer.constructor.name       ), 'Integer'\n      @eq ( Ωcltt__24 = -> std.nonempty_text.constructor.name ), 'Nonempty_text'\n      @eq ( Ωcltt__25 = -> std.quantity_q.constructor.name    ), 'Quantity_q'\n      @eq ( Ωcltt__26 = -> std.quantity_u.constructor.name    ), 'Quantity_u'\n      @eq ( Ωcltt__27 = -> std.quantity.constructor.name      ), 'Quantity'\n    do =>\n      @eq ( Ωcltt__28 = -> std.text.isa.name                  ), 'isa_text'\n      @eq ( Ωcltt__29 = -> std.float.isa.name                 ), 'isa_float'\n      @eq ( Ωcltt__30 = -> std.integer.isa.name               ), 'isa_integer'\n      @eq ( Ωcltt__31 = -> std.nonempty_text.isa.name         ), 'isa_nonempty_text'\n      @eq ( Ωcltt__32 = -> std.quantity_q.isa.name            ), 'isa_quantity_q'\n      @eq ( Ωcltt__33 = -> std.quantity_u.isa.name            ), 'isa_quantity_u'\n      @eq ( Ωcltt__34 = -> std.quantity.isa.name              ), 'isa_quantity'\n    do =>\n      @eq ( Ωcltt__35 = -> std.text.isa                  null ), false\n      @eq ( Ωcltt__36 = -> std.float.isa                 null ), false\n      @eq ( Ωcltt__37 = -> std.integer.isa               null ), false\n      @eq ( Ωcltt__38 = -> std.nonempty_text.isa         null ), false\n      @eq ( Ωcltt__39 = -> std.quantity_q.isa            null ), false\n      @eq ( Ωcltt__40 = -> std.quantity_u.isa            null ), false\n      @eq ( Ωcltt__41 = -> std.quantity.isa              null ), false\n    do =>\n      @eq ( Ωcltt__42 = -> std.text.isa                  Infinity ), false\n      @eq ( Ωcltt__43 = -> std.float.isa                 Infinity ), false\n      @eq ( Ωcltt__44 = -> std.integer.isa               Infinity ), false\n      @eq ( Ωcltt__45 = -> std.nonempty_text.isa         Infinity ), false\n      @eq ( Ωcltt__46 = -> std.quantity_q.isa            Infinity ), false\n      @eq ( Ωcltt__47 = -> std.quantity_u.isa            Infinity ), false\n      @eq ( Ωcltt__48 = -> std.quantity.isa              Infinity ), false\n    do =>\n      @eq ( Ωcltt__49 = -> std.text.isa           ''                        ), true\n      @eq ( Ωcltt__50 = -> std.float.isa          7.56                      ), true\n      @eq ( Ωcltt__51 = -> std.integer.isa        9                         ), true\n      @eq ( Ωcltt__52 = -> std.nonempty_text.isa  'www'                     ), true\n      @eq ( Ωcltt__56 = -> std.quantity_q.isa     1.5e32                    ), true\n      @eq ( Ωcltt__57 = -> std.quantity_u.isa     'km'                      ), true\n      @eq ( Ωcltt__58 = -> std.quantity.isa       { q: 1.5e32, u: 'km', }   ), true\n    do =>\n      echo()\n      info 'Ω__59', std.nonempty_text\n      @eq ( Ωcltt__60 = -> std.nonempty_text.isa 3.141                  ), false\n      @eq ( Ωcltt__61 = -> std.nonempty_text.isa ''                     ), false\n      @eq ( Ωcltt__62 = -> std.nonempty_text.isa 'd'                    ), true\n      @eq ( Ωcltt__63 = -> std.nonempty_text.create()                   ), ''\n      @eq ( Ωcltt__64 = -> std.nonempty_text.create false               ), 'false'\n      @eq ( Ωcltt__65 = -> std.nonempty_text.create 'd'                 ), 'd'\n    do =>\n      echo()\n      info 'Ω__66', std.quantity\n      @eq ( Ωcltt__67 = -> std.quantity.create()                        ), { q: 0, u: 'u', }\n      @eq ( Ωcltt__68 = -> std.quantity.create    { q: 4.3, u: 's', }   ), { q: 4.3, u: 's', }\n      info 'Ω__69', std.nonempty_text.create      'g'\n      info 'Ω__70', std.quantity_u.create         'g'\n      info 'Ω__71', std.quantity.fields.u.create  'g'\n    do =>\n      echo()\n      help 'Ω__72', std.quantity\n      help 'Ω__73', std.quantity.constructor\n      help 'Ω__74', std.quantity.constructor.name\n      help 'Ω__75', std.quantity.isa\n      help 'Ω__76', std.quantity.isa {}\n      help 'Ω__77', std.quantity.isa { u: 7, q: 3, }\n      help 'Ω__78', std.quantity.isa { u: '7', q: 3, }\n      help 'Ω__79', std.quantity.isa { u: '7', q: Infinity, }\n      @eq ( Ωcltt__80 = -> std.quantity.name                    ), 'quantity'\n      @eq ( Ωcltt__81 = -> std.integer.name                     ), 'integer'\n      @eq ( Ωcltt__82 = -> std.quantity_q.name                  ), 'quantity_q'\n      @eq ( Ωcltt__83 = -> std.quantity_u.name                  ), 'quantity_u'\n      echo()\n      help 'Ω__84', std.text.isa\n      help 'Ω__85', std.text.isa 'abc'\n      help 'Ω__86', std.text.isa Array.from 'abc'\n      echo()\n      help 'Ω__87', std.nonempty_text\n      help 'Ω__88', std.nonempty_text.isa\n      @eq ( Ωcltt__89 = -> std.nonempty_text.isa 'abc'            ), true\n      @eq ( Ωcltt__90 = -> std.nonempty_text.isa Array.from 'abc' ), false\n      return null\n    do =>\n      echo()\n      for typename, type of std\n        @eq ( Ωcltt__91 = -> type.isa.name ), \"isa_#{typename}\"\n      return null\n    #.......................................................................................................\n    for typename, type of std\n      urge 'Ω__92', f\"#{typename}:<20c; #{type.constructor.name}:<20c; #{type.isa.name}:<20c;\"\n    return null\n\n\n\n  # #=========================================================================================================\n  # lt_types:\n\n  #   #-------------------------------------------------------------------------------------------------------\n  #   lt_constructor_cfg: ->\n  #     { Cleartype\n  #       std } = require '../../../apps/cleartype'\n  #     { lt_types }  = get_typespaces()\n  #     { isa\n  #       isa_optional\n  #       create\n  #       validate\n  #       validate_optional } = require '../../../apps/cleartype'\n  #     #.....................................................................................................\n  #     @eq (     Ωctt__59 = -> isa               lt_types.lt_constructor_cfg, 337465             ), false\n  #     @eq (     Ωctt__60 = -> isa_optional      lt_types.lt_constructor_cfg, 337465             ), false\n  #     @eq (     Ωctt__61 = -> isa_optional      lt_types.lt_constructor_cfg, null               ), true\n  #     @eq (     Ωctt__62 = -> create            lt_types.lt_constructor_cfg, undefined          ), { loners: true, }\n  #     @throws ( Ωctt__63 = -> create            lt_types.lt_constructor_cfg, { loners: 7, }     ), /validation error/\n  #     @eq (     Ωctt__64 = -> validate_optional lt_types.lt_constructor_cfg, { loners: true, }  ), { loners: true, }\n  #     @eq (     Ωctt__65 = -> validate_optional lt_types.lt_constructor_cfg, null               ), null\n  #     @eq (     Ωctt__66 = -> validate          lt_types.lt_constructor_cfg, { loners: true, }  ), { loners: true, }\n  #     @throws ( Ωctt__67 = -> validate          lt_types.lt_constructor_cfg, { loners: 8, }     ), /validation error/\n  #     @throws ( Ωctt__68 = -> validate_optional lt_types.lt_constructor_cfg, { loners: 8, }     ), /validation error/\n  #     #.....................................................................................................\n  #     return null\n\n  #   #-------------------------------------------------------------------------------------------------------\n  #   lt_nodelist: ->\n  #     { Cleartype\n  #       std } = require '../../../apps/cleartype'\n  #     { lt_types }  = get_typespaces()\n  #     { isa\n  #       isa_optional\n  #       create\n  #       validate\n  #       validate_optional } = require '../../../apps/cleartype'\n  #     #.....................................................................................................\n  #     @eq (     Ωctt__69 = -> isa               lt_types.lt_nodelist, 337465              ), false\n  #     @eq (     Ωctt__70 = -> isa               lt_types.lt_nodelist, []                  ), true\n  #     @eq (     Ωctt__71 = -> isa               lt_types.lt_nodelist, [ 'name', ]         ), true\n  #     @eq (     Ωctt__72 = -> isa               lt_types.lt_nodelist, [ 'name', 3, ]      ), false\n  #     @eq (     Ωctt__73 = -> isa_optional      lt_types.lt_nodelist, 337465              ), false\n  #     @eq (     Ωctt__74 = -> isa_optional      lt_types.lt_nodelist, null                ), true\n  #     @eq (     Ωctt__75 = -> create            lt_types.lt_nodelist, undefined           ), []\n  #     @throws ( Ωctt__76 = -> create            lt_types.lt_nodelist, { loners: 7, }      ), /validation error/\n  #     @eq (     Ωctt__77 = -> validate_optional lt_types.lt_nodelist, []                  ), []\n  #     @eq (     Ωctt__78 = -> validate_optional lt_types.lt_nodelist, null                ), null\n  #     # @eq (     Ωctt__79 = -> validate          lt_types.lt_nodelist, { loners: true, }  ), { loners: true, }\n  #     # @throws ( Ωctt__80 = -> validate          lt_types.lt_nodelist, { loners: 8, }     ), /validation error/\n  #     # @throws ( Ωctt__81 = -> validate_optional lt_types.lt_nodelist, { loners: 8, }     ), /validation error/\n  #     #.....................................................................................................\n  #     return null\n\n  #   #-------------------------------------------------------------------------------------------------------\n  #   lt_add_cfg: ->\n  #     { Cleartype\n  #       std } = require '../../../apps/cleartype'\n  #     { lt_types }  = get_typespaces()\n  #     { isa\n  #       isa_optional\n  #       create\n  #       validate\n  #       validate_optional } = require '../../../apps/cleartype'\n  #     #.....................................................................................................\n  #     @eq (     Ωctt__82 = -> isa               lt_types.lt_add_cfg.name, 337465              ), false\n  #     @eq (     Ωctt__83 = -> isa               lt_types.lt_add_cfg.name, ''                  ), false\n  #     @eq (     Ωctt__84 = -> isa               lt_types.lt_add_cfg.name, 'foo'               ), true\n  #     @eq (     Ωctt__85 = -> isa               lt_types.lt_add_cfg.needs, 337465             ), false\n  #     @eq (     Ωctt__86 = -> isa               lt_types.lt_add_cfg.needs, [ 337465, ]        ), false\n  #     @eq (     Ωctt__87 = -> isa               lt_types.lt_add_cfg.needs, [ '337465', ]      ), true\n  #     @eq (     Ωctt__88 = -> isa               lt_types.lt_add_cfg.needs, []                 ), true\n  #     @eq (     Ωctt__89 = -> isa               lt_types.lt_add_cfg.precedes, 337465          ), false\n  #     @eq (     Ωctt__90 = -> isa               lt_types.lt_add_cfg.precedes, [ 337465, ]     ), false\n  #     @eq (     Ωctt__91 = -> isa               lt_types.lt_add_cfg.precedes, []              ), true\n  #     @eq (     Ωctt__92 = -> isa               lt_types.lt_add_cfg.precedes, [ '337465', ]   ), true\n  #     @eq (     Ωctt__93 = -> isa               lt_types.lt_add_cfg, 337465                   ), false\n  #     @eq (     Ωctt__94 = -> isa               lt_types.lt_add_cfg, {}                       ), false\n  #     @eq (     Ωctt__95 = -> isa               lt_types.lt_add_cfg, { name: 'g', precedes: null, needs: null     }    ), true\n  #     @eq (     Ωctt__96 = -> isa               lt_types.lt_add_cfg, { name: 'g', precedes: [], needs: [ 'name', ]     }    ), true\n  #     @eq (     Ωctt__97 = -> isa               lt_types.lt_add_cfg, { name: 'g', precedes: [], needs: [ 'name', 3, ]  }    ), false\n  #     @eq (     Ωctt__98 = -> create            lt_types.lt_add_cfg, { name: 'g', precedes: [], needs: [ 'name', ]     }    ), { name: 'g', precedes: [], needs: [ 'name', ]  }\n  #     @eq (     Ωctt__99 = -> create            lt_types.lt_add_cfg, { name: 'g',                                      }    ), { name: 'g', precedes: null, needs: null  }\n  #     # @eq (     Ωctt_100 = -> isa_optional      lt_types.lt_add_cfg, 337465              ), false\n  #     # @eq (     Ωctt_101 = -> isa_optional      lt_types.lt_add_cfg, null                ), true\n  #     # @eq (     Ωctt_102 = -> create            lt_types.lt_add_cfg, undefined           ), []\n  #     # @throws ( Ωctt_103 = -> create            lt_types.lt_add_cfg, { loners: 7, }      ), /validation error/\n  #     # @eq (     Ωctt_104 = -> validate_optional lt_types.lt_add_cfg, []                  ), []\n  #     # @eq (     Ωctt_105 = -> validate_optional lt_types.lt_add_cfg, null                ), null\n  #     # @eq (     Ωctt_106 = -> validate          lt_types.lt_add_cfg, { loners: true, }  ), { loners: true, }\n  #     # @throws ( Ωctt_107 = -> validate          lt_types.lt_add_cfg, { loners: 8, }     ), /validation error/\n  #     # @throws ( Ωctt_108 = -> validate_optional lt_types.lt_add_cfg, { loners: 8, }     ), /validation error/\n  #     #.....................................................................................................\n  #     return null\n\n  #   #-------------------------------------------------------------------------------------------------------\n  #   lt_linearize_cfg: ->\n  #     { Cleartype\n  #       std } = require '../../../apps/cleartype'\n  #     { lt_types }  = get_typespaces()\n  #     { isa\n  #       isa_optional\n  #       create\n  #       validate\n  #       validate_optional } = require '../../../apps/cleartype'\n  #     #.....................................................................................................\n  #     @eq (     Ωctt_109 = -> isa               lt_types.lt_linearize_cfg, 337465                   ), false\n  #     @eq (     Ωctt_110 = -> isa               lt_types.lt_linearize_cfg, {}                       ), false\n  #     @eq (     Ωctt_111 = -> isa               lt_types.lt_linearize_cfg, { groups: 5, }           ), false\n  #     @eq (     Ωctt_112 = -> isa               lt_types.lt_linearize_cfg, { groups: true, }        ), true\n  #     @eq (     Ωctt_113 = -> isa               lt_types.lt_linearize_cfg, { groups: false, }       ), true\n  #     @eq (     Ωctt_114 = -> create            lt_types.lt_linearize_cfg, { groups: true,  }       ), { groups: true, }\n  #     @eq (     Ωctt_115 = -> create            lt_types.lt_linearize_cfg, { groups: false, }       ), { groups: false, }\n  #     @eq (     Ωctt_116 = -> create            lt_types.lt_linearize_cfg, {}                       ), { groups: false, }\n  #     @eq (     Ωctt_117 = -> create            lt_types.lt_linearize_cfg, null                     ), { groups: false, }\n  #     #.....................................................................................................\n  #     return null\n\n  #=========================================================================================================\n  standard_basic_methods:\n\n    #-------------------------------------------------------------------------------------------------------\n    type_of: ->\n      { type_of } = require '../../../apps/cleartype'\n      @eq ( Ωctt_118 = -> type_of null                  ), 'null'\n      @eq ( Ωctt_119 = -> type_of undefined             ), 'undefined'\n      @eq ( Ωctt_120 = -> type_of +Infinity             ), 'infinity'\n      @eq ( Ωctt_121 = -> type_of -Infinity             ), 'infinity'\n      @eq ( Ωctt_122 = -> type_of true                  ), 'boolean'\n      @eq ( Ωctt_123 = -> type_of false                 ), 'boolean'\n      @eq ( Ωctt_124 = -> type_of NaN                   ), 'nan'\n      @eq ( Ωctt_125 = -> type_of 8                     ), 'float'\n      @eq ( Ωctt_126 = -> type_of /xxx/                 ), 'regex'\n      @eq ( Ωctt_127 = -> type_of 'xyz'                 ), 'text'\n      @eq ( Ωctt_128 = -> type_of [ 'xyz', ]            ), 'list'\n      @eq ( Ωctt_129 = -> type_of {}                    ), 'object'\n      #.....................................................................................................\n      return null\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  guytest_cfg = { throw_on_error: true, show_passes: false, report_checks: false, }\n  ( new Test guytest_cfg ).test @cleartype_tasks\n"
  ]
}