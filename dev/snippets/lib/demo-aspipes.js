(async function() {
  'use strict';
  var GTNG, GUY, Test, alert, createAsPipes, debug, demo, echo, f, help, info, inspect, log, plain, praise, reverse, rpr, urge, warn, whisper;

  GUY = require('guy');

  ({alert, debug, help, info, plain, praise, urge, warn, whisper} = GUY.trm.get_loggers('bricabrac-sfmodules/test-basics'));

  ({rpr, inspect, echo, reverse, log} = GUY.trm);

  // WGUY                      = require '../../../apps/webguy'
  GTNG = require('../../../apps/guy-test-NG');

  ({Test} = GTNG);

  ({f} = require('../../../apps/effstring'));

  ({createAsPipes} = require('aspipes'));

  demo = async function() {
    var asPipe, pipe, take;
    //===========================================================================================================
    ({pipe, asPipe, take} = createAsPipes());
    debug('Ωap___1', pipe);
    
  const upper = asPipe((s) => s.toUpperCase());
  const ex = asPipe((s, mark = '!') => s + mark);
  const greeting = pipe('hello');
  greeting
    | upper
    | ex('!!!');
  ;
    info('Ωap___2', greeting);
    info('Ωap___3', (await greeting.run()));
    return null;
  };

  //===========================================================================================================
  if (module === require.main) {
    await (async() => {
      return (await demo());
    })();
  }

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2RlbW8tYXNwaXBlcy5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFBQTtBQUFBLE1BQUEsSUFBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsS0FBQSxFQUFBLGFBQUEsRUFBQSxLQUFBLEVBQUEsSUFBQSxFQUFBLElBQUEsRUFBQSxDQUFBLEVBQUEsSUFBQSxFQUFBLElBQUEsRUFBQSxPQUFBLEVBQUEsR0FBQSxFQUFBLEtBQUEsRUFBQSxNQUFBLEVBQUEsT0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsSUFBQSxFQUFBOztFQUVBLEdBQUEsR0FBNEIsT0FBQSxDQUFRLEtBQVI7O0VBQzVCLENBQUEsQ0FBRSxLQUFGLEVBQ0UsS0FERixFQUVFLElBRkYsRUFHRSxJQUhGLEVBSUUsS0FKRixFQUtFLE1BTEYsRUFNRSxJQU5GLEVBT0UsSUFQRixFQVFFLE9BUkYsQ0FBQSxHQVE0QixHQUFHLENBQUMsR0FBRyxDQUFDLFdBQVIsQ0FBb0IsaUNBQXBCLENBUjVCOztFQVNBLENBQUEsQ0FBRSxHQUFGLEVBQ0UsT0FERixFQUVFLElBRkYsRUFHRSxPQUhGLEVBSUUsR0FKRixDQUFBLEdBSTRCLEdBQUcsQ0FBQyxHQUpoQyxFQVpBOzs7RUFrQkEsSUFBQSxHQUE0QixPQUFBLENBQVEsMkJBQVI7O0VBQzVCLENBQUEsQ0FBRSxJQUFGLENBQUEsR0FBNEIsSUFBNUI7O0VBQ0EsQ0FBQSxDQUFFLENBQUYsQ0FBQSxHQUE0QixPQUFBLENBQVEseUJBQVIsQ0FBNUI7O0VBQ0EsQ0FBQSxDQUFFLGFBQUYsQ0FBQSxHQUE0QixPQUFBLENBQVEsU0FBUixDQUE1Qjs7RUFFQSxJQUFBLEdBQU8sTUFBQSxRQUFBLENBQUEsQ0FBQTtBQUNQLFFBQUEsTUFBQSxFQUFBLElBQUEsRUFBQSxJQUFBOztJQUNFLENBQUEsQ0FBRSxJQUFGLEVBQ0UsTUFERixFQUVFLElBRkYsQ0FBQSxHQUVZLGFBQUEsQ0FBQSxDQUZaO0lBR0EsS0FBQSxDQUFNLFNBQU4sRUFBaUIsSUFBakI7SUFDQTs7Ozs7Ozs7SUFRQSxJQUFBLENBQUssU0FBTCxFQUFnQixRQUFoQjtJQUNBLElBQUEsQ0FBSyxTQUFMLEVBQWdCLENBQUEsTUFBTSxRQUFRLENBQUMsR0FBVCxDQUFBLENBQU4sQ0FBaEI7QUFDQSxXQUFPO0VBaEJGLEVBdkJQOzs7RUEwQ0EsSUFBRyxNQUFBLEtBQVUsT0FBTyxDQUFDLElBQXJCO0lBQStCLE1BQVMsQ0FBQSxLQUFBLENBQUEsQ0FBQSxHQUFBO2FBQ3RDLENBQUEsTUFBTSxJQUFBLENBQUEsQ0FBTjtJQURzQyxDQUFBLElBQXhDOztBQTFDQSIsInNvdXJjZXNDb250ZW50IjpbIlxuJ3VzZSBzdHJpY3QnXG5cbkdVWSAgICAgICAgICAgICAgICAgICAgICAgPSByZXF1aXJlICdndXknXG57IGFsZXJ0XG4gIGRlYnVnXG4gIGhlbHBcbiAgaW5mb1xuICBwbGFpblxuICBwcmFpc2VcbiAgdXJnZVxuICB3YXJuXG4gIHdoaXNwZXIgfSAgICAgICAgICAgICAgID0gR1VZLnRybS5nZXRfbG9nZ2VycyAnYnJpY2FicmFjLXNmbW9kdWxlcy90ZXN0LWJhc2ljcydcbnsgcnByXG4gIGluc3BlY3RcbiAgZWNob1xuICByZXZlcnNlXG4gIGxvZyAgICAgfSAgICAgICAgICAgICAgID0gR1VZLnRybVxuIyBXR1VZICAgICAgICAgICAgICAgICAgICAgID0gcmVxdWlyZSAnLi4vLi4vLi4vYXBwcy93ZWJndXknXG5HVE5HICAgICAgICAgICAgICAgICAgICAgID0gcmVxdWlyZSAnLi4vLi4vLi4vYXBwcy9ndXktdGVzdC1ORydcbnsgVGVzdCAgICAgICAgICAgICAgICAgIH0gPSBHVE5HXG57IGYgfSAgICAgICAgICAgICAgICAgICAgID0gcmVxdWlyZSAnLi4vLi4vLi4vYXBwcy9lZmZzdHJpbmcnXG57IGNyZWF0ZUFzUGlwZXMsICAgICAgICB9ID0gcmVxdWlyZSAnYXNwaXBlcydcblxuZGVtbyA9IC0+XG4jPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgeyBwaXBlLFxuICAgIGFzUGlwZSxcbiAgICB0YWtlLCB9ID0gY3JlYXRlQXNQaXBlcygpXG4gIGRlYnVnICfOqWFwX19fMScsIHBpcGVcbiAgYGBgXG4gIGNvbnN0IHVwcGVyID0gYXNQaXBlKChzKSA9PiBzLnRvVXBwZXJDYXNlKCkpO1xuICBjb25zdCBleCA9IGFzUGlwZSgocywgbWFyayA9ICchJykgPT4gcyArIG1hcmspO1xuICBjb25zdCBncmVldGluZyA9IHBpcGUoJ2hlbGxvJyk7XG4gIGdyZWV0aW5nXG4gICAgfCB1cHBlclxuICAgIHwgZXgoJyEhIScpO1xuICBgYGBcbiAgaW5mbyAnzqlhcF9fXzInLCBncmVldGluZ1xuICBpbmZvICfOqWFwX19fMycsIGF3YWl0IGdyZWV0aW5nLnJ1bigpXG4gIHJldHVybiBudWxsXG5cbiM9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuaWYgbW9kdWxlIGlzIHJlcXVpcmUubWFpbiB0aGVuIGF3YWl0IGRvID0+XG4gIGF3YWl0IGRlbW8oKVxuIl19
