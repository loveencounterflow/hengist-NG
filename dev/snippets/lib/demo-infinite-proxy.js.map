{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-infinite-proxy.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'demo-proxy'\n{ rpr\n  inspect\n  echo\n  white\n  gold\n  red\n  reverse\n  log     }               = GUY.trm\n{ f }                     = require '../../../apps/effstring'\nwrite                     = ( p ) -> process.stdout.write p\nA                         = require 'ansis'\n\n\n#===========================================================================================================\ndemo_proxy = ->\n  stack = []\n  new_infiniprox_B = ( base ) ->\n    R = new Proxy base,\n      get: ( target, key ) ->\n        return target[ key ] if ( typeof key ) is 'symbol'\n        debug 'Ω___1', ( A.green.inverse.bold ' B ' ), { target, key, }, stack\n        stack.push key\n        return R\n    return R\n  new_infiniprox = ( base ) ->\n    R = new_infiniprox_B base\n    return new Proxy base,\n      get: ( target, key ) ->\n        return target[ key ] if ( typeof key ) is 'symbol'\n        debug 'Ω___1', ( A.red.inverse.bold ' A ' ), { target, key, }, stack\n        stack.length = 0\n        stack.push key\n        return R\n    return R\n  #.........................................................................................................\n  base = ( P... ) ->\n    debug 'Ω___2', P\n    R = \"#{stack.join '.'}::#{rpr P}\"\n    stack.length = 0\n    return R\n  p = new_infiniprox base\n  info 'Ω___3', p\n  info 'Ω___4', p.arc\n  # info 'Ω___5', p.arc.bo\n  # info 'Ω___6', p.arc.bo.cy\n  info 'Ω___7', p.arc.bo.cy 8\n  info 'Ω___8', p.ooops\n  info 'Ω___9', p.wat\n  info 'Ω___9', p.nö\n  info 'Ω__10', p.arc.bo.cy\"some text\"\n  info 'Ω__10', p.arc.bo.cy.dean.blah\"some text\"\n  return null\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  demo_proxy()\n"
  ]
}