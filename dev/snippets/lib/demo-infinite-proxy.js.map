{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-infinite-proxy.coffee"
  ],
  "names": [],
  "mappings": "AAGA;EAAA;AAAA,MAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,UAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,KAAA,EAAA,KAAA;;;EAGA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,CAAA,CAAE,KAAF,EACE,KADF,EAEE,IAFF,EAGE,IAHF,EAIE,KAJF,EAKE,MALF,EAME,IANF,EAOE,IAPF,EAQE,OARF,CAAA,GAQ4B,GAAG,CAAC,GAAG,CAAC,WAAR,CAAoB,YAApB,CAR5B;;EASA,CAAA,CAAE,GAAF,EACE,OADF,EAEE,IAFF,EAGE,KAHF,EAIE,IAJF,EAKE,GALF,EAME,OANF,EAOE,GAPF,CAAA,GAO4B,GAAG,CAAC,GAPhC;;EAQA,CAAA,CAAE,CAAF,CAAA,GAA4B,OAAA,CAAQ,yBAAR,CAA5B;;EACA,KAAA,GAA4B,QAAA,CAAE,CAAF,CAAA;WAAS,OAAO,CAAC,MAAM,CAAC,KAAf,CAAqB,CAArB;EAAT,EAtB5B;;;EA0BA,UAAA,GAAa,QAAA,CAAA,CAAA;AACb,QAAA,IAAA,EAAA,cAAA,EAAA,CAAA,EAAA;IAAE,KAAA,GAAQ;IACR,cAAA,GAAiB,QAAA,CAAE,IAAF,CAAA;AACnB,UAAA;MAAI,CAAA,GAAI,IAAI,KAAJ,CAAU,IAAV,EACF;QAAA,GAAA,EAAK,QAAA,CAAE,MAAF,EAAU,GAAV,CAAA;UACH,IAAwB,CAAE,OAAO,GAAT,CAAA,KAAkB,QAA1C;AAAA,mBAAO,MAAM,CAAE,GAAF,EAAb;;UACA,KAAA,CAAM,OAAN,EAAe,CAAE,MAAF,EAAU,GAAV,CAAf,EAAiC,KAAjC;UACA,KAAK,CAAC,IAAN,CAAW,GAAX;AACA,iBAAO;QAJJ;MAAL,CADE;AAMJ,aAAO;IAPQ,EADnB;;IAUE,IAAA,GAAO,QAAA,CAAA,GAAE,CAAF,CAAA;AACT,UAAA;MAAI,KAAA,CAAM,OAAN,EAAe,CAAf;MACA,CAAA,GAAI,KAAK,CAAC,IAAN,CAAW,GAAX;MACJ,KAAK,CAAC,MAAN,GAAe;AACf,aAAO;IAJF;IAKP,CAAA,GAAI,cAAA,CAAe,IAAf;IACJ,IAAA,CAAK,OAAL,EAAc,CAAd;IACA,IAAA,CAAK,OAAL,EAAc,CAAC,CAAC,GAAhB,EAjBF;;;IAoBE,IAAA,CAAK,OAAL,EAAc,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAT,CAAY,CAAZ,CAAd;AACA,WAAO;EAtBI,EA1Bb;;;EAoDA,IAAG,MAAA,KAAU,OAAO,CAAC,IAArB;IAA+B,MAAS,CAAA,CAAA,CAAA,GAAA;aACtC,UAAA,CAAA;IADsC,CAAA,IAAxC;;AApDA",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'demo-proxy'\n{ rpr\n  inspect\n  echo\n  white\n  gold\n  red\n  reverse\n  log     }               = GUY.trm\n{ f }                     = require '../../../apps/effstring'\nwrite                     = ( p ) -> process.stdout.write p\n\n\n#===========================================================================================================\ndemo_proxy = ->\n  stack = []\n  new_infiniprox = ( base ) ->\n    R = new Proxy base,\n      get: ( target, key ) ->\n        return target[ key ] if ( typeof key ) is 'symbol'\n        debug 'Ω___1', { target, key, }, stack\n        stack.push key\n        return R\n    return R\n  #.........................................................................................................\n  base = ( P... ) ->\n    debug 'Ω___8', P\n    R = stack.join '.'\n    stack.length = 0\n    return R\n  p = new_infiniprox base\n  info 'Ω___9', p\n  info 'Ω__10', p.arc\n  # info 'Ω__11', p.arc.bo\n  # info 'Ω__12', p.arc.bo.cy\n  info 'Ω__13', p.arc.bo.cy 8\n  return null\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  demo_proxy()\n"
  ]
}