{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-show-pretty-printer.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'demo-execa'\n{ rpr\n  inspect\n  echo\n  white\n  gold\n  red\n  reverse\n  log     }               = GUY.trm\nPATH                      = require 'node:path'\n{ execa\n  $ }                     = require 'execa'\n{ f }                     = require '../../../apps/effstring'\nwrite                     = ( p ) -> process.stdout.write p\nTMPTRM                    = GUY.trm\nC                         = require 'ansis'\n\n\n###\nblack\nblue\ngreen\ncyan\nsepia\nindigo\nsteel\nbrown\nolive\nlime\nred\ncrimson\nplum\npink\norange\ngold\ntan\nyellow\ngrey\ndarkgrey\nwhite\nBASE03\nBASE02\nBASE01\nBASE00\nBASE0\nBASE1\nBASE2\nBASE3\nYELLOW\nORANGE\nRED\nMAGENTA\nVIOLET\nBLUE\nCYAN\nGREEN\n###\n\n\n#-----------------------------------------------------------------------------------------------------------\nobject_prototype  = Object.getPrototypeOf {}\npod_prototypes    = [ null, object_prototype, ]\n\n#-----------------------------------------------------------------------------------------------------------\ntype_of = ( x ) ->\n  #.........................................................................................................\n  ### Primitives: ###\n  return 'null'         if x is null\n  return 'undefined'    if x is undefined\n  return 'infinity'     if ( x is +Infinity ) or ( x is -Infinity )\n  # return 'boolean'      if ( x is true ) or ( x is false )\n  return 'true'         if ( x is true )\n  return 'false'        if ( x is false )\n  return 'nan'          if Number.isNaN     x\n  return 'float'        if Number.isFinite  x\n  # return 'unset'        if x is unset\n  return 'pod'          if ( Object.getPrototypeOf x ) in pod_prototypes\n  #.........................................................................................................\n  switch jstypeof = typeof x\n    when 'string'                       then return 'text'\n    when 'symbol'                       then return 'symbol'\n  #.........................................................................................................\n  return 'list'         if Array.isArray  x\n  ### TAINT consider to return x.constructor.name ###\n  switch millertype = ( ( Object::toString.call x ).replace /^\\[object ([^\\]]+)\\]$/, '$1' ).toLowerCase()\n    when 'regexp'                       then return 'regex'\n  return millertype\n  # switch millertype = Object::toString.call x\n  #   when '[object Function]'            then return 'function'\n  #   when '[object AsyncFunction]'       then return 'asyncfunction'\n  #   when '[object GeneratorFunction]'   then return 'generatorfunction'\n\n#===========================================================================================================\n### thx to https://github.com/sindresorhus/identifier-regex ###\njsid_re   = ///^ [ $ _ \\p{ID_Start} ] [ $ _ \\u200C \\u200D \\p{ID_Continue} ]* $///v\nisa_jsid  = ( x ) -> ( ( typeof x ) is 'string' ) and jsid_re.test x\n\n\n#===========================================================================================================\nclass Show\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ->\n    me = ( x ) =>\n      return ( text for text from @pen x ).join ''\n    Object.setPrototypeOf me, @\n    @state  = { level: 0, ended_with_nl: false, }\n    @spacer = '\\x20\\x20'\n    Object.defineProperty @, 'dent',\n      get: => @spacer.repeat @state.level\n    return me\n\n  #---------------------------------------------------------------------------------------------------------\n  pen: ( x ) ->\n    for text from @dispatch x\n      @state.ended_with_nl = text.endsWith '\\n'\n      yield text\n    unless @state.ended_with_nl\n      @state.ended_with_nl = true\n      # yield '\\n'\n    return null\n\n\n  #---------------------------------------------------------------------------------------------------------\n  go_down: ->\n    @state.level++\n    return @state.level\n\n  #---------------------------------------------------------------------------------------------------------\n  go_up: ->\n    if @state.level < 1\n      throw new Error \"Ω___1 unable to go below level 0\"\n    @state.level--\n    return @state.level\n\n  #---------------------------------------------------------------------------------------------------------\n  dispatch: ( x ) ->\n    if ( method = @[ \"show_#{type_of x}\" ] )?\n      yield from method.call @, x\n    else\n      yield from @show_other x\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _show_key: ( key ) ->\n    if isa_jsid key then return TMPTRM.cyan key\n    return [ ( t for t from @dispatch key )..., ].join ''\n\n  #---------------------------------------------------------------------------------------------------------\n  show_pod: ( x ) ->\n    has_keys = false\n    yield colors.pod '{'\n    #.......................................................................................................\n    for key, value of x\n      ### TAINT code duplication ###\n      has_keys = true\n      yield ' ' + ( @_show_key key ) + colors.pod ': '\n      for text from @dispatch value\n        yield text\n      yield colors.pod ','\n    #.......................................................................................................\n    yield colors.pod if ( not has_keys ) then '}' else ' }'\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  show_map: ( x ) ->\n    has_keys = false\n    yield colors.map 'map{'\n    #.......................................................................................................\n    for [ key, value, ] from x.entries()\n      ### TAINT code duplication ###\n      has_keys = true\n      yield ' ' + ( @_show_key key ) + colors.map ': '\n      for text from @dispatch value\n        yield text\n      yield colors.map ','\n    #.......................................................................................................\n    yield colors.map if ( not has_keys ) then '}' else ' }'\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  show_list: ( x ) ->\n    yield colors.list '['\n    for element in x\n      ### TAINT code duplication ###\n      for text from @dispatch element\n        yield ' ' + text + ( colors.list ',' )\n    yield colors.list if ( x.length is 0 ) then ']' else ' ]'\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  show_set: ( x ) ->\n    yield colors.set 'set['\n    for element from x.keys()\n      ### TAINT code duplication ###\n      for text from @dispatch element\n        yield ' ' + text + colors.set ','\n    yield colors.set if ( x.length is 0 ) then ']' else ' ]'\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  show_text: ( x ) ->\n    if \"'\" in x then  yield colors.text '\"' + ( x.replace /\"/g, '\\\\\"' ) + '\"'\n    else              yield colors.text \"'\" + ( x.replace /'/g, \"\\\\'\" ) + \"'\"\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  show_float: ( x ) ->\n    yield ( colors.float x.toString() )\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  show_regex: ( x ) ->\n    yield ( colors.regex x.toString() )\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  ### full words: ###\n  # show_true:      ( x ) -> yield ( colors.true      'true'      )\n  # show_false:     ( x ) -> yield ( colors.false     'false'     )\n  # show_undefined: ( x ) -> yield ( colors.undefined 'undefined' )\n  # show_null:      ( x ) -> yield ( colors.null      'null'      )\n  # show_nan:       ( x ) -> yield ( colors.nan       'NaN'       )\n  ### (mostly) single letters: ###\n  show_true:      ( x ) -> yield ( colors.true      ' T '     )\n  show_false:     ( x ) -> yield ( colors.false     ' F '     )\n  show_undefined: ( x ) -> yield ( colors.undefined ' U '     )\n  show_null:      ( x ) -> yield ( colors.null      ' N '     )\n  show_nan:       ( x ) -> yield ( colors.nan       ' NaN '   )\n\n  #---------------------------------------------------------------------------------------------------------\n  show_other: ( x ) ->\n    # yield '\\n' unless @state.ended_with_nl\n    yield colors.other \"#{x}\"\n    return null\n\n#===========================================================================================================\nCOLOR = new C.Ansis().extend\n  aliceblue:                  '#f0f8ff'\n  antiquewhite:               '#faebd7'\n  aqua:                       '#00ffff'\n  aquamarine:                 '#7fffd4'\n  azure:                      '#f0ffff'\n  beige:                      '#f5f5dc'\n  bisque:                     '#ffe4c4'\n  black:                      '#000000'\n  blanchedalmond:             '#ffebcd'\n  blue:                       '#0000ff'\n  blueviolet:                 '#8a2be2'\n  brown:                      '#a52a2a'\n  burlywood:                  '#deb887'\n  cadetblue:                  '#5f9ea0'\n  chartreuse:                 '#7fff00'\n  chocolate:                  '#d2691e'\n  coral:                      '#ff7f50'\n  cornflowerblue:             '#6495ed'\n  cornsilk:                   '#fff8dc'\n  crimson:                    '#dc143c'\n  cyan:                       '#00ffff'\n  darkblue:                   '#00008b'\n  darkcyan:                   '#008b8b'\n  darkgoldenrod:              '#b8860b'\n  darkgray:                   '#a9a9a9'\n  darkgreen:                  '#006400'\n  darkkhaki:                  '#bdb76b'\n  darkmagenta:                '#8b008b'\n  darkolivegreen:             '#556b2f'\n  darkorange:                 '#ff8c00'\n  darkorchid:                 '#9932cc'\n  darkred:                    '#8b0000'\n  darksalmon:                 '#e9967a'\n  darkseagreen:               '#8fbc8f'\n  darkslateblue:              '#483d8b'\n  darkslategray:              '#2f4f4f'\n  darkturquoise:              '#00ced1'\n  darkviolet:                 '#9400d3'\n  deeppink:                   '#ff1493'\n  deepskyblue:                '#00bfff'\n  dimgray:                    '#696969'\n  dodgerblue:                 '#1e90ff'\n  firebrick:                  '#b22222'\n  floralwhite:                '#fffaf0'\n  forestgreen:                '#228b22'\n  gainsboro:                  '#dcdcdc'\n  ghostwhite:                 '#f8f8ff'\n  gold:                       '#ffd700'\n  goldenrod:                  '#daa520'\n  gray:                       '#808080'\n  green:                      '#008000'\n  greenyellow:                '#adff2f'\n  honeydew:                   '#f0fff0'\n  hotpink:                    '#ff69b4'\n  indianred:                  '#cd5c5c'\n  indigo:                     '#4b0082'\n  ivory:                      '#fffff0'\n  khaki:                      '#f0e68c'\n  lavender:                   '#e6e6fa'\n  lavenderblush:              '#fff0f5'\n  lawngreen:                  '#7cfc00'\n  lemonchiffon:               '#fffacd'\n  lightblue:                  '#add8e6'\n  lightcoral:                 '#f08080'\n  lightcyan:                  '#e0ffff'\n  lightgoldenrodyellow:       '#fafad2'\n  lightgray:                  '#d3d3d3'\n  lightgreen:                 '#90ee90'\n  lightpink:                  '#ffb6c1'\n  lightsalmon:                '#ffa07a'\n  lightseagreen:              '#20b2aa'\n  lightskyblue:               '#87cefa'\n  lightslategray:             '#778899'\n  lightsteelblue:             '#b0c4de'\n  lightyellow:                '#ffffe0'\n  lime:                       '#00ff00'\n  limegreen:                  '#32cd32'\n  linen:                      '#faf0e6'\n  magenta:                    '#ff00ff'\n  maroon:                     '#800000'\n  mediumaquamarine:           '#66cdaa'\n  mediumblue:                 '#0000cd'\n  mediumorchid:               '#ba55d3'\n  mediumpurple:               '#9370db'\n  mediumseagreen:             '#3cb371'\n  mediumslateblue:            '#7b68ee'\n  mediumspringgreen:          '#00fa9a'\n  mediumturquoise:            '#48d1cc'\n  mediumvioletred:            '#c71585'\n  midnightblue:               '#191970'\n  mintcream:                  '#f5fffa'\n  mistyrose:                  '#ffe4e1'\n  moccasin:                   '#ffe4b5'\n  navajowhite:                '#ffdead'\n  navy:                       '#000080'\n  oldlace:                    '#fdf5e6'\n  olive:                      '#808000'\n  olivedrab:                  '#6b8e23'\n  orange:                     '#ffa500'\n  orangered:                  '#ff4500'\n  orchid:                     '#da70d6'\n  palegoldenrod:              '#eee8aa'\n  palegreen:                  '#98fb98'\n  paleturquoise:              '#afeeee'\n  palevioletred:              '#db7093'\n  papayawhip:                 '#ffefd5'\n  peachpuff:                  '#ffdab9'\n  peru:                       '#cd853f'\n  pink:                       '#ffc0cb'\n  plum:                       '#dda0dd'\n  powderblue:                 '#b0e0e6'\n  purple:                     '#800080'\n  red:                        '#ff0000'\n  rosybrown:                  '#bc8f8f'\n  royalblue:                  '#4169e1'\n  saddlebrown:                '#8b4513'\n  salmon:                     '#fa8072'\n  sandybrown:                 '#f4a460'\n  seagreen:                   '#2e8b57'\n  seashell:                   '#fff5ee'\n  sienna:                     '#a0522d'\n  silver:                     '#c0c0c0'\n  skyblue:                    '#87ceeb'\n  slateblue:                  '#6a5acd'\n  slategray:                  '#708090'\n  snow:                       '#fffafa'\n  springgreen:                '#00ff7f'\n  steelblue:                  '#4682b4'\n  tan:                        '#d2b48c'\n  teal:                       '#008080'\n  thistle:                    '#d8bfd8'\n  tomato:                     '#ff6347'\n  turquoise:                  '#40e0d0'\n  violet:                     '#ee82ee'\n  wheat:                      '#f5deb3'\n  white:                      '#ffffff'\n  whitesmoke:                 '#f5f5f5'\n  yellow:                     '#ffff00'\n  yellowgreen:                '#9acd32'\n  #.........................................................................................................\n  FANCYRED:                   '#fd5230'\n  FANCYORANGE:                '#fd6d30'\n  # oomph: ( x ) -> debug 'Ω___2', x; return \"~~~ #{x} ~~~\"\n\ncolors =\n  pod:        ( x ) -> COLOR.gold                             x\n  map:        ( x ) -> COLOR.gold                             x\n  list:       ( x ) -> COLOR.gold                             x\n  set:        ( x ) -> COLOR.gold                             x\n  text:       ( x ) -> COLOR.wheat                            x\n  float:      ( x ) -> COLOR.FANCYRED                         x\n  regex:      ( x ) -> COLOR.plum                             x\n  true:       ( x ) -> COLOR.inverse.bold.italic.lime         x\n  false:      ( x ) -> COLOR.inverse.bold.italic.FANCYORANGE  x\n  undefined:  ( x ) -> COLOR.inverse.bold.italic.magenta      x\n  null:       ( x ) -> COLOR.inverse.bold.italic.blue         x\n  nan:        ( x ) -> COLOR.inverse.bold.italic.magenta      x\n  other:      ( x ) -> COLOR.inverse.red                      x\n\n#===========================================================================================================\nshow = new Show()\n\n\n#===========================================================================================================\ndemo_show = ->\n  debug 'Ω___3', show\n  debug 'Ω___4', show.state\n  debug 'Ω___5', rpr show.dent\n  debug 'Ω___6', show.go_down()\n  debug 'Ω___7', rpr show.dent\n  echo()\n  echo '-----------------------------------------------'\n  echo show \"foo 'bar'\"\n  echo '-----------------------------------------------'\n  echo show {}\n  echo '-----------------------------------------------'\n  echo show { kong: 108, low: 923, numbers: [ 10, 11, 12, ], }\n  echo '-----------------------------------------------'\n  echo show []\n  echo '-----------------------------------------------'\n  echo show [ 'some', 'words', 'to', 'show', 1, -1, false, ]\n  echo '-----------------------------------------------'\n  echo show new Map [ [ 'kong', 108, ], [ 'low', 923, ], [ 971, 'word', ], [ true, '+1', ], [ 'a b c', false, ] ]\n  echo '-----------------------------------------------'\n  echo show new Set [ 'some', 'words', true, false, null, undefined, 3.1415926, NaN, ]\n  echo '-----------------------------------------------'\n  echo show /abc[de]/\n  echo '-----------------------------------------------'\n  echo show Buffer.from 'abcäöü'\n  echo '-----------------------------------------------'\n  echo()\n  return null\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  # await demo_execa()\n  demo_show()\n  echo 'Ω___8', ( C.hex('#FF75D1').bold.underline 'Pink'  ), 'XXX'\n  echo 'Ω___9', ( C.yellow ( C.red.bold.inverse 'Pink'      ), 'XXX' )\n  echo 'Ω__10', ( C.yellow \"!!! #{C.red.bold.inverse 'Pink'} XXX\" )\n  echo 'Ω__11', ( TMPTRM.yellow \"!!! #{TMPTRM.red TMPTRM.bold TMPTRM.reverse 'Pink'} XXX\" )\n  echo 'Ω__12', ( C.bgBlue.yellow.bold \" ooops \" )\n  echo 'Ω__13', ( C.bgBlue.red.bold \" ooops \" )\n  echo 'Ω__14', ( C.bgBlue.green.bold \" ooops \" )\n  echo 'Ω__15', ( C.bgWhite.red.bold -12345.87 )\n  echo()\n  echo 'Ω__16', ( C.bgWhite.red.bold\" there was an #{C.bgRed.white\"ERROR\"} in the #{C.dim\"pudding\"} \" )\n  echo()\n  echo 'Ω__17', ( C.bgWhite.red.bold\" there was an #{C.inverse\"ERROR\"} in the #{C.dim\"pudding\"} \" )\n  echo()\n  echo 'Ω__18', ( C.bgYellow.black.bold\" there was an #{C.inverse\"ERROR\"} in the #{C.dim\"pudding\"} \" )\n  echo()\n  echo 'Ω__19', ( C.bgYellow.dim.black.bold\" there was an #{C.inverse\"ERROR\"} in the #{C.dim\"pudding\"} \" )\n  echo()\n  echo 'Ω__20', ( C.bgBlack.cyan.bold\" there was an #{C.inverse\"ERROR\"} in the \\n#{C.dim\"pudding\"} \" )\n  echo()\n  echo 'Ω__21', C.red.italic\"Error: #{C.yellow\"Module #{C.green\"ansis\"} is missing!\"} Installation required.\"\n  echo()\n  my_theme =\n    orange: '#ffab40'\n    pink:   '#ff75d1'\n    red:    '#ff0000'\n  D = new C.Ansis().extend my_theme\n  echo 'Ω__22', ( k for k of D )\n  echo 'Ω__23', TMPTRM.red \"Error: Installation required.\"\n  echo 'Ω__24', C.red\"Error: Installation required.\"\n  echo 'Ω__25', D.red\"Error: Installation required.\"\n  echo 'Ω__26', D.orange.italic\"Error: #{D.blue\"Module #{D.pink\"ansis\"} is missing!\"} Installation required.\"\n  echo()\n  red = D.red\n  echo 'Ω__27', red\"woo\"\n  echo 'Ω__28', red.italic\"woo\"\n  em = red.italic.bold.inverse\n  echo 'Ω__29', em\"emphasize: #{ show { d: 6, }} not bad\"\n\n\n\n\n"
  ]
}