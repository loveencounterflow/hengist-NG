{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-cleartype-types-as-classes.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n###\n\n1.  ```\n    class Type\n      ...\n    type      = new Type type_cfg\n    integer   = type.create { name: 'integer',  isa: ( -> ), ..., }\n    quantity  = type.create { name: 'quantity', isa: ( -> ), ..., q: ..., u: ..., }\n\n    # usage:\n    integer.create 3.141\n    ```\n\n2.  ```\n    class Integer extends Type\n      isa:     ( x ) -> Number.isInteger x\n      create:  ( x ) -> parseInt x, 10\n    integer = new Integer()\n\n    # usage:\n    integer.create 3.141\n    ```\n\n3.  ```\n    class integer extends Type\n      @isa:    ( x ) -> Number.isInteger x\n      @create: ( x ) -> parseInt x, 10\n\n    # usage:\n    integer.create 3.141\n    ```\n\n###\n\n\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'demo-execa'\n{ rpr\n  inspect\n  echo\n  reverse\n  bold\n  log     }               = GUY.trm\n{ hide }                  = GUY.props\n{ props: {\n    nameit } }            = require '../../../apps/webguy'\n{ f }                     = require '../../../apps/effstring'\nGTNG                      = require '../../../apps/guy-test-NG'\n{ Test                  } = GTNG\n\n\n#===========================================================================================================\nrequire_cleartype = ->\n  H = require '../../../apps/cleartype/lib/helpers'\n\n  #===========================================================================================================\n  class Type\n\n    #---------------------------------------------------------------------------------------------------------\n    constructor: ( dcl = null ) ->\n      throw new Error \"Ω___1 not allowed\" if dcl?\n      # H.bind_instance_methods @\n      return undefined\n\n    #---------------------------------------------------------------------------------------------------------\n    create: ( typename, dcl ) -> @constructor.from_declaration dcl\n\n    #---------------------------------------------------------------------------------------------------------\n    @from_declaration: ( typename, dcl ) ->\n      ### TAINT should wrap b/c of names? ###\n      return dcl if dcl instanceof @\n      #.......................................................................................................\n      fields = {}\n      #.......................................................................................................\n      ### TAINT condition should use API like 'has_property_but_value_isnt_null()' (?name?) ###\n      if ( Reflect.has dcl, 'refines' ) and ( dcl.refines isnt null )\n        unless ( dcl.refines instanceof @ )\n          ### TAINT use `type_of()` ###\n          throw new Error \"Ω___2 dcl.refines must be instanceof #{rpr @}, got #{rpr dcl.refines}\"\n        is_extension  = true\n        extension     = dcl.refines.constructor\n      else\n        is_extension  = false\n        extension     = @\n      #.......................................................................................................\n      has_fields = do =>\n        return false unless dcl.fields?\n        count = 0\n        for subtype_name, subtype of dcl.fields\n          count++\n          fields[ subtype_name ] = subtype\n        return count isnt 0\n      #.......................................................................................................\n      if dcl.isa?\n        switch true\n          when dcl.isa instanceof @\n            per_se_isa = do ( isa = dcl.isa.isa ) -> ( x ) -> isa x\n          when ( Object::toString.call dcl.isa ) is '[object Function]'\n            per_se_isa = dcl.isa\n          else throw new Error 'Ω___3'\n      #.......................................................................................................\n      ### TAINT decomplect logic ###\n      else\n        if has_fields\n          per_se_isa = ( x ) ->\n            return false unless x?\n            return false unless x.constructor in [ Object, undefined, ] ### stad.pod.isa x ###\n            for field_name, subtype of dcl.fields\n              continue if subtype.isa x[ field_name ]\n              ### TAINT use type_of ###\n              rejection = \"expected a #{subtype.name} for field #{rpr field_name}, got #{rpr x[ field_name ]}\"\n              warn 'Ω___4', rejection\n              return false\n            return true\n        else\n          unless is_extension\n            throw new Error \"Ω___5 type declaration must have one of 'fields', 'isa' or 'refines' properties, got none\"\n          per_se_isa = ( x ) -> true\n      #.......................................................................................................\n      if is_extension\n        ### TAINT review use of dcl.refines here ###\n        debug 'Ωcltt___6', typename, dcl.refines, dcl.refines.isa\n        isa = ( x ) -> ( dcl.refines.isa x ) and ( per_se_isa x )\n      else\n        isa = per_se_isa\n      #.......................................................................................................\n      create = dcl.create ? ( x ) -> x\n      # if dcl.create?\n      #   create = ( x ) -> dcl.create x\n      # else\n      #   ### TAINT check whether there are fields ###\n      #   fields = {}\n      #   for field_name, dsc of Object.getOwnPropertyDescriptors dcl\n      #.......................................................................................................\n      clasz = class extends extension\n        name:         typename\n        isa:          nameit ( @isaname_from_typename typename ), isa\n        create:       create\n        fields:       fields\n        has_fields:   has_fields\n      nameit ( clasz.classname_from_typename typename ), clasz\n      return new clasz()\n\n    #---------------------------------------------------------------------------------------------------------\n    @classname_from_typename = ( typename = null ) ->\n      R = ( typename ? 'anonymous' )\n      ### TAINT not Unicode-compliant ###\n      return ( R[ 0 ] ).toUpperCase() + R[ 1 .. ]\n\n    #---------------------------------------------------------------------------------------------------------\n    @isaname_from_typename = ( typename = null ) ->\n      R = ( typename ? 'anonymous' )\n      return \"isa_#{typename}\"\n\n    #---------------------------------------------------------------------------------------------------------\n    validate: ( x ) ->\n      return x if @isa x\n      throw new Error \"Ω___7 Cleartype_validation_error\"\n\n    #---------------------------------------------------------------------------------------------------------\n    isa: ( x ) -> x instanceof @constructor\n\n  #===========================================================================================================\n  class Typespace\n\n    #---------------------------------------------------------------------------------------------------------\n    add_types: ( dcls ) ->\n      ### TAINT name collisions possible ###\n      for typename, dcl of dcls\n        if Reflect.has @, typename\n          throw new Error \"Ω___8 name collision: type / property #{rpr typename} already declared\"\n        @[ typename ] = Type.from_declaration typename, dcl\n      return null\n\n  #===========================================================================================================\n  type  = new Type()\n  std   = new Typespace()\n\n  #===========================================================================================================\n  std.add_types\n    #.........................................................................................................\n    text:\n      isa:      ( x ) -> ( Object::toString.call x ) is '[object String]'\n      create:   ( x ) -> x?.toString() ? ''\n    #.........................................................................................................\n    float:\n      isa:      ( x ) -> Number.isFinite x\n      create:   ( n = 0 ) -> if x? then ( parseFloat x ) else 0\n    #.........................................................................................................\n    integer:\n      isa:      ( x ) -> Number.isInteger x\n      create:   ( n = 0 ) -> if x? then ( parseInt n, 10 ) else 0\n  #-----------------------------------------------------------------------------------------------------------\n  std.add_types\n    ###\n    nonempty_text:\n      isa:      std.text\n      refine:   ( x ) -> ( x.length isnt 0 )\n      create:   ( x ) -> x?.toString() ? ''\n    ###\n    #.........................................................................................................\n    nonempty_text:\n      refines:  std.text\n      # isa:      ( x ) -> ( std.text.isa x ) and ( x.length isnt 0 )\n      isa:      ( x ) -> ( x.length isnt 0 )\n      create:   ( x ) -> x?.toString() ? ''\n    #.........................................................................................................\n    quantity_q:\n      refines:  std.float\n      # isa: std.float.isa\n  #-----------------------------------------------------------------------------------------------------------\n  std.add_types\n    #.........................................................................................................\n    quantity_u:\n      refines:  std.nonempty_text\n  #-----------------------------------------------------------------------------------------------------------\n  std.add_types\n    #.........................................................................................................\n    quantity:\n      create:   ( cfg ) -> { q: 0, u: 'u', cfg..., }\n      fields:\n        q:      std.quantity_q\n        u:      std.quantity_u\n\n  #=========================================================================================================\n  return { std, Type, Typespace, }\n\n#===========================================================================================================\n@cleartype_tasks =\n  basics: ->\n    { Type\n      std2\n      std             } = require_cleartype()\n    info 'Ω___9', std\n    do =>\n      echo()\n      info 'Ω__10', std.integer\n      info 'Ω__11', std.integer.isa 3.141\n      info 'Ω__12', std.integer.isa 3\n      info 'Ω__13', std.integer.create '3'\n      info 'Ω__14', std.integer.create()\n    do =>\n      @eq ( Ωcltt__15 = -> std.text           instanceof Type ), true\n      @eq ( Ωcltt__16 = -> std.float          instanceof Type ), true\n      @eq ( Ωcltt__17 = -> std.integer        instanceof Type ), true\n      @eq ( Ωcltt__18 = -> std.nonempty_text  instanceof Type ), true\n      @eq ( Ωcltt__19 = -> std.quantity_q     instanceof Type ), true\n      @eq ( Ωcltt__20 = -> std.quantity_u     instanceof Type ), true\n      @eq ( Ωcltt__21 = -> std.quantity       instanceof Type ), true\n    do =>\n      @eq ( Ωcltt__22 = -> std.text.constructor.name          ), 'Text'\n      @eq ( Ωcltt__23 = -> std.float.constructor.name         ), 'Float'\n      @eq ( Ωcltt__24 = -> std.integer.constructor.name       ), 'Integer'\n      @eq ( Ωcltt__25 = -> std.nonempty_text.constructor.name ), 'Nonempty_text'\n      @eq ( Ωcltt__26 = -> std.quantity_q.constructor.name    ), 'Quantity_q'\n      @eq ( Ωcltt__27 = -> std.quantity_u.constructor.name    ), 'Quantity_u'\n      @eq ( Ωcltt__28 = -> std.quantity.constructor.name      ), 'Quantity'\n    do =>\n      @eq ( Ωcltt__29 = -> std.text.isa.name                  ), 'isa_text'\n      @eq ( Ωcltt__30 = -> std.float.isa.name                 ), 'isa_float'\n      @eq ( Ωcltt__31 = -> std.integer.isa.name               ), 'isa_integer'\n      @eq ( Ωcltt__32 = -> std.nonempty_text.isa.name         ), 'isa_nonempty_text'\n      @eq ( Ωcltt__33 = -> std.quantity_q.isa.name            ), 'isa_quantity_q'\n      @eq ( Ωcltt__34 = -> std.quantity_u.isa.name            ), 'isa_quantity_u'\n      @eq ( Ωcltt__35 = -> std.quantity.isa.name              ), 'isa_quantity'\n    do =>\n      @eq ( Ωcltt__36 = -> std.text.isa                  null ), false\n      @eq ( Ωcltt__37 = -> std.float.isa                 null ), false\n      @eq ( Ωcltt__38 = -> std.integer.isa               null ), false\n      @eq ( Ωcltt__39 = -> std.nonempty_text.isa         null ), false\n      @eq ( Ωcltt__40 = -> std.quantity_q.isa            null ), false\n      @eq ( Ωcltt__41 = -> std.quantity_u.isa            null ), false\n      @eq ( Ωcltt__42 = -> std.quantity.isa              null ), false\n    do =>\n      @eq ( Ωcltt__43 = -> std.text.isa                  Infinity ), false\n      @eq ( Ωcltt__44 = -> std.float.isa                 Infinity ), false\n      @eq ( Ωcltt__45 = -> std.integer.isa               Infinity ), false\n      @eq ( Ωcltt__46 = -> std.nonempty_text.isa         Infinity ), false\n      @eq ( Ωcltt__47 = -> std.quantity_q.isa            Infinity ), false\n      @eq ( Ωcltt__48 = -> std.quantity_u.isa            Infinity ), false\n      @eq ( Ωcltt__49 = -> std.quantity.isa              Infinity ), false\n    do =>\n      @eq ( Ωcltt__50 = -> std.text.isa           ''                        ), true\n      @eq ( Ωcltt__51 = -> std.float.isa          7.56                      ), true\n      @eq ( Ωcltt__52 = -> std.integer.isa        9                         ), true\n      @eq ( Ωcltt__53 = -> std.nonempty_text.isa  'www'                     ), true\n      @eq ( Ωcltt__54 = -> std.quantity_q.isa     1.5e32                    ), true\n      @eq ( Ωcltt__55 = -> std.quantity_u.isa     'km'                      ), true\n      @eq ( Ωcltt__56 = -> std.quantity.isa       { q: 1.5e32, u: 'km', }   ), true\n    do =>\n      echo()\n      info 'Ω__57', std.nonempty_text\n      @eq ( Ωcltt__58 = -> std.nonempty_text.isa 3.141                  ), false\n      @eq ( Ωcltt__59 = -> std.nonempty_text.isa ''                     ), false\n      @eq ( Ωcltt__60 = -> std.nonempty_text.isa 'd'                    ), true\n      @eq ( Ωcltt__61 = -> std.nonempty_text.create()                   ), ''\n      @eq ( Ωcltt__62 = -> std.nonempty_text.create false               ), 'false'\n      @eq ( Ωcltt__63 = -> std.nonempty_text.create 'd'                 ), 'd'\n    do =>\n      echo()\n      info 'Ω__64', std.quantity\n      @eq ( Ωcltt__65 = -> std.quantity.create()                        ), { q: 0, u: 'u', }\n      @eq ( Ωcltt__66 = -> std.quantity.create    { q: 4.3, u: 's', }   ), { q: 4.3, u: 's', }\n      info 'Ω__67', std.nonempty_text.create      'g'\n      info 'Ω__68', std.quantity_u.create         'g'\n      info 'Ω__69', std.quantity.fields.u.create  'g'\n    do =>\n      echo()\n      help 'Ω__70', std.quantity\n      help 'Ω__71', std.quantity.constructor\n      help 'Ω__72', std.quantity.constructor.name\n      help 'Ω__73', std.quantity.isa\n      help 'Ω__74', std.quantity.isa {}\n      help 'Ω__75', std.quantity.isa { u: 7, q: 3, }\n      help 'Ω__76', std.quantity.isa { u: '7', q: 3, }\n      help 'Ω__77', std.quantity.isa { u: '7', q: Infinity, }\n      @eq ( Ωcltt__78 = -> std.quantity.name                    ), 'quantity'\n      @eq ( Ωcltt__79 = -> std.integer.name                     ), 'integer'\n      @eq ( Ωcltt__80 = -> std.quantity_q.name                  ), 'quantity_q'\n      @eq ( Ωcltt__81 = -> std.quantity_u.name                  ), 'quantity_u'\n      echo()\n      help 'Ω__82', std.text.isa\n      help 'Ω__83', std.text.isa 'abc'\n      help 'Ω__84', std.text.isa Array.from 'abc'\n      echo()\n      help 'Ω__85', std.nonempty_text\n      help 'Ω__86', std.nonempty_text.isa\n      @eq ( Ωcltt__87 = -> std.nonempty_text.isa 'abc'            ), true\n      @eq ( Ωcltt__88 = -> std.nonempty_text.isa Array.from 'abc' ), false\n      return null\n    do =>\n      echo()\n      for typename, type of std\n        @eq ( Ωcltt__89 = -> type.isa.name ), \"isa_#{typename}\"\n      return null\n    #.......................................................................................................\n    for typename, type of std\n      urge 'Ω__90', f\"#{typename}:<20c; #{type.constructor.name}:<20c; #{type.isa.name}:<20c;\"\n    return null\n\n\n#===========================================================================================================\ndemo_new_returns_instance_of_new_class = ->\n  #=========================================================================================================\n  class A\n    # #-------------------------------------------------------------------------------------------------------\n    # constructor: ( name ) ->\n    #   @name = \"A*#{name}*\"\n    #   return @create name\n    get_names_A: -> [ @name, @constructor.name, ]\n\n    #-------------------------------------------------------------------------------------------------------\n    create: ( name ) ->\n      clasz = class extends @constructor\n        constructor: -> super(); @name = name; return undefined\n        get_names_B: -> [ @name, clasz.name, @constructor.name, ]\n      nameit name, clasz\n      return new clasz()\n  #=========================================================================================================\n  a = new A\n  debug 'Ωcltt__91', A\n  debug 'Ωcltt__92', a\n  debug 'Ωcltt__93', b = a.create 'b'\n  debug 'Ωcltt__94', b.get_names_A()\n  debug 'Ωcltt__95', b.get_names_B()\n  ###\n  d = new D(); <=> ( d instanceof D ) ^ ( d.constructor is D )\n  ###\n  #=========================================================================================================\n  class POD\n    constructor: ( cfg ) ->\n      R = Object.create null\n      Object.assign R, cfg\n      return R\n    isa: ->\n  d = new POD { x: 76, }\n  debug 'Ωcltt__96', d\n  debug 'Ωcltt__97', d.constructor\n  debug 'Ωcltt__98', d.isa\n  #=========================================================================================================\n  return null\n\n#===========================================================================================================\nif module is require.main then await do =>\n  guytest_cfg = { throw_on_error: true, show_passes: false, report_checks: false, }\n  ( new Test guytest_cfg ).test @cleartype_tasks\n  demo_new_returns_instance_of_new_class()\n"
  ]
}