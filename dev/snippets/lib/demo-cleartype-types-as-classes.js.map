{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-cleartype-types-as-classes.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'demo-execa'\n{ rpr\n  inspect\n  echo\n  reverse\n  bold\n  log     }               = GUY.trm\n{ hide }                  = GUY.props\n{ props: {\n    nameit } }            = require '../../../apps/webguy'\n\n\n#===========================================================================================================\nrequire_cleartype = ->\n\n  #=========================================================================================================\n  class integer\n    constructor: ( n = 0 ) -> parseInt n, 10\n\n  #=========================================================================================================\n  class quantity\n    constructor: ( cfg ) ->\n      return { q: 0, u: 'u', cfg..., }\n    my_field_names: -> ( k for k of @ )\n\n  ###\n\n  1.  ```\n      integer = type.$create { $name: 'integer', $isa: ( -> ), ..., }\n\n      # usage:\n      integer.$create 3.141\n      ```\n\n  2.  ```\n      class Integer extends Type\n        $isa:     ( x ) -> Number.isInteger x\n        $create:  ( x ) -> parseInt x, 10\n      integer = new Integer()\n\n      # usage:\n      integer.$create 3.141\n      ```\n\n  3.  ```\n      class integer extends Type\n        @$isa:    ( x ) -> Number.isInteger x\n        @$create: ( x ) -> parseInt x, 10\n\n      # usage:\n      integer.$create 3.141\n      ```\n\n  ###\n  #=========================================================================================================\n  std = {}\n\n  #=========================================================================================================\n  return { std, integer, quantity, }\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  { integer\n    quantity\n    std             } = require_cleartype()\n  info 'Ω___1', std\n  do =>\n    echo()\n    info 'Ω___2', integer\n    info 'Ω___3', d = new integer 3.141\n    info 'Ω___4', d.constructor is Object\n    info 'Ω___5', d.constructor is integer\n    info 'Ω___6', 7 + d\n    info 'Ω___7', d + 7\n  do =>\n    echo()\n    info 'Ω___8', quantity\n    info 'Ω___9', d = new quantity { q: 7, u: 's', }\n    info 'Ω__10', d.constructor is Object\n    info 'Ω__11', d.constructor is quantity\n    info 'Ω__12', d.q, d.u\n    info 'Ω__13', { d..., }\n    info 'Ω__14', d.my_field_names\n    # info 'Ω__15', d.my_field_names()\n\n"
  ]
}