{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-ansi-colors-and-effects.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'demo-proxy'\n{ rpr\n  inspect\n  echo\n  white\n  blue\n  gold\n  grey\n  red\n  bold\n  reverse\n  log     }               = GUY.trm\n{ f }                     = require '../../../apps/effstring'\nwrite                     = ( p ) -> process.stdout.write p\nC                         = require 'ansis'\n{ nfa }                   = require '../../../apps/normalize-function-arguments'\nGTNG                      = require '../../../apps/guy-test-NG'\n{ Test                  } = GTNG\nSFMODULES                 = require './single-file-modules'\n\n\n#===========================================================================================================\ndemo_show_color_effects = ->\n  reset = \"\\x1b[0m\"\n  lime  = \"\\x1b[38;05;118m\"\n  show  = ( P... ) -> echo lime, P..., reset\n  #.........................................................................................................\n  echo \"ANSI styles\"\n  show \"\\x1b[38;05;51m——————————————————————————————————————————————————————————————————————————————\"\n  echo \"no effect\"\n  show \"abc▄\\x1b[26m DEF▄ \\x1b[0mxyz▄ —— proportional  ——\"\n  show \"abc▄\\x1b[10m DEF▄ \\x1b[10mxyz▄ —— font0      ——\"\n  show \"abc▄\\x1b[11m DEF▄ \\x1b[10mxyz▄ —— font1      ——\"\n  show \"abc▄\\x1b[12m DEF▄ \\x1b[10mxyz▄ —— font2       ——\"\n  show \"abc▄\\x1b[13m DEF▄ \\x1b[10mxyz▄ —— font3       ——\"\n  show \"abc▄\\x1b[14m DEF▄ \\x1b[10mxyz▄ —— font4    ——\"\n  show \"abc▄\\x1b[15m DEF▄ \\x1b[10mxyz▄ —— font5  ——\"\n  show \"abc▄\\x1b[16m DEF▄ \\x1b[10mxyz▄ —— font6      ——\"\n  show \"abc▄\\x1b[17m DEF▄ \\x1b[10mxyz▄ —— font7       ——\"\n  show \"abc▄\\x1b[18m DEF▄ \\x1b[10mxyz▄ —— font8       ——\"\n  show \"abc▄\\x1b[19m DEF▄ \\x1b[10mxyz▄ —— font9    ——\"\n  show \"abc▄\\x1b[50m DEF▄ \\x1b[0mxyz▄ —— framed etc  ——\"\n  show \"abc▄\\x1b[51m DEF▄ \\x1b[0mxyz▄ —— framed etc  ——\"\n  show \"abc▄\\x1b[52m DEF▄ \\x1b[0mxyz▄ —— framed etc  ——\"\n  show \"abc▄\\x1b[54m DEF▄ \\x1b[0mxyz▄ —— framed etc  ——\"\n  show \"abc▄\\x1b[55m DEF▄ \\x1b[0mxyz▄ —— framed etc  ——\"\n  show \"abc▄\\x1b[56m DEF▄ \\x1b[0mxyz▄ —— framed etc  ——\"\n  show \"abc▄\\x1b[57m DEF▄ \\x1b[0mxyz▄ —— framed etc  ——\"\n  show \"abc▄\\x1b[58m DEF▄ \\x1b[0mxyz▄ —— framed etc  ——\"\n  show \"abc▄\\x1b[60m DEF▄ \\x1b[0mxyz▄ —— CJK  ——\"\n  show \"abc▄\\x1b[61m DEF▄ \\x1b[0mxyz▄ —— CJK  ——\"\n  show \"abc▄\\x1b[62m DEF▄ \\x1b[0mxyz▄ —— CJK  ——\"\n  show \"abc▄\\x1b[63m DEF▄ \\x1b[0mxyz▄ —— CJK  ——\"\n  show \"abc▄\\x1b[64m DEF▄ \\x1b[0mxyz▄ —— CJK  ——\"\n  show \"abc▄\\x1b[70m DEF▄ \\x1b[0mxyz▄ —— super/sub  ——\"\n  show \"abc▄\\x1b[71m DEF▄ \\x1b[0mxyz▄ —— super/sub  ——\"\n  show \"abc▄\\x1b[72m DEF▄ \\x1b[0mxyz▄ —— super/sub  ——\"\n  show \"abc▄\\x1b[73m DEF▄ \\x1b[0mxyz▄ —— super/sub  ——\"\n  show \"abc▄\\x1b[74m DEF▄ \\x1b[0mxyz▄ —— super/sub  ——\"\n  show \"abc▄\\x1b[75m DEF▄ \\x1b[0mxyz▄ —— super/sub  ——\"\n  show \"abc▄\\x1b[76m DEF▄ \\x1b[0mxyz▄ —— super/sub  ——\"\n  show \"abc▄\\x1b[77m DEF▄ \\x1b[0mxyz▄ —— super/sub  ——\"\n  show \"abc▄\\x1b[78m DEF▄ \\x1b[0mxyz▄ —— super/sub  ——\"\n  show \"abc▄\\x1b[79m DEF▄ \\x1b[0mxyz▄ —— super/sub  ——\"\n  show \"\\x1b[38;05;51m——————————————————————————————————————————————————————————————————————————————\"\n  show \"abc▄\\x1b[1m DEF▄ \\x1b[22mxyz▄ —— bold   <-> slim      ——\"\n  show \"abc▄\\x1b[21m DEF▄ \\x1b[24mxyz▄ —— double underline       ——\"\n  show \"abc▄\\x1b[2m DEF▄ \\x1b[22mxyz▄ —— dim    <-> nodim      ——\"\n  show \"abc▄\\x1b[3m DEF▄ \\x1b[23mxyz▄ —— italic <-> straight       ——\"\n  show \"abc▄\\x1b[4m DEF▄ \\x1b[24mxyz▄ —— underline    ——\"\n  show \"abc▄\\x1b[5m DEF▄ \\x1b[25mxyz▄ —— blink      ——\"\n  show \"abc▄\\x1b[6m DEF▄ \\x1b[25mxyz▄ —— blink      ——\"\n  show \"abc▄\\x1b[7m DEF▄ \\x1b[27mxyz▄ —— reverse       ——\"\n  show \"abc▄\\x1b[8m DEF▄ \\x1b[28mxyz▄ —— hide <-> reveal       ——\"\n  show \"abc▄\\x1b[9m DEF▄ \\x1b[29mxyz▄ —— strike <-> nostrike    ——\"\n  show \"abc▄\\x1b[53m DEF▄ \\x1b[55mxyz▄ —— overline <-> no overline  ——\"\n  show \"abc▄\\x1b[45mbg_magenta\\x1b[49m DEF▄ \\x1b[0mxyz▄ —— BG color off             ——\"\n  show \"\\x1b[38;05;51m——————————————————————————————————————————————————————————————————————————————\"\n  show \"abc \\x1b[36m\\x1b[53m\\x1b[7m DEF│gjy│1234 \\x1b[55m\\x1b[34m\\x1b[27mxyz —— overline + reverse  ——\"\n  show \"abc \\x1b[36m\\x1b[53m\\x1b[7m DEF│gjy│1234 \\x1b[55m\\x1b[34m\\x1b[27mxyz —— overline + reverse  ——\"\n  show \"abc \\x1b[36m\\x1b[53m\\x1b[7m DEF│gjy│1234 \\x1b[55m\\x1b[34m\\x1b[27mxyz —— overline + reverse  ——\"\n  show \"abc \\x1b[36m\\x1b[53m\\x1b[7m DEF│gjy│1234 \\x1b[55m\\x1b[34m\\x1b[27mxyz —— overline + reverse  ——\"\n  show \"\\x1b[38;05;51m——————————————————————————————————————————————————————————————————————————————\"\n  show \"abc▄\\x1b[30m DEF▄ \\x1b[0mxyz▄ —— fg_black             ——\"\n  show \"abc▄\\x1b[31m DEF▄ \\x1b[0mxyz▄ —— fg_red               ——\"\n  show \"abc▄\\x1b[32m DEF▄ \\x1b[0mxyz▄ —— fg_green             ——\"\n  show \"abc▄\\x1b[33m DEF▄ \\x1b[0mxyz▄ —— fg_yellow            ——\"\n  show \"abc▄\\x1b[34m DEF▄ \\x1b[0mxyz▄ —— fg_blue              ——\"\n  show \"abc▄\\x1b[35m DEF▄ \\x1b[0mxyz▄ —— fg_magenta           ——\"\n  show \"abc▄\\x1b[36m DEF▄ \\x1b[0mxyz▄ —— fg_cyan              ——\"\n  show \"abc▄\\x1b[37m DEF▄ \\x1b[0mxyz▄ —— fg_white             ——\"\n  show \"abc▄\\x1b[90m DEF▄ \\x1b[0mxyz▄ —— fg_bright_black      ——\"\n  show \"abc▄\\x1b[91m DEF▄ \\x1b[0mxyz▄ —— fg_bright_red        ——\"\n  show \"abc▄\\x1b[92m DEF▄ \\x1b[0mxyz▄ —— fg_bright_green      ——\"\n  show \"abc▄\\x1b[93m DEF▄ \\x1b[0mxyz▄ —— fg_bright_yellow     ——\"\n  show \"abc▄\\x1b[94m DEF▄ \\x1b[0mxyz▄ —— fg_bright_blue       ——\"\n  show \"abc▄\\x1b[95m DEF▄ \\x1b[0mxyz▄ —— fg_bright_magenta    ——\"\n  show \"abc▄\\x1b[96m DEF▄ \\x1b[0mxyz▄ —— fg_bright_cyan       ——\"\n  show \"abc▄\\x1b[97m DEF▄ \\x1b[0mxyz▄ —— fg_bright_white      ——\"\n  show \"abc▄\\x1b[40m DEF▄ \\x1b[0mxyz▄ —— bg_black             ——\"\n  show \"abc▄\\x1b[41m DEF▄ \\x1b[0mxyz▄ —— bg_red               ——\"\n  show \"abc▄\\x1b[42m DEF▄ \\x1b[0mxyz▄ —— bg_green             ——\"\n  show \"abc▄\\x1b[43m DEF▄ \\x1b[0mxyz▄ —— bg_yellow            ——\"\n  show \"abc▄\\x1b[44m DEF▄ \\x1b[0mxyz▄ —— bg_blue              ——\"\n  show \"abc▄\\x1b[45m DEF▄ \\x1b[0mxyz▄ —— bg_magenta           ——\"\n  show \"abc▄\\x1b[46m DEF▄ \\x1b[0mxyz▄ —— bg_cyan              ——\"\n  show \"abc▄\\x1b[47m DEF▄ \\x1b[0mxyz▄ —— bg_white             ——\"\n  show \"abc▄\\x1b[100m DEF▄ \\x1b[0mxyz▄ —— bg_bright_black      ——\"\n  show \"abc▄\\x1b[101m DEF▄ \\x1b[0mxyz▄ —— bg_bright_red        ——\"\n  show \"abc▄\\x1b[102m DEF▄ \\x1b[0mxyz▄ —— bg_bright_green      ——\"\n  show \"abc▄\\x1b[103m DEF▄ \\x1b[0mxyz▄ —— bg_bright_yellow     ——\"\n  show \"abc▄\\x1b[104m DEF▄ \\x1b[0mxyz▄ —— bg_bright_blue       ——\"\n  show \"abc▄\\x1b[105m DEF▄ \\x1b[0mxyz▄ —— bg_bright_magenta    ——\"\n  show \"abc▄\\x1b[106m DEF▄ \\x1b[0mxyz▄ —— bg_bright_cyan       ——\"\n  show \"abc▄\\x1b[107m DEF▄ \\x1b[0mxyz▄ —— bg_bright_white      ——\"\n  show \"\\x1b[38;05;51m——————————————————————————————————————————————————————————————————————————————\"\n  show \"\\x1b[9mESC[38;2;⟨r⟩;⟨g⟩;⟨b⟩m Select RGB foreground color\"\n  show \"\\x1b[9mESC[48;2;⟨r⟩;⟨g⟩;⟨b⟩m Select RGB background color\"\n  show \"ESC[38:2:⟨???⟩:⟨r⟩:⟨g⟩:⟨b⟩:⟨unused⟩:⟨???⟩:⟨???⟩m Select RGB foreground color\"\n  show \"ESC[48:2:⟨???⟩:⟨r⟩:⟨g⟩:⟨b⟩:⟨unused⟩:⟨???⟩:⟨???⟩m Select RGB background color\"\n  show \"r, g, b values are 0 to 255; terminal ignores values outside of that\"\n  show \"also supports CMYK; trailing colons can be omitted\"\n  show \"\\x1b[38;05;51m——————————————————————————————————————————————————————————————————————————————\"\n  show \"abc▄\\x1b[38:2::255:0:0m DEF▄ \\x1b[0mxyz▄ —— RGB             ——\"\n  show \"abc▄\\x1b[38:2::200:0:0m DEF▄ \\x1b[0mxyz▄ —— RGB             ——\"\n  show \"abc▄\\x1b[38:2::100:0:0m DEF▄ \\x1b[0mxyz▄ —— RGB             ——\"\n  show \"abc▄\\x1b[38:2::10:0:0m DEF▄ \\x1b[0mxyz▄ —— RGB             ——\"\n  show \"\\x1b[38;05;51m——————————————————————————————————————————————————————————————————————————————\"\n  show \"abc▄\\x1b[38:2::0:0:0m DEF▄ \\x1b[0mxyz▄ —— RGB             ——\"\n  show \"abc▄\\x1b[38:2::0:0:100m DEF▄ \\x1b[0mxyz▄ —— RGB             ——\"\n  show \"abc▄\\x1b[38:2::0:0:255m DEF▄ \\x1b[0mxyz▄ —— RGB             ——\"\n  return null\n\ncolors =\n  black:           [ 0, 0, 0]\n  darkslategray:   [ 47, 79, 79]\n  dimgray:         [ 105, 105, 105]\n  slategray:       [ 112, 128, 144]\n  gray:            [ 128, 128, 128]\n  lightslategray:  [ 119, 136, 153]\n  darkgray:        [ 169, 169, 169]\n  silver:          [ 192, 192, 192]\n  lightgray:       [ 211, 211, 211]\n  gainsboro:       [ 220, 220, 220]\n\n#===========================================================================================================\ndemo_2 = ->\n  class TMP_error extends Error\n  { create_infinyproxy,\n    sys_symbol,           } = SFMODULES.require_infiniproxy()\n  #=========================================================================================================\n  ANSI = new class Ansi\n    ###\n\n    * as for the background ('bg'), only colors and no effects can be set; in addition, the bg color can be\n      set to its default (or 'transparent'), which will show the terminal's or the terminal emulator's\n      configured bg color\n    * as for the foreground ('fg'), colors and effects such as blinking, bold, italic, underline, overline,\n      strike can be set; in addition, the configured terminal default font color can be set, and each effect\n      has a dedicated off-switch\n    * neat tables can be drawn by combining the overline effect with `│` U+2502 'Box Drawing Light Vertical\n      Line'; the renmarkable feature of this is that it minimizes spacing around characters meaning it's\n      possible to have adjacent rows of cells separated from the next row by a border without having to\n      sacrifice a line of text just to draw the border.\n    * while the two color palattes implied by the standard XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n      * better to only use full RGB than to fuzz around with palettes\n      * apps that use colors at all should be prepared for dark and bright backgrounds\n      * in general better to set fg, bg colors than to use reverse\n      * but reverse actually does do what it says—it swaps fg with bg color\n\n    \\x1b[39m default fg color\n    \\x1b[49m default bg color\n\n    ###\n    #-------------------------------------------------------------------------------------------------------\n    fg_color_code_from_rgb_dec: ([ r, g, b, ]) -> \"\\x1b[38:2::#{r}:#{g}:#{b}m\"\n    bg_color_code_from_rgb_dec: ([ r, g, b, ]) -> \"\\x1b[48:2::#{r}:#{g}:#{b}m\"\n    fg_color_code_from_hex:     ( hex        ) -> @fg_color_code_from_rgb_dec @rgb_from_hex hex\n    bg_color_code_from_hex:     ( hex        ) -> @bg_color_code_from_rgb_dec @rgb_from_hex hex\n    fg_color_code_from_color_name: ( name ) ->\n      rgb = @colors[ name ] ? @colors.fallback\n      return @fg_color_code_from_rgb_dec rgb\n    rgb_from_hex: ( hex ) ->\n      ### TAINT use proper typing ###\n      throw new Error \"Ω__25 expected text, got #{rpr hex}\" unless ( typeof hex ) is 'string'\n      throw new Error \"Ω__25 expected '#', got #{rpr hex}\" unless hex.startsWith '#'\n      throw new Error \"Ω__25 expected text of length 7, got #{rpr hex}\" unless hex.length is 7\n      [ r16, g16, b16, ] = [ hex[ 1 .. 2 ], hex[ 3 .. 4 ], hex[ 5 .. 6 ], ]\n      return [ ( parseInt r16, 16 ), ( parseInt g16, 16 ), ( parseInt b16, 16 ), ]\n\n    #-------------------------------------------------------------------------------------------------------\n    colors_ansi: null\n    colors:\n      ### thx to: https://en.wikipedia.org/wiki/Help:Distinguishable_colors ###\n      ### thx to: https://graphicdesign.stackexchange.com/questions/3682/where-can-i-find-a-large-palette-set-of-contrasting-colors-for-coloring-many-d ###\n      black:            '#000000'\n      white:            '#ffffff'\n      amethyst:         '#f0a3ff'\n      blue:             '#0075dc'\n      caramel:          '#993f00'\n      damson:           '#4c005c'\n      ebony:            '#191919'\n      forest:           '#005c31'\n      green:            '#2bce48'\n      lime:             '#9dcc00'\n      quagmire:         '#426600'\n      honeydew:         '#ffcc99'\n      iron:             '#808080'\n      jade:             '#94ffb5'\n      khaki:            '#8f7c00'\n      mallow:           '#c20088'\n      navy:             '#003380'\n      orpiment:         '#ffa405'\n      pink:             '#ffa8bb'\n      red:              '#ff0010'\n      sky:              '#5ef1f2'\n      turquoise:        '#00998f'\n      violet:           '#740aff'\n      wine:             '#990000'\n      uranium:          '#e0ff66'\n      xanthin:          '#ffff80'\n      yellow:           '#ffe100'\n      zinnia:           '#ff5005'\n      #.....................................................................................................\n      fallback:         [ 255,  20, 147, ]\n\n  for name, code of ANSI.colors\n    switch true\n      when ( typeof code ) is 'string'\n        rgb = ANSI.rgb_from_hex code\n      when Array.isArray code\n        rgb = code\n      else throw new Error \"Ω__25 format error: #{rpr code}\"\n    fg_code_start = ANSI.fg_color_code_from_rgb_dec rgb\n    bg_code_start = ANSI.bg_color_code_from_rgb_dec rgb\n    if name is 'black'\n      fg_black = fg_code_start\n    echo 'Ω__10', f\"abc▄#{fg_code_start} DEF▄ \\x1b[0mxyz▄ #{fg_black}#{bg_code_start} DEF▄ \\x1b[0mxyz▄ —— #{name}:<20c; ——\"\n\n  color_zones = ( require './color-zones' ).color_zones\n  fgz         = '\\x1b[39m'\n  bgz         = '\\x1b[49m'\n  for zone_name_1, zone_colors_1 of color_zones\n    echo()\n    for color_name_1, hex_1 of zone_colors_1\n      R     = f\"#{zone_name_1}:<6c; #{color_name_1}:<10c; #{hex_1} \"\n      fga1  = ANSI.fg_color_code_from_hex hex_1\n      for zone_name_2, zone_colors_2 of color_zones\n        R += ' '\n        for color_name_2, hex_2 of zone_colors_2\n          bga2  = ANSI.bg_color_code_from_hex hex_2\n          R    += \"#{fga1}#{bga2} W #{fgz}#{bgz}\"\n      echo R\n      # echo rpr R\n\n  fga       = '\\x1B[38:2::37:54:118m'\n  bga       = '\\x1B[48:2::255:255:255m'\n  overlinea = '\\x1b[53m'\n  overlinez = '\\x1b[55m'\n  blinka    = '\\x1b[5m'\n  blinkz    = '\\x1b[25m'\n  red       = '\\x1B[38:2::207:32:39m'\n  bgred     = '\\x1B[48:2::207:32:39m'\n  echo \"abc #{fga}#{bga}#{overlinea} DEF│gjy│1234 #{overlinez}#{fgz}#{bgz} xyz\"\n  echo \"abc #{fga}#{bga}#{overlinea} DEF#{bgred}│gjy│#{bga}1234 #{overlinez}#{fgz}#{bgz} xyz\"\n  echo \"abc #{fga}#{bga}#{overlinea} DEF│gjy│#{red}1234#{fga} #{overlinez}#{fgz}#{bgz} xyz\"\n  echo \"abc #{fga}#{bga}#{overlinea} DEF│#{blinka}gjy#{blinkz}│1234 #{overlinez}#{fgz}#{bgz} xyz\"\n  echo \"abc #{fga}#{bga}#{overlinea} DEF│gjy│1234 #{overlinez}#{fgz}#{bgz} xyz\"\n  echo()\n  echo \"\\x1B[39m\\x1B[49m\\x1B[38:2::37:54:118m\\x1B[48:2::207:32:39m abc \\x1b[7m abc \\x1b[0m\"\n  echo()\n\n  return null\n\n#===========================================================================================================\nif module is require.main then await do =>\n  # guytest_cfg = { throw_on_error: false,  show_passes: false, report_checks: false, }\n  # guytest_cfg = { throw_on_error: true,   show_passes: false, report_checks: false, }\n  # ( new Test guytest_cfg ).test { demo_proxy_as_html_producer, }\n  #.........................................................................................................\n  demo_show_color_effects()\n  demo_2()\n"
  ]
}