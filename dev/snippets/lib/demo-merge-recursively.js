(async function() {
  'use strict';
  var $isa, GUY, _, alert, bold, debug, echo, help, hide, info, inspect, log, merge_two, merge_v1, merge_with_lodash, nameit, plain, praise, reverse, rpr, urge, warn, whisper;

  //===========================================================================================================
  GUY = require('guy');

  ({alert, debug, help, info, plain, praise, urge, warn, whisper} = GUY.trm.get_loggers('demo-execa'));

  ({rpr, inspect, echo, reverse, bold, log} = GUY.trm);

  ({hide} = GUY.props);

  ({
    props: {nameit}
  } = require('../../../apps/webguy'));

  _ = require('lodash');

  ({$isa} = require('../../../apps/intertype'));

  //===========================================================================================================
  merge_with_lodash = function(me, ...others) {
    return _.merge(me, ...others);
  };

  //===========================================================================================================
  merge_v1 = function(me, ...others) {
    return merge_two(me, others[0]);
  };

  merge_two = function(me, other) {
    var descriptor, key, ref;
    ref = Object.getOwnPropertyDescriptors(me);
    for (key in ref) {
      descriptor = ref[key];
      debug('Ω___3', key);
    }
    return me;
  };

  //===========================================================================================================
  if (module === require.main) {
    await (() => {
      (() => {
        var d, me, other, third;
        me = {
          'a': [
            {
              'b': 2
            },
            {
              'd': 4,
              e: [
                7,
                {
                  x: 'X'
                }
              ]
            }
          ],
          b: 'Bme'
        };
        other = {
          'a': [
            {
              'c': 3
            },
            {
              e: [
                5,
                {
                  y: 'Y'
                }
              ]
            }
          ],
          b: 'B'
        };
        third = {
          'a': [
            3,
            {
              'e': [6]
            }
          ],
          b: 'B3rd'
        };
        echo();
        help('Ω___1', d = merge_with_lodash(me, other));
        echo();
        help('Ω___2', merge_with_lodash(d, third));
        echo();
        debug('Ω___3', merge_with_lodash({}));
        debug('Ω___4', merge_with_lodash(5));
        return null;
      })();
      return null;
    })();
  }

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2RlbW8tbWVyZ2UtcmVjdXJzaXZlbHkuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQUE7QUFBQSxNQUFBLElBQUEsRUFBQSxHQUFBLEVBQUEsQ0FBQSxFQUFBLEtBQUEsRUFBQSxJQUFBLEVBQUEsS0FBQSxFQUFBLElBQUEsRUFBQSxJQUFBLEVBQUEsSUFBQSxFQUFBLElBQUEsRUFBQSxPQUFBLEVBQUEsR0FBQSxFQUFBLFNBQUEsRUFBQSxRQUFBLEVBQUEsaUJBQUEsRUFBQSxNQUFBLEVBQUEsS0FBQSxFQUFBLE1BQUEsRUFBQSxPQUFBLEVBQUEsR0FBQSxFQUFBLElBQUEsRUFBQSxJQUFBLEVBQUEsT0FBQTs7O0VBR0EsR0FBQSxHQUE0QixPQUFBLENBQVEsS0FBUjs7RUFDNUIsQ0FBQSxDQUFFLEtBQUYsRUFDRSxLQURGLEVBRUUsSUFGRixFQUdFLElBSEYsRUFJRSxLQUpGLEVBS0UsTUFMRixFQU1FLElBTkYsRUFPRSxJQVBGLEVBUUUsT0FSRixDQUFBLEdBUTRCLEdBQUcsQ0FBQyxHQUFHLENBQUMsV0FBUixDQUFvQixZQUFwQixDQVI1Qjs7RUFTQSxDQUFBLENBQUUsR0FBRixFQUNFLE9BREYsRUFFRSxJQUZGLEVBR0UsT0FIRixFQUlFLElBSkYsRUFLRSxHQUxGLENBQUEsR0FLNEIsR0FBRyxDQUFDLEdBTGhDOztFQU1BLENBQUEsQ0FBRSxJQUFGLENBQUEsR0FBNEIsR0FBRyxDQUFDLEtBQWhDOztFQUNBLENBQUE7SUFBRSxLQUFBLEVBQU8sQ0FDTCxNQURLO0VBQVQsQ0FBQSxHQUM0QixPQUFBLENBQVEsc0JBQVIsQ0FENUI7O0VBRUEsQ0FBQSxHQUE0QixPQUFBLENBQVEsUUFBUjs7RUFDNUIsQ0FBQSxDQUFFLElBQUYsQ0FBQSxHQUE0QixPQUFBLENBQVEseUJBQVIsQ0FBNUIsRUF2QkE7OztFQTJCQSxpQkFBQSxHQUFvQixRQUFBLENBQUUsRUFBRixFQUFBLEdBQU0sTUFBTixDQUFBO1dBQXFCLENBQUMsQ0FBQyxLQUFGLENBQVEsRUFBUixFQUFZLEdBQUEsTUFBWjtFQUFyQixFQTNCcEI7OztFQThCQSxRQUFBLEdBQVcsUUFBQSxDQUFFLEVBQUYsRUFBQSxHQUFNLE1BQU4sQ0FBQTtXQUNULFNBQUEsQ0FBVSxFQUFWLEVBQWMsTUFBTSxDQUFFLENBQUYsQ0FBcEI7RUFEUzs7RUFHWCxTQUFBLEdBQVksUUFBQSxDQUFFLEVBQUYsRUFBTSxLQUFOLENBQUE7QUFDWixRQUFBLFVBQUEsRUFBQSxHQUFBLEVBQUE7QUFBRTtJQUFBLEtBQUEsVUFBQTs7TUFDRSxLQUFBLENBQU0sT0FBTixFQUFlLEdBQWY7SUFERjtBQUVBLFdBQU87RUFIRyxFQWpDWjs7O0VBd0NBLElBQUcsTUFBQSxLQUFVLE9BQU8sQ0FBQyxJQUFyQjtJQUErQixNQUFTLENBQUEsQ0FBQSxDQUFBLEdBQUE7TUFDbkMsQ0FBQSxDQUFBLENBQUEsR0FBQTtBQUNMLFlBQUEsQ0FBQSxFQUFBLEVBQUEsRUFBQSxLQUFBLEVBQUE7UUFBSSxFQUFBLEdBQVE7VUFBRSxHQUFBLEVBQUs7WUFBRTtjQUFFLEdBQUEsRUFBSztZQUFQLENBQUY7WUFBYztjQUFFLEdBQUEsRUFBSyxDQUFQO2NBQVUsQ0FBQSxFQUFHO2dCQUFFLENBQUY7Z0JBQUs7a0JBQUUsQ0FBQSxFQUFHO2dCQUFMLENBQUw7O1lBQWIsQ0FBZDtXQUFQO1VBQTRELENBQUEsRUFBRztRQUEvRDtRQUNSLEtBQUEsR0FBUTtVQUFFLEdBQUEsRUFBSztZQUFFO2NBQUUsR0FBQSxFQUFLO1lBQVAsQ0FBRjtZQUFjO2NBQVUsQ0FBQSxFQUFHO2dCQUFFLENBQUY7Z0JBQUs7a0JBQUUsQ0FBQSxFQUFHO2dCQUFMLENBQUw7O1lBQWIsQ0FBZDtXQUFQO1VBQTRELENBQUEsRUFBRztRQUEvRDtRQUNSLEtBQUEsR0FBUTtVQUFFLEdBQUEsRUFBSztZQUFFLENBQUY7WUFBYTtjQUFFLEdBQUEsRUFBSyxDQUFFLENBQUY7WUFBUCxDQUFiO1dBQVA7VUFBd0MsQ0FBQSxFQUFHO1FBQTNDO1FBQ1IsSUFBQSxDQUFBO1FBQ0EsSUFBQSxDQUFLLE9BQUwsRUFBYyxDQUFBLEdBQUksaUJBQUEsQ0FBa0IsRUFBbEIsRUFBc0IsS0FBdEIsQ0FBbEI7UUFDQSxJQUFBLENBQUE7UUFDQSxJQUFBLENBQUssT0FBTCxFQUFjLGlCQUFBLENBQWtCLENBQWxCLEVBQXFCLEtBQXJCLENBQWQ7UUFDQSxJQUFBLENBQUE7UUFDQSxLQUFBLENBQU0sT0FBTixFQUFlLGlCQUFBLENBQWtCLENBQUEsQ0FBbEIsQ0FBZjtRQUNBLEtBQUEsQ0FBTSxPQUFOLEVBQWUsaUJBQUEsQ0FBa0IsQ0FBbEIsQ0FBZjtBQUNBLGVBQU87TUFYTixDQUFBO0FBWUgsYUFBTztJQWIrQixDQUFBLElBQXhDOztBQXhDQSIsInNvdXJjZXNDb250ZW50IjpbIlxuXG4ndXNlIHN0cmljdCdcblxuIz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5HVVkgICAgICAgICAgICAgICAgICAgICAgID0gcmVxdWlyZSAnZ3V5J1xueyBhbGVydFxuICBkZWJ1Z1xuICBoZWxwXG4gIGluZm9cbiAgcGxhaW5cbiAgcHJhaXNlXG4gIHVyZ2VcbiAgd2FyblxuICB3aGlzcGVyIH0gICAgICAgICAgICAgICA9IEdVWS50cm0uZ2V0X2xvZ2dlcnMgJ2RlbW8tZXhlY2EnXG57IHJwclxuICBpbnNwZWN0XG4gIGVjaG9cbiAgcmV2ZXJzZVxuICBib2xkXG4gIGxvZyAgICAgfSAgICAgICAgICAgICAgID0gR1VZLnRybVxueyBoaWRlIH0gICAgICAgICAgICAgICAgICA9IEdVWS5wcm9wc1xueyBwcm9wczoge1xuICAgIG5hbWVpdCB9IH0gICAgICAgICAgICA9IHJlcXVpcmUgJy4uLy4uLy4uL2FwcHMvd2ViZ3V5J1xuXyAgICAgICAgICAgICAgICAgICAgICAgICA9IHJlcXVpcmUgJ2xvZGFzaCdcbnsgJGlzYSB9ICAgICAgICAgICAgICAgICAgPSByZXF1aXJlICcuLi8uLi8uLi9hcHBzL2ludGVydHlwZSdcblxuXG4jPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbm1lcmdlX3dpdGhfbG9kYXNoID0gKCBtZSwgb3RoZXJzLi4uICkgLT4gXy5tZXJnZSBtZSwgb3RoZXJzLi4uXG5cbiM9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxubWVyZ2VfdjEgPSAoIG1lLCBvdGhlcnMuLi4gKSAtPlxuICBtZXJnZV90d28gbWUsIG90aGVyc1sgMCBdXG5cbm1lcmdlX3R3byA9ICggbWUsIG90aGVyICkgLT5cbiAgZm9yIGtleSwgZGVzY3JpcHRvciBvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyBtZVxuICAgIGRlYnVnICfOqV9fXzMnLCBrZXlcbiAgcmV0dXJuIG1lXG5cblxuIz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5pZiBtb2R1bGUgaXMgcmVxdWlyZS5tYWluIHRoZW4gYXdhaXQgZG8gPT5cbiAgZG8gPT5cbiAgICBtZSAgICA9IHsgJ2EnOiBbIHsgJ2InOiAyIH0sIHsgJ2QnOiA0LCBlOiBbIDcsIHsgeDogJ1gnLCB9IF0sIH0sIF0sIGI6ICdCbWUnLCB9XG4gICAgb3RoZXIgPSB7ICdhJzogWyB7ICdjJzogMyB9LCB7ICAgICAgICAgZTogWyA1LCB7IHk6ICdZJywgfSBdLCB9LCBdLCBiOiAnQicsICB9XG4gICAgdGhpcmQgPSB7ICdhJzogWyAzLCAgICAgICAgIHsgJ2UnOiBbIDYsIF0gfSwgXSwgYjogJ0IzcmQnLCAgfVxuICAgIGVjaG8oKVxuICAgIGhlbHAgJ86pX19fMScsIGQgPSBtZXJnZV93aXRoX2xvZGFzaCBtZSwgb3RoZXJcbiAgICBlY2hvKClcbiAgICBoZWxwICfOqV9fXzInLCBtZXJnZV93aXRoX2xvZGFzaCBkLCB0aGlyZFxuICAgIGVjaG8oKVxuICAgIGRlYnVnICfOqV9fXzMnLCBtZXJnZV93aXRoX2xvZGFzaCB7fVxuICAgIGRlYnVnICfOqV9fXzQnLCBtZXJnZV93aXRoX2xvZGFzaCA1XG4gICAgcmV0dXJuIG51bGxcbiAgcmV0dXJuIG51bGxcblxuIl19
//# sourceURL=../src/demo-merge-recursively.coffee