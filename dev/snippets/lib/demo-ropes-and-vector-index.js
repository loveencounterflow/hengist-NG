(async function() {
  'use strict';
  var GUY, alert, debug, demo_1, echo, help, info, inspect, log, plain, praise, reverse, rpr, urge, warn, whisper;

  GUY = require('guy');

  ({alert, debug, help, info, plain, praise, urge, warn, whisper} = GUY.trm.get_loggers('intertype/test-basics'));

  ({rpr, inspect, echo, reverse, log} = GUY.trm);

  //-----------------------------------------------------------------------------------------------------------
  demo_1 = function() {
    var RopeSequence, rope;
    // debug 'Ω___1', k for k of require 'rope-sequence'
    // debug 'Ω___2', { RopeSequence, } = require 'rope-sequence'
    RopeSequence = require('rope-sequence');
    // debug 'Ω___3', rope = new RopeSequence()
    debug('Ω___4', rope = RopeSequence.empty);
    debug('Ω___5', RopeSequence.empty);
    debug('Ω___6', RopeSequence.from('abc'));
    debug('Ω___7', rope.length);
    debug('Ω___8', rope = rope.append(RopeSequence.from('abc')));
    debug('Ω___9', rope = rope.append(RopeSequence.from('def')));
    debug('Ω__10', rope = rope.append(RopeSequence.from('ghi')));
    debug('Ω__11', rope = rope.append(RopeSequence.from('jkl')));
    debug('Ω__12', rope = rope.append('jkl'));
    debug('Ω__13', rope = rope.append(7));
    debug('Ω__14', rope.length);
    debug('Ω__15', rope.get(0));
    debug('Ω__16', rope.get(1));
    debug('Ω__17', rope.flatten());
    debug('Ω__18', rope.forEach((function(element, idx) {
      return help('Ω__19', idx, rpr(element));
    }), 0, rope.length));
    return null;
  };

  //===========================================================================================================
  if (module === require.main) {
    await (() => {
      return demo_1();
    })();
  }

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2RlbW8tcm9wZXMtYW5kLXZlY3Rvci1pbmRleC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFBQTtBQUFBLE1BQUEsR0FBQSxFQUFBLEtBQUEsRUFBQSxLQUFBLEVBQUEsTUFBQSxFQUFBLElBQUEsRUFBQSxJQUFBLEVBQUEsSUFBQSxFQUFBLE9BQUEsRUFBQSxHQUFBLEVBQUEsS0FBQSxFQUFBLE1BQUEsRUFBQSxPQUFBLEVBQUEsR0FBQSxFQUFBLElBQUEsRUFBQSxJQUFBLEVBQUE7O0VBRUEsR0FBQSxHQUE0QixPQUFBLENBQVEsS0FBUjs7RUFDNUIsQ0FBQSxDQUFFLEtBQUYsRUFDRSxLQURGLEVBRUUsSUFGRixFQUdFLElBSEYsRUFJRSxLQUpGLEVBS0UsTUFMRixFQU1FLElBTkYsRUFPRSxJQVBGLEVBUUUsT0FSRixDQUFBLEdBUTRCLEdBQUcsQ0FBQyxHQUFHLENBQUMsV0FBUixDQUFvQix1QkFBcEIsQ0FSNUI7O0VBU0EsQ0FBQSxDQUFFLEdBQUYsRUFDRSxPQURGLEVBRUUsSUFGRixFQUdFLE9BSEYsRUFJRSxHQUpGLENBQUEsR0FJNEIsR0FBRyxDQUFDLEdBSmhDLEVBWkE7OztFQW1CQSxNQUFBLEdBQVMsUUFBQSxDQUFBLENBQUE7QUFDVCxRQUFBLFlBQUEsRUFBQSxJQUFBOzs7SUFFRSxZQUFBLEdBQWUsT0FBQSxDQUFRLGVBQVIsRUFGakI7O0lBSUUsS0FBQSxDQUFNLE9BQU4sRUFBZSxJQUFBLEdBQU8sWUFBWSxDQUFDLEtBQW5DO0lBQ0EsS0FBQSxDQUFNLE9BQU4sRUFBZSxZQUFZLENBQUMsS0FBNUI7SUFDQSxLQUFBLENBQU0sT0FBTixFQUFlLFlBQVksQ0FBQyxJQUFiLENBQWtCLEtBQWxCLENBQWY7SUFDQSxLQUFBLENBQU0sT0FBTixFQUFlLElBQUksQ0FBQyxNQUFwQjtJQUNBLEtBQUEsQ0FBTSxPQUFOLEVBQWUsSUFBQSxHQUFPLElBQUksQ0FBQyxNQUFMLENBQVksWUFBWSxDQUFDLElBQWIsQ0FBa0IsS0FBbEIsQ0FBWixDQUF0QjtJQUNBLEtBQUEsQ0FBTSxPQUFOLEVBQWUsSUFBQSxHQUFPLElBQUksQ0FBQyxNQUFMLENBQVksWUFBWSxDQUFDLElBQWIsQ0FBa0IsS0FBbEIsQ0FBWixDQUF0QjtJQUNBLEtBQUEsQ0FBTSxPQUFOLEVBQWUsSUFBQSxHQUFPLElBQUksQ0FBQyxNQUFMLENBQVksWUFBWSxDQUFDLElBQWIsQ0FBa0IsS0FBbEIsQ0FBWixDQUF0QjtJQUNBLEtBQUEsQ0FBTSxPQUFOLEVBQWUsSUFBQSxHQUFPLElBQUksQ0FBQyxNQUFMLENBQVksWUFBWSxDQUFDLElBQWIsQ0FBa0IsS0FBbEIsQ0FBWixDQUF0QjtJQUNBLEtBQUEsQ0FBTSxPQUFOLEVBQWUsSUFBQSxHQUFPLElBQUksQ0FBQyxNQUFMLENBQVksS0FBWixDQUF0QjtJQUNBLEtBQUEsQ0FBTSxPQUFOLEVBQWUsSUFBQSxHQUFPLElBQUksQ0FBQyxNQUFMLENBQVksQ0FBWixDQUF0QjtJQUNBLEtBQUEsQ0FBTSxPQUFOLEVBQWUsSUFBSSxDQUFDLE1BQXBCO0lBQ0EsS0FBQSxDQUFNLE9BQU4sRUFBZSxJQUFJLENBQUMsR0FBTCxDQUFTLENBQVQsQ0FBZjtJQUNBLEtBQUEsQ0FBTSxPQUFOLEVBQWUsSUFBSSxDQUFDLEdBQUwsQ0FBUyxDQUFULENBQWY7SUFDQSxLQUFBLENBQU0sT0FBTixFQUFlLElBQUksQ0FBQyxPQUFMLENBQUEsQ0FBZjtJQUNBLEtBQUEsQ0FBTSxPQUFOLEVBQWUsSUFBSSxDQUFDLE9BQUwsQ0FBYSxDQUFFLFFBQUEsQ0FBRSxPQUFGLEVBQVcsR0FBWCxDQUFBO2FBQW9CLElBQUEsQ0FBSyxPQUFMLEVBQWMsR0FBZCxFQUFtQixHQUFBLENBQUksT0FBSixDQUFuQjtJQUFwQixDQUFGLENBQWIsRUFBcUUsQ0FBckUsRUFBd0UsSUFBSSxDQUFDLE1BQTdFLENBQWY7QUFDQSxXQUFPO0VBcEJBLEVBbkJUOzs7RUE4Q0EsSUFBRyxNQUFBLEtBQVUsT0FBTyxDQUFDLElBQXJCO0lBQStCLE1BQVMsQ0FBQSxDQUFBLENBQUEsR0FBQTthQUN0QyxNQUFBLENBQUE7SUFEc0MsQ0FBQSxJQUF4Qzs7QUE5Q0EiLCJzb3VyY2VzQ29udGVudCI6WyJcblxuJ3VzZSBzdHJpY3QnXG5cbkdVWSAgICAgICAgICAgICAgICAgICAgICAgPSByZXF1aXJlICdndXknXG57IGFsZXJ0XG4gIGRlYnVnXG4gIGhlbHBcbiAgaW5mb1xuICBwbGFpblxuICBwcmFpc2VcbiAgdXJnZVxuICB3YXJuXG4gIHdoaXNwZXIgfSAgICAgICAgICAgICAgID0gR1VZLnRybS5nZXRfbG9nZ2VycyAnaW50ZXJ0eXBlL3Rlc3QtYmFzaWNzJ1xueyBycHJcbiAgaW5zcGVjdFxuICBlY2hvXG4gIHJldmVyc2VcbiAgbG9nICAgICB9ICAgICAgICAgICAgICAgPSBHVVkudHJtXG5cbiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuZGVtb18xID0gLT5cbiAgIyBkZWJ1ZyAnzqlfX18xJywgayBmb3IgayBvZiByZXF1aXJlICdyb3BlLXNlcXVlbmNlJ1xuICAjIGRlYnVnICfOqV9fXzInLCB7IFJvcGVTZXF1ZW5jZSwgfSA9IHJlcXVpcmUgJ3JvcGUtc2VxdWVuY2UnXG4gIFJvcGVTZXF1ZW5jZSA9IHJlcXVpcmUgJ3JvcGUtc2VxdWVuY2UnXG4gICMgZGVidWcgJ86pX19fMycsIHJvcGUgPSBuZXcgUm9wZVNlcXVlbmNlKClcbiAgZGVidWcgJ86pX19fNCcsIHJvcGUgPSBSb3BlU2VxdWVuY2UuZW1wdHlcbiAgZGVidWcgJ86pX19fNScsIFJvcGVTZXF1ZW5jZS5lbXB0eVxuICBkZWJ1ZyAnzqlfX182JywgUm9wZVNlcXVlbmNlLmZyb20gJ2FiYydcbiAgZGVidWcgJ86pX19fNycsIHJvcGUubGVuZ3RoXG4gIGRlYnVnICfOqV9fXzgnLCByb3BlID0gcm9wZS5hcHBlbmQgUm9wZVNlcXVlbmNlLmZyb20gJ2FiYydcbiAgZGVidWcgJ86pX19fOScsIHJvcGUgPSByb3BlLmFwcGVuZCBSb3BlU2VxdWVuY2UuZnJvbSAnZGVmJ1xuICBkZWJ1ZyAnzqlfXzEwJywgcm9wZSA9IHJvcGUuYXBwZW5kIFJvcGVTZXF1ZW5jZS5mcm9tICdnaGknXG4gIGRlYnVnICfOqV9fMTEnLCByb3BlID0gcm9wZS5hcHBlbmQgUm9wZVNlcXVlbmNlLmZyb20gJ2prbCdcbiAgZGVidWcgJ86pX18xMicsIHJvcGUgPSByb3BlLmFwcGVuZCAnamtsJ1xuICBkZWJ1ZyAnzqlfXzEzJywgcm9wZSA9IHJvcGUuYXBwZW5kIDdcbiAgZGVidWcgJ86pX18xNCcsIHJvcGUubGVuZ3RoXG4gIGRlYnVnICfOqV9fMTUnLCByb3BlLmdldCAwXG4gIGRlYnVnICfOqV9fMTYnLCByb3BlLmdldCAxXG4gIGRlYnVnICfOqV9fMTcnLCByb3BlLmZsYXR0ZW4oKVxuICBkZWJ1ZyAnzqlfXzE4Jywgcm9wZS5mb3JFYWNoICggKCBlbGVtZW50LCBpZHggKSAtPiBoZWxwICfOqV9fMTknLCBpZHgsIHJwciBlbGVtZW50ICksIDAsIHJvcGUubGVuZ3RoXG4gIHJldHVybiBudWxsXG5cblxuXG5cblxuIz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5pZiBtb2R1bGUgaXMgcmVxdWlyZS5tYWluIHRoZW4gYXdhaXQgZG8gPT5cbiAgZGVtb18xKClcbiJdfQ==
//# sourceURL=../src/demo-ropes-and-vector-index.coffee