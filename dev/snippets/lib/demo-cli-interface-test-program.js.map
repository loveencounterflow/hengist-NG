{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-cli-interface-test-program.coffee"
  ],
  "names": [],
  "mappings": "AAGA;EAAA;AAAA,MAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,OAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAGA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,CAAA,CAAE,KAAF,EACE,KADF,EAEE,IAFF,EAGE,IAHF,EAIE,KAJF,EAKE,MALF,EAME,IANF,EAOE,IAPF,EAQE,OARF,CAAA,GAQ4B,GAAG,CAAC,GAAG,CAAC,WAAR,CAAoB,YAApB,CAR5B;;EASA,CAAA,CAAE,GAAF,EACE,OADF,EAEE,IAFF,EAGE,OAHF,EAIE,GAJF,CAAA,GAI4B,GAAG,CAAC,GAJhC,EAbA;;;EAmBA,GAAA,GAA4B,OAAA,CAAQ,gBAAR,EAnB5B;;;EAsBA,MAAA,GAAS,MAAA,QAAA,CAAA,CAAA;IACP,MAAS,CAAA,KAAA,CAAA,CAAA,GAAA;AACX,UAAA,GAAA,EAAA;MAAI,GAAA,GACE;QAAA,OAAA,EAAY,sBAAZ;QACA,OAAA,EAAS;UACP;YAAE,KAAA,EAAO,IAAT;YAAoB,KAAA,EAAO;UAA3B,CADO;UAEP;YAAE,KAAA,EAAO,IAAT;YAAoB,KAAA,EAAO;UAA3B,CAFO;UAGP;YAAE,KAAA,EAAO,QAAT;YAAoB,KAAA,EAAO,cAA3B;YAA2C,IAAA,EAAM;UAAjD,CAHO;;MADT;MAKF,YAAA,GAAe,CAAA,MAAM,GAAG,CAAC,MAAJ,CAAW,GAAX,CAAN;MACf,IAAA,CAAK,CAAA,oBAAA,CAAA,CAAuB,GAAA,CAAI,YAAJ,CAAvB,CAAA,CAAL;AACA,aAAO;IATA,CAAA;IAUT,MAAS,CAAA,KAAA,CAAA,CAAA,GAAA;AACX,UAAA,GAAA,EAAA,OAAA,EAAA;MAAI,OAAA,GAAU,GAAG,CAAC,OAAJ,CAAA;MACV,OAAO,CAAC,KAAR,CAAc,kBAAd;MACA,GAAA,GACE;QAAA,OAAA,EAAY,0BAAZ;QACA,OAAA,EAAS;UACP;YAAE,KAAA,EAAO,QAAT;YAAmB,KAAA,EAAO,QAA1B;YAAoC,IAAA,EAAM;UAA1C,CADO;UAEP;YAAE,KAAA,EAAO,UAAT;YAAqB,KAAA,EAAO;UAA5B,CAFO;UAGP;YAAE,KAAA,EAAO,WAAT;YAAsB,KAAA,EAAO;UAA7B,CAHO;SADT;QAKA,QAAA,EAAU;MALV;MAMF,KAAA,GAAQ,CAAA,MAAM,GAAG,CAAC,WAAJ,CAAgB,GAAhB,CAAN;MACR,IAAA,CAAK,CAAA,aAAA,CAAA,CAAgB,GAAA,CAAI,KAAJ,CAAhB,CAAA,CAAL;MACA,OAAO,CAAC,IAAR,CAAa,SAAb;AACA,aAAO;IAbA,CAAA;AAcT,WAAO;EAzBA,EAtBT;;;EAkDA,OAAO,CAAC,GAAR,CAAY,OAAZ,EAAqB,OAArB;;EACA,OAAO,CAAC,GAAR,CAAY,OAAZ,EAAqB,CAAA,MAAM,GAAG,CAAC,OAAJ,CAAY;IAAE,OAAA,EAAS;EAAX,CAAZ,CAAN,CAArB,EAnDA;;;;;EAuDA,OAAO,CAAC,GAAR,CAAY,OAAZ,EAAqB,MAArB;AAvDA",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'demo-execa'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\n#...........................................................................................................\nCLK                       = require '@clack/prompts'\n\n#===========================================================================================================\nselect = ->\n  await do =>\n    cfg =\n      message:    \"Pick a project type.\"\n      options: [\n        { value: 'ts',      label: 'TypeScript' },\n        { value: 'js',      label: 'JavaScript' },\n        { value: 'coffee',  label: 'CoffeeScript', hint: 'yes!' }, ]\n    project_type = await CLK.select cfg\n    info \"Ω___1 project type: #{rpr project_type}\"\n    return null\n  await do =>\n    spinner = CLK.spinner()\n    spinner.start \"asking questions\"\n    cfg =\n      message:    \"Select additional tools.\"\n      options: [\n        { value: 'eslint', label: 'ESLint', hint: 'recommended' },\n        { value: 'prettier', label: 'Prettier' },\n        { value: 'gh-action', label: 'GitHub Action' }, ]\n      required: false\n    tools = await CLK.multiselect cfg\n    info \"Ω___2 tools: #{rpr tools}\"\n    spinner.stop \"thanks!\"\n    return null\n  return null\n\n#===========================================================================================================\nconsole.log 'Ω___3', \"start\"\nconsole.log 'Ω___4', await CLK.confirm { message: \"Do you want pizza?\", }\n# console.log 'Ω___5', await CLK.confirm { message: \"Do you want coffee?\", }\n# console.log 'Ω___6', await CLK.text { message: \"Do you want pizza?\", placeholder: 'placeholder', initialValue: 'init', }\n# console.log 'Ω___7', await select()\nconsole.log 'Ω___8', \"stop\"\n"
  ]
}