{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-intertype.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'demo-execa'\n{ rpr\n  inspect\n  echo\n  reverse\n  bold\n  log     }               = GUY.trm\nWEBGUY                    = require '../../../apps/webguy'\n{ hide }                  = GUY.props\n{ nameit }                = WEBGUY.props\n{ Ltsort }                = require '../../../apps/ltsort'\n\n\n############################################################################################################\nrequire_intertype = ->\n\n  #===========================================================================================================\n  class Types\n\n    #---------------------------------------------------------------------------------------------------------\n    constructor: ( cfg ) ->\n      # @_types = new Map()\n      hide @, 'isa',      @isa.bind       @\n      hide @, 'validate', @validate.bind  @\n      hide @, 'create',   @create.bind    @\n      hide @, 'type_of',  @type_of.bind   @\n      hide @, 'memo',     new Map()\n      return undefined\n\n    #---------------------------------------------------------------------------------------------------------\n    isa: ( type, x ) ->\n      unless ( R = type.isa.call type.$typespace, x, @ ) in [ true, false, ]\n        throw new Error \"Ω___1 expected `true` or `false`, got a #{@type_of R}\"\n      return R\n\n    #---------------------------------------------------------------------------------------------------------\n    type_of: ( x ) -> 'something'\n\n    #---------------------------------------------------------------------------------------------------------\n    validate: ( type, x ) ->\n      return x if @isa type, x\n      throw new Error \"Ω___2 expected a #{type.$name}, got a #{@type_of x}\"\n\n    #---------------------------------------------------------------------------------------------------------\n    create: ( type, P... ) ->\n      # unless ( method = type.parse )?\n      #   throw new Error \"Ω___3 expected a , got #{rpr R}\"\n\n    #---------------------------------------------------------------------------------------------------------\n    # evaluate: ( ??? ) ->\n    # create: ( ??? ) ->\n\n\n  #===========================================================================================================\n  class Type\n\n    #---------------------------------------------------------------------------------------------------------\n    constructor: ( typespace, name, declaration ) ->\n      ### NOTE not doing anything for the time being ###\n      ### TAINT should still implement string-valued `isa` ###\n      # debug 'Ω___4', rpr declaration\n      hide @, '$name',      name\n      hide @, '$typespace', typespace\n      ### TAINT check for accidental overwrites ###\n      for key, value of declaration\n        nameit name, value if key is 'isa' # check that value is function?\n        hide @, key, value\n      return undefined\n\n\n  #===========================================================================================================\n  class Typespace\n\n    #---------------------------------------------------------------------------------------------------------\n    constructor: ( typespace_cfg ) ->\n      names = @_sort_names typespace_cfg\n      # info 'Ω___5', Object.keys typespace_cfg\n      # info 'Ω___6', names\n      for name in names\n        unless ( declaration = typespace_cfg[ name ] )?\n          throw new Error \"Ω___7 missing declaration for type #{rpr name}\"\n        #.....................................................................................................\n        ### De-reference named types: ###\n        ### TAINT use method `_deref()` ###\n        ### TAINT consider to resolve transitive dependencies ###\n        if typeof declaration is 'string'\n          ref         = declaration\n          declaration = do =>\n            deref = @[ ref ]\n            R     = {}\n            R.isa = ( x, t ) -> t.isa deref, x\n            return R\n        #.....................................................................................................\n        @[ name ] = new Type @, name, declaration\n      return undefined\n\n    #---------------------------------------------------------------------------------------------------------\n    _sort_names: ( typespace_cfg ) ->\n      ### Given a `typespace_cfg`, return a list of names such that the declarative dependencies (where the\n      type is defined by the name of another type in the typespace) can be resolved at compile time ###\n      ### TAINT re-throw cycle error ###\n      g = new Ltsort()\n      for name, declaration of typespace_cfg\n        if typeof declaration is 'string' then  g.add { name, needs: declaration, }\n        else                                    g.add { name, }\n      return g.linearize { groups: false, }\n\n\n  #===========================================================================================================\n  std = new Typespace\n    # circle1:  'circle2'\n    # circle2:  'circle3'\n    # circle3:  'circle1'\n    weird:    'strange' # declares another name for `odd`\n    strange:  'odd'     # declares another name for `odd`\n    integer:\n      isa:    ( x, t ) -> Number.isInteger x\n      foo:    4\n    odd:\n      isa:    ( x, t ) -> ( t.isa @integer, x ) and ( x %% 2 isnt 0 )\n    abnormal: 'weird' # declares another name for `odd`\n    # short form just assigns either a test method or a type name:\n###\n    even:     ( x, t ) -> ( t.isa @integer, x ) and ( x %% 2 is 0 )\n    quantity:\n      # each field becomes an `Type` instance; strings may refer to names in the same typespace\n      fields:\n        q:    'float'\n        u:    'nonempty_text'\n###\n\n  #%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n  return { Types, Type, Typespace, std, }\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  { Types\n    std             } = require_intertype()\n  help 'Ω___8', types = new Types()\n  help 'Ω___9', std\n  # help 'Ω__10', std.integer\n  # help 'Ω__11', std.integer.isa 5\n  help 'Ω__12', GUY.trm.truth     types.isa       std.integer,  5.3\n  help 'Ω__13', GUY.trm.truth     types.isa       std.strange,  6\n  help 'Ω__14', GUY.trm.truth     types.isa       std.weird,    6\n  help 'Ω__15', GUY.trm.truth     types.isa       std.odd,      6\n  help 'Ω__16', GUY.trm.truth     types.isa       std.strange,  5\n  help 'Ω__17', GUY.trm.truth     types.isa       std.weird,    5\n  help 'Ω__18', GUY.trm.truth     types.isa       std.odd,      5\n  help 'Ω__19', GUY.trm.truth     types.isa       std.odd,      5.3\n  help 'Ω__20', try               types.validate  std.integer,  5       catch e then warn 'Ω__21', e.message\n  help 'Ω__22', try               types.validate  std.integer,  5.3     catch e then warn 'Ω__23', e.message\n  # info 'Ω__24', std.weird\n  # info 'Ω__25', std.weird.isa\n  # info 'Ω__25', std.weird.isa.toString()\n\n\n\n"
  ]
}