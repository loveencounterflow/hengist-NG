{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-intertype.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'demo-execa'\n{ rpr\n  inspect\n  echo\n  reverse\n  bold\n  log     }               = GUY.trm\nWEBGUY                    = require '../../../apps/webguy'\n{ nameit }                = WEBGUY.props\n\n############################################################################################################\nrequire_intertype = ->\n\n  #===========================================================================================================\n  class Intertype\n\n    #---------------------------------------------------------------------------------------------------------\n    constructor: ( cfg ) ->\n      # @_types = new Map()\n      GUY.props.hide @, 'isa',      @isa.bind       @\n      GUY.props.hide @, 'validate', @validate.bind  @\n      GUY.props.hide @, 'parse',    @parse.bind     @\n      GUY.props.hide @, 'type_of',  @type_of.bind   @\n      GUY.props.hide @, 'memo',     new Map()\n      return undefined\n\n    #---------------------------------------------------------------------------------------------------------\n    isa: ( type, x ) ->\n      # debug 'Ω___1', type\n      unless ( R = type.isa.call type.namespace, x, @ ) in [ true, false, ]\n      # unless ( R = ( @_compile declaration ).isa x ) in [ true, false, ]\n        throw new Error \"Ω___2 expected true or false, got #{rpr R}\"\n      return R\n\n    #---------------------------------------------------------------------------------------------------------\n    type_of: ( x ) -> 'something'\n\n    #---------------------------------------------------------------------------------------------------------\n    validate: ( type, x ) ->\n      return x if @isa type, x\n      throw new Error \"Ω___3 expected a #{type.name}, got a #{@type_of x}\"\n\n    #---------------------------------------------------------------------------------------------------------\n    parse: ( type, x ) ->\n      unless ( method = type.parse )?\n        throw new Error \"Ω___4 expected a , got #{rpr R}\"\n\n    #---------------------------------------------------------------------------------------------------------\n    # evaluate: ( ??? ) ->\n    # create: ( ??? ) ->\n\n\n  #===========================================================================================================\n  class Intertype_type\n\n    #---------------------------------------------------------------------------------------------------------\n    constructor: ( namespace, name, declaration ) ->\n      ### NOTE not doing anything for the time being ###\n      # debug 'Ω___5', declaration\n      @name = name\n      @namespace = namespace\n      ### TAINT check for accidental overwrites ###\n      for key, value of declaration\n        nameit name, value if key is 'isa' # check that value is function?\n        @[ key ] = value\n      return undefined\n\n\n\n  #===========================================================================================================\n  class Intertype_namespace\n\n    #---------------------------------------------------------------------------------------------------------\n    constructor: ( namespace ) ->\n      # debug 'Ω___6', namespace\n      for name, declaration of namespace\n        @[ name ] = new Intertype_type namespace, name, declaration\n      return undefined\n\n\n  #===========================================================================================================\n  std = new Intertype_namespace\n    # weird:    'strange' # declares another name for `odd`\n    # strange:  'odd'     # declares another name for `odd`\n    integer:\n      isa:    ( x, t ) -> Number.isInteger x\n      foo:    4\n    odd:\n      isa:    ( x, t ) -> ( t.isa @integer, x ) and ( x %% 2 isnt 0 )\n    # short form just assigns either a test method or a type name:\n    even:     ( x, t ) -> ( t.isa @integer, x ) and ( x %% 2 is 0 )\n    quantity:\n      # each field becomes an `Intertype_type` instance; strings may refer to names in the same namespace\n      fields:\n        q:    'float'\n        u:    'nonempty_text'\n\n  #%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n  return { Intertype, Intertype_type, Intertype_namespace, std, }\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  { Intertype\n    std             } = require_intertype()\n  help 'Ω___7', types = new Intertype()\n  help 'Ω___8', std\n  # help 'Ω___9', std.integer\n  # help 'Ω__10', std.integer.isa 5\n  help 'Ω__11', GUY.trm.truth     types.isa       std.integer,  5.3\n  # help 'Ω__12', GUY.trm.truth     types.isa       std.strange,  6\n  # help 'Ω__13', GUY.trm.truth     types.isa       std.weird,    6\n  help 'Ω__14', GUY.trm.truth     types.isa       std.odd,      6\n  # help 'Ω__15', GUY.trm.truth     types.isa       std.strange,  5\n  # help 'Ω__16', GUY.trm.truth     types.isa       std.weird,    5\n  help 'Ω__17', GUY.trm.truth     types.isa       std.odd,      5\n  help 'Ω__18', GUY.trm.truth     types.isa       std.odd,      5.3\n  help 'Ω__19', try               types.validate  std.integer,  5       catch e then warn 'Ω__20', e.message\n  help 'Ω__21', try               types.validate  std.integer,  5.3     catch e then warn 'Ω__22', e.message\n\n\n\n"
  ]
}