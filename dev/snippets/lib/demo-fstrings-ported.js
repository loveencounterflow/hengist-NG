(function() {
  'use strict';
  var GUY, alert, debug, demo_d3_format, echo, help, info, inspect, log, plain, praise, reverse, rpr, urge, warn, whisper;

  GUY = require('guy');

  ({alert, debug, help, info, plain, praise, urge, warn, whisper} = GUY.trm.get_loggers('intertype/test-basics'));

  ({rpr, inspect, echo, reverse, log} = GUY.trm);

  //===========================================================================================================
  demo_d3_format = function() {
    var D3F, f, format_re;
    D3F = require('d3-format');
    (() => {
      var f;
      help('Ω___1', f = D3F.format('.>+$20,.3f'));
      help('Ω___2', rpr(f(1234.5678)));
      help('Ω___3', rpr(f('1234.5678')));
      help('Ω___4', f = D3F.format('—>+$20,.3c'));
      help('Ω___5', rpr(f(1234.5678)));
      help('Ω___6', rpr(f('1234.5678')));
      help('Ω___7', rpr(f('helo')));
      help('Ω___8', rpr(f('一千二百')));
      help('Ω___9', rpr(f('一千二百三十四点五六七八')));
      return help('Ω__10', '\;'.length === 1);
    })();
    //---------------------------------------------------------------------------------------------------------
    /* TAINT does not treat backslash-escaped characters correctly */
    format_re = /^:(?<fmt>.+?(?<!\\));(?<tail>.*)$/;
    //---------------------------------------------------------------------------------------------------------
    f = function(parts, ...expressions) {
      var R, fmt, i, idx, len, literal, match, part, tail, value;
      R = parts[0];
      for (idx = i = 0, len = expressions.length; i < len; idx = ++i) {
        value = expressions[idx];
        part = parts[idx + 1];
        //.....................................................................................................
        if (part.startsWith(':')) {
          if ((match = part.match(format_re)) == null) {
            throw new Error(`Ω__14 illegal format expression ${rpr(raw)}`);
          }
          ({fmt, tail} = match.groups);
          fmt = fmt.replace(/\\;/g, ';');
          R += ((D3F.format(fmt))(value)) + tail;
        } else {
          //.....................................................................................................
          literal = (typeof value === 'string') ? value : rpr(value);
          R += literal + part;
        }
      }
      return R;
    };
    urge('Ω__17', rpr(f`AAA${1234.5678}:\\;>+20,.3f;D\t\\;DD${98.76}:+7.2f;ZZZ`));
    urge('Ω__17', rpr(f`AAA${1234.5678}: >+20,.3f;D\t\\;DD${98.76}:+7.2f;ZZZ`));
    // { format, new_formatter, } = require_myfstring()
    // urge 'Ω__18', format ':*<+20,.5g', '11456.15454'
    // urge 'Ω__19', format ':*<+20,.5g', 11456.15454
    // # urge 'Ω__20', format ':*=+20,.5g', 11456.15454

    // f152f = new_formatter ': > 15,.2f'
    // help 'Ω__21', f152f 1
    // help 'Ω__22', f152f 12
    // help 'Ω__23', f152f 123
    // help 'Ω__24', f152f 1234
    // help 'Ω__25', f152f -11456.15454
    // help 'Ω__26', f152f 53443.32455
    // help 'Ω__27', f152f 885673.367553
    // f15s = new_formatter ': > 15s'
    // help 'Ω__28', f15s 'helo'
    return null;
  };

  //===========================================================================================================
  if (module === require.main) {
    (() => {
      return demo_d3_format();
    })();
  }

  // urge 'Ω__29', rpr String.raw { raw: [ '123\t\u4e01', ], }, '123\t\u4e01'
// urge 'Ω__30', rpr String.raw { raw: [ '123\\t\\u4e01', ], }, '123\\t\\u4e01'
// urge 'Ω__30', rpr '"123\\t\\u4e01\x01\377"'
// urge 'Ω__30', rpr JSON.parse '"123\\t\\u4e01\x01\377"'

  // empty = ''
// x = 'what'
// urge 'Ω__31', SQL"abc"
// urge 'Ω__32', SQL"abc#{}xyz"
// urge 'Ω__33', SQL"abc#{empty}xyz"
// urge 'Ω__34', SQL"abc#{x}:; xyz"
// urge 'Ω__35', SQL"\;#{x}:; xyz"

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2RlbW8tZnN0cmluZ3MtcG9ydGVkLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUFBO0FBQUEsTUFBQSxHQUFBLEVBQUEsS0FBQSxFQUFBLEtBQUEsRUFBQSxjQUFBLEVBQUEsSUFBQSxFQUFBLElBQUEsRUFBQSxJQUFBLEVBQUEsT0FBQSxFQUFBLEdBQUEsRUFBQSxLQUFBLEVBQUEsTUFBQSxFQUFBLE9BQUEsRUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFBLElBQUEsRUFBQTs7RUFFQSxHQUFBLEdBQTRCLE9BQUEsQ0FBUSxLQUFSOztFQUM1QixDQUFBLENBQUUsS0FBRixFQUNFLEtBREYsRUFFRSxJQUZGLEVBR0UsSUFIRixFQUlFLEtBSkYsRUFLRSxNQUxGLEVBTUUsSUFORixFQU9FLElBUEYsRUFRRSxPQVJGLENBQUEsR0FRNEIsR0FBRyxDQUFDLEdBQUcsQ0FBQyxXQUFSLENBQW9CLHVCQUFwQixDQVI1Qjs7RUFTQSxDQUFBLENBQUUsR0FBRixFQUNFLE9BREYsRUFFRSxJQUZGLEVBR0UsT0FIRixFQUlFLEdBSkYsQ0FBQSxHQUk0QixHQUFHLENBQUMsR0FKaEMsRUFaQTs7O0VBb0JBLGNBQUEsR0FBaUIsUUFBQSxDQUFBLENBQUE7QUFDakIsUUFBQSxHQUFBLEVBQUEsQ0FBQSxFQUFBO0lBQUUsR0FBQSxHQUFNLE9BQUEsQ0FBUSxXQUFSO0lBQ0gsQ0FBQSxDQUFBLENBQUEsR0FBQTtBQUNMLFVBQUE7TUFBSSxJQUFBLENBQUssT0FBTCxFQUFjLENBQUEsR0FBSSxHQUFHLENBQUMsTUFBSixDQUFXLFlBQVgsQ0FBbEI7TUFDQSxJQUFBLENBQUssT0FBTCxFQUFjLEdBQUEsQ0FBSSxDQUFBLENBQUUsU0FBRixDQUFKLENBQWQ7TUFDQSxJQUFBLENBQUssT0FBTCxFQUFjLEdBQUEsQ0FBSSxDQUFBLENBQUUsV0FBRixDQUFKLENBQWQ7TUFDQSxJQUFBLENBQUssT0FBTCxFQUFjLENBQUEsR0FBSSxHQUFHLENBQUMsTUFBSixDQUFXLFlBQVgsQ0FBbEI7TUFDQSxJQUFBLENBQUssT0FBTCxFQUFjLEdBQUEsQ0FBSSxDQUFBLENBQUUsU0FBRixDQUFKLENBQWQ7TUFDQSxJQUFBLENBQUssT0FBTCxFQUFjLEdBQUEsQ0FBSSxDQUFBLENBQUUsV0FBRixDQUFKLENBQWQ7TUFDQSxJQUFBLENBQUssT0FBTCxFQUFjLEdBQUEsQ0FBSSxDQUFBLENBQUUsTUFBRixDQUFKLENBQWQ7TUFDQSxJQUFBLENBQUssT0FBTCxFQUFjLEdBQUEsQ0FBSSxDQUFBLENBQUUsTUFBRixDQUFKLENBQWQ7TUFDQSxJQUFBLENBQUssT0FBTCxFQUFjLEdBQUEsQ0FBSSxDQUFBLENBQUUsY0FBRixDQUFKLENBQWQ7YUFDQSxJQUFBLENBQUssT0FBTCxFQUFjLElBQUksQ0FBQyxNQUFMLEtBQWUsQ0FBN0I7SUFWQyxDQUFBLElBREw7OztJQWNFLFNBQUEsR0FBWSxvQ0FkZDs7SUFxQkUsQ0FBQSxHQUFJLFFBQUEsQ0FBRSxLQUFGLEVBQUEsR0FBUyxXQUFULENBQUE7QUFDTixVQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxHQUFBLEVBQUEsT0FBQSxFQUFBLEtBQUEsRUFBQSxJQUFBLEVBQUEsSUFBQSxFQUFBO01BQUksQ0FBQSxHQUFJLEtBQUssQ0FBRSxDQUFGO01BQ1QsS0FBQSx5REFBQTs7UUFDRSxJQUFBLEdBQVUsS0FBSyxDQUFFLEdBQUEsR0FBTSxDQUFSLEVBQXJCOztRQUVNLElBQUcsSUFBSSxDQUFDLFVBQUwsQ0FBZ0IsR0FBaEIsQ0FBSDtVQUNFLElBQU8sdUNBQVA7WUFDRSxNQUFNLElBQUksS0FBSixDQUFVLENBQUEsZ0NBQUEsQ0FBQSxDQUFtQyxHQUFBLENBQUksR0FBSixDQUFuQyxDQUFBLENBQVYsRUFEUjs7VUFFQSxDQUFBLENBQUUsR0FBRixFQUFPLElBQVAsQ0FBQSxHQUFpQixLQUFLLENBQUMsTUFBdkI7VUFDQSxHQUFBLEdBQU0sR0FBRyxDQUFDLE9BQUosQ0FBWSxNQUFaLEVBQW9CLEdBQXBCO1VBQ04sQ0FBQSxJQUFNLENBQUUsQ0FBRSxHQUFHLENBQUMsTUFBSixDQUFXLEdBQVgsQ0FBRixDQUFBLENBQW1CLEtBQW5CLENBQUYsQ0FBQSxHQUErQixLQUx2QztTQUFBLE1BQUE7O1VBUUUsT0FBQSxHQUFhLENBQUUsT0FBTyxLQUFQLEtBQWdCLFFBQWxCLENBQUgsR0FBcUMsS0FBckMsR0FBZ0QsR0FBQSxDQUFJLEtBQUo7VUFDMUQsQ0FBQSxJQUFVLE9BQUEsR0FBVSxLQVR0Qjs7TUFIRjtBQWFBLGFBQU87SUFmTDtJQWdCSixJQUFBLENBQUssT0FBTCxFQUFjLEdBQUEsQ0FBSSxDQUFDLENBQUEsR0FBQSxDQUFBLENBQU0sU0FBTixDQUFBLHFCQUFBLENBQUEsQ0FBdUMsS0FBdkMsQ0FBQSxVQUFBLENBQUwsQ0FBZDtJQUNBLElBQUEsQ0FBSyxPQUFMLEVBQWMsR0FBQSxDQUFJLENBQUMsQ0FBQSxHQUFBLENBQUEsQ0FBTSxTQUFOLENBQUEsbUJBQUEsQ0FBQSxDQUFxQyxLQUFyQyxDQUFBLFVBQUEsQ0FBTCxDQUFkLEVBdENGOzs7Ozs7Ozs7Ozs7Ozs7O0FBd0RFLFdBQU87RUF6RFEsRUFwQmpCOzs7RUFnRkEsSUFBRyxNQUFBLEtBQVUsT0FBTyxDQUFDLElBQXJCO0lBQWtDLENBQUEsQ0FBQSxDQUFBLEdBQUE7YUFDaEMsY0FBQSxDQUFBO0lBRGdDLENBQUEsSUFBbEM7OztFQWhGQTs7Ozs7Ozs7Ozs7O0FBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJcblxuJ3VzZSBzdHJpY3QnXG5cbkdVWSAgICAgICAgICAgICAgICAgICAgICAgPSByZXF1aXJlICdndXknXG57IGFsZXJ0XG4gIGRlYnVnXG4gIGhlbHBcbiAgaW5mb1xuICBwbGFpblxuICBwcmFpc2VcbiAgdXJnZVxuICB3YXJuXG4gIHdoaXNwZXIgfSAgICAgICAgICAgICAgID0gR1VZLnRybS5nZXRfbG9nZ2VycyAnaW50ZXJ0eXBlL3Rlc3QtYmFzaWNzJ1xueyBycHJcbiAgaW5zcGVjdFxuICBlY2hvXG4gIHJldmVyc2VcbiAgbG9nICAgICB9ICAgICAgICAgICAgICAgPSBHVVkudHJtXG5cblxuIz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5kZW1vX2QzX2Zvcm1hdCA9IC0+XG4gIEQzRiA9IHJlcXVpcmUgJ2QzLWZvcm1hdCdcbiAgZG8gPT5cbiAgICBoZWxwICfOqV9fXzEnLCBmID0gRDNGLmZvcm1hdCAnLj4rJDIwLC4zZidcbiAgICBoZWxwICfOqV9fXzInLCBycHIgZiAxMjM0LjU2NzhcbiAgICBoZWxwICfOqV9fXzMnLCBycHIgZiAnMTIzNC41Njc4J1xuICAgIGhlbHAgJ86pX19fNCcsIGYgPSBEM0YuZm9ybWF0ICfigJQ+KyQyMCwuM2MnXG4gICAgaGVscCAnzqlfX181JywgcnByIGYgMTIzNC41Njc4XG4gICAgaGVscCAnzqlfX182JywgcnByIGYgJzEyMzQuNTY3OCdcbiAgICBoZWxwICfOqV9fXzcnLCBycHIgZiAnaGVsbydcbiAgICBoZWxwICfOqV9fXzgnLCBycHIgZiAn5LiA5Y2D5LqM55m+J1xuICAgIGhlbHAgJ86pX19fOScsIHJwciBmICfkuIDljYPkuoznmb7kuInljYHlm5vngrnkupTlha3kuIPlhasnXG4gICAgaGVscCAnzqlfXzEwJywgJ1xcOycubGVuZ3RoIGlzIDFcbiAgIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAjIyMgVEFJTlQgZG9lcyBub3QgdHJlYXQgYmFja3NsYXNoLWVzY2FwZWQgY2hhcmFjdGVycyBjb3JyZWN0bHkgIyMjXG4gIGZvcm1hdF9yZSA9IC8vL1xuICAgIF46XG4gICAgKD88Zm10Pi4rPyg/PCFcXFxcKSk7XG4gICAgKD88dGFpbD4uKilcbiAgICAkXG4gICAgLy8vXG4gICMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgZiA9ICggcGFydHMsIGV4cHJlc3Npb25zLi4uICkgLT5cbiAgICBSID0gcGFydHNbIDAgXVxuICAgIGZvciB2YWx1ZSwgaWR4IGluIGV4cHJlc3Npb25zXG4gICAgICBwYXJ0ICAgID0gcGFydHNbIGlkeCArIDEgXVxuICAgICAgIy4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uXG4gICAgICBpZiBwYXJ0LnN0YXJ0c1dpdGggJzonXG4gICAgICAgIHVubGVzcyAoIG1hdGNoID0gcGFydC5tYXRjaCBmb3JtYXRfcmUgKT9cbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IgXCLOqV9fMTQgaWxsZWdhbCBmb3JtYXQgZXhwcmVzc2lvbiAje3JwciByYXd9XCJcbiAgICAgICAgeyBmbXQsIHRhaWwsIH0gPSBtYXRjaC5ncm91cHNcbiAgICAgICAgZm10ID0gZm10LnJlcGxhY2UgL1xcXFw7L2csICc7J1xuICAgICAgICBSICArPSAoICggRDNGLmZvcm1hdCBmbXQgKSB2YWx1ZSApICsgdGFpbFxuICAgICAgIy4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uXG4gICAgICBlbHNlXG4gICAgICAgIGxpdGVyYWwgPSBpZiAoIHR5cGVvZiB2YWx1ZSBpcyAnc3RyaW5nJyApIHRoZW4gdmFsdWUgZWxzZSBycHIgdmFsdWVcbiAgICAgICAgUiAgICAgICs9IGxpdGVyYWwgKyBwYXJ0XG4gICAgcmV0dXJuIFJcbiAgdXJnZSAnzqlfXzE3JywgcnByIGZcIkFBQSN7MTIzNC41Njc4fTpcXFxcOz4rMjAsLjNmO0RcXHRcXFxcO0REI3s5OC43Nn06KzcuMmY7WlpaXCJcbiAgdXJnZSAnzqlfXzE3JywgcnByIGZcIkFBQSN7MTIzNC41Njc4fTogPisyMCwuM2Y7RFxcdFxcXFw7REQjezk4Ljc2fTorNy4yZjtaWlpcIlxuXG5cbiAgIyB7IGZvcm1hdCwgbmV3X2Zvcm1hdHRlciwgfSA9IHJlcXVpcmVfbXlmc3RyaW5nKClcbiAgIyB1cmdlICfOqV9fMTgnLCBmb3JtYXQgJzoqPCsyMCwuNWcnLCAnMTE0NTYuMTU0NTQnXG4gICMgdXJnZSAnzqlfXzE5JywgZm9ybWF0ICc6KjwrMjAsLjVnJywgMTE0NTYuMTU0NTRcbiAgIyAjIHVyZ2UgJ86pX18yMCcsIGZvcm1hdCAnOio9KzIwLC41ZycsIDExNDU2LjE1NDU0XG5cbiAgIyBmMTUyZiA9IG5ld19mb3JtYXR0ZXIgJzogPiAxNSwuMmYnXG4gICMgaGVscCAnzqlfXzIxJywgZjE1MmYgMVxuICAjIGhlbHAgJ86pX18yMicsIGYxNTJmIDEyXG4gICMgaGVscCAnzqlfXzIzJywgZjE1MmYgMTIzXG4gICMgaGVscCAnzqlfXzI0JywgZjE1MmYgMTIzNFxuICAjIGhlbHAgJ86pX18yNScsIGYxNTJmIC0xMTQ1Ni4xNTQ1NFxuICAjIGhlbHAgJ86pX18yNicsIGYxNTJmIDUzNDQzLjMyNDU1XG4gICMgaGVscCAnzqlfXzI3JywgZjE1MmYgODg1NjczLjM2NzU1M1xuICAjIGYxNXMgPSBuZXdfZm9ybWF0dGVyICc6ID4gMTVzJ1xuICAjIGhlbHAgJ86pX18yOCcsIGYxNXMgJ2hlbG8nXG4gIHJldHVybiBudWxsXG5cbiM9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuaWYgbW9kdWxlIGlzIHJlcXVpcmUubWFpbiB0aGVuIGRvID0+XG4gIGRlbW9fZDNfZm9ybWF0KClcbiAgIyB1cmdlICfOqV9fMjknLCBycHIgU3RyaW5nLnJhdyB7IHJhdzogWyAnMTIzXFx0XFx1NGUwMScsIF0sIH0sICcxMjNcXHRcXHU0ZTAxJ1xuICAjIHVyZ2UgJ86pX18zMCcsIHJwciBTdHJpbmcucmF3IHsgcmF3OiBbICcxMjNcXFxcdFxcXFx1NGUwMScsIF0sIH0sICcxMjNcXFxcdFxcXFx1NGUwMSdcbiAgIyB1cmdlICfOqV9fMzAnLCBycHIgJ1wiMTIzXFxcXHRcXFxcdTRlMDFcXHgwMVxcMzc3XCInXG4gICMgdXJnZSAnzqlfXzMwJywgcnByIEpTT04ucGFyc2UgJ1wiMTIzXFxcXHRcXFxcdTRlMDFcXHgwMVxcMzc3XCInXG5cbiAgIyBlbXB0eSA9ICcnXG4gICMgeCA9ICd3aGF0J1xuICAjIHVyZ2UgJ86pX18zMScsIFNRTFwiYWJjXCJcbiAgIyB1cmdlICfOqV9fMzInLCBTUUxcImFiYyN7fXh5elwiXG4gICMgdXJnZSAnzqlfXzMzJywgU1FMXCJhYmMje2VtcHR5fXh5elwiXG4gICMgdXJnZSAnzqlfXzM0JywgU1FMXCJhYmMje3h9OjsgeHl6XCJcbiAgIyB1cmdlICfOqV9fMzUnLCBTUUxcIlxcOyN7eH06OyB4eXpcIlxuIl19
//# sourceURL=../src/demo-fstrings-ported.coffee