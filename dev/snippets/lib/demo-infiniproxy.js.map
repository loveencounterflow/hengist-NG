{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-infiniproxy.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n###\n\n\n## Applications\n\n* **RegEx Builder** (example from [Rejigs blog post](https://medium.com/@omarzawahry/rejigs-making-regular-expressions-human-readable-1fad37cb3eae))\n\n```java\nvar emailRegex =\n    Rejigs.Create()\n          .AtStart()\n          .OneOrMore(r => r.AnyLetterOrDigit().Or().AnyOf(\"._%+-\"))\n          .Text(\"@\")\n          .OneOrMore(r => r.AnyLetterOrDigit().Or().AnyOf(\".-\"))\n          .Text(\".\")\n          .AnyLetterOrDigit().AtLeast(2)\n          .AtEnd()\n          .Build();\n```\n\n* **HTML/XML Builer**\n* **SQL Builder**: `SQL.insert.into.employees('id','name').values(id,name)`\n* **CLI Coloring**\n* syntax for a **Type Checker**\n\n###\n\n\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'demo-proxy'\n{ rpr\n  inspect\n  echo\n  white\n  blue\n  gold\n  grey\n  red\n  bold\n  reverse\n  log     }               = GUY.trm\n{ f }                     = require '../../../apps/effstring'\nwrite                     = ( p ) -> process.stdout.write p\nC                         = require 'ansis'\n{ nfa }                   = require '../../../apps/normalize-function-arguments'\nGTNG                      = require '../../../apps/guy-test-NG'\n{ Test                  } = GTNG\nSFMODULES                 = require './single-file-modules'\n\n\n\n#===========================================================================================================\ndemo_instance_function_as_proxy = ->\n\n  #===========================================================================================================\n  { D, } = do ->\n    { create_infinyproxy,\n      sys_symbol,           } = SFMODULES.require_infiniproxy()\n    #=========================================================================================================\n    class D\n\n      #-------------------------------------------------------------------------------------------------------\n      constructor: ( callee ) ->\n        @other_prop = 'OTHER_PROP'\n        Object.setPrototypeOf callee, @\n        R = create_infinyproxy { callee, provider: @, }\n        # ...\n        return R\n\n      #-------------------------------------------------------------------------------------------------------\n      method_of_d: ( value ) ->\n        whisper 'Ω___1', 'METHOD_OF_D'\n        whisper 'Ω___2', ( k for k of @[ sys_symbol ] ) # .sub_level_proxy\n        @[ sys_symbol ].stack.push 'generated'\n        @[ sys_symbol ].stack.push 'stuff'\n        @[ sys_symbol ].stack.push \"value:#{rpr value}\"\n        return @[ sys_symbol ].sub_level_proxy\n\n      #-------------------------------------------------------------------------------------------------------\n      property_of_d: 'PROPERTY_OF_D'\n\n    #---------------------------------------------------------------------------------------------------------\n    return exports = { D, }\n  #.........................................................................................................\n  do =>\n    my_fn_3 = ( P... ) ->\n      whisper 'Ω___3', @stack, @stack.is_empty, [ @stack..., ]\n      chain   = [ @stack..., ].join '.'\n      content = ( ( rpr p ) for p in P )\n      return \"[#{chain}:#{content}]\"\n    echo '——————————————————————————————————————————————————————————————————————————————'\n    help 'Ω___4', rpr d = new D my_fn_3\n    help 'Ω___5', reverse GUY.trm.truth ( d instanceof D )   # true\n    help 'Ω___6', rpr Object.getPrototypeOf d\n    help 'Ω___7', rpr ( typeof Object.getPrototypeOf d ) is ( typeof ( -> ) )\n    help 'Ω___8', rpr typeof d\n    help 'Ω___9', rpr Object::toString.call d\n    help 'Ω__10', rpr d instanceof Function\n    echo '——————————————————————————————————————————————————————————————————————————————'\n    info 'Ω__11', rpr d.other_prop     # OTHER_PROP\n    info 'Ω__12', rpr d.method_of_d()  # METHOD_OF_D\n    info 'Ω__13', rpr d.property_of_d  # PROPERTY_OF_D\n    info 'Ω__14', rpr d.unknown_key    # something else: 'unknown_key'\n    echo '——————————————————————————————————————————————————————————————————————————————'\n    info 'Ω__15', rpr d 1, 2, 'c'\n    info 'Ω__16', rpr d.red\n    info 'Ω__17', rpr d 1, 2, 'c'\n    info 'Ω__18', rpr d.red.bold 1, 2, 'c'\n    info 'Ω__19', rpr d.red.bold.method_of_d(123).hola 'ftw'\n    info 'Ω__20', rpr d.red.bold.method_of_d'123'.hola 'ftw'\n  return null\n\n\n#===========================================================================================================\ndemo_colorful_proxy = ->\n  class TMP_error extends Error\n  { create_infinyproxy,\n    sys_symbol,           } = SFMODULES.require_infiniproxy()\n  #=========================================================================================================\n  class Colorizer\n\n    #-------------------------------------------------------------------------------------------------------\n    @colorize: ( P... ) ->\n      whisper 'Ω__21', \"colorize() context keys:  #{rpr ( k for k of @ )}\"\n      whisper 'Ω__22', \"colorize() arguments:     #{rpr P}\"\n      whisper 'Ω__23', \"colorize() stack:         #{rpr [ @stack..., ]}\"\n      return \"*******************\"\n\n    #-------------------------------------------------------------------------------------------------------\n    constructor: ->\n      @other_prop = 'OTHER_PROP'\n      Object.setPrototypeOf @constructor.colorize, @\n      R = create_infinyproxy { callee: @constructor.colorize, provider: @, }\n      return R\n\n  #=========================================================================================================\n  # base = ( P... ) ->\n  #   R = P[ 0 ]\n  #   while stack.length > 0\n  #     key = stack.pop()\n  #     R   = C[ key ] R\n  #   return R\n  #.........................................................................................................\n  c = new Colorizer()\n  info 'Ω__24', c\n  info 'Ω__25', c.green.bold.inverse \" holy moly \"\n  # #.........................................................................................................\n  # info 'Ω__26', p.yellow.italic\"some text\"\n  # info 'Ω__27', p.green.bold.inverse.underline\"some text\"\n  # ### Building the chain: ###\n  # chain = p.cyan.bold\n  # chain.underline\n  # info 'Ω__28', p \"finally, a call\"\n  return null\n\n\n#===========================================================================================================\ndemo_show_color_effects = ->\n  reset = \"\\x1b[0m\"\n  lime  = \"\\x1b[38;05;118m\"\n  show  = ( P... ) -> echo lime, P..., reset\n  #.........................................................................................................\n  echo \"ANSI styles\"\n  show \"\\x1b[38;05;51m——————————————————————————————————————————————————————————————————————————————\"\n  echo \"no effect\"\n  show \"abc▄\\x1b[26m DEF▄ \\x1b[0mxyz▄ —— proportional  ——\"\n  show \"abc▄\\x1b[10m DEF▄ \\x1b[10mxyz▄ —— font0      ——\"\n  show \"abc▄\\x1b[11m DEF▄ \\x1b[10mxyz▄ —— font1      ——\"\n  show \"abc▄\\x1b[12m DEF▄ \\x1b[10mxyz▄ —— font2       ——\"\n  show \"abc▄\\x1b[13m DEF▄ \\x1b[10mxyz▄ —— font3       ——\"\n  show \"abc▄\\x1b[14m DEF▄ \\x1b[10mxyz▄ —— font4    ——\"\n  show \"abc▄\\x1b[15m DEF▄ \\x1b[10mxyz▄ —— font5  ——\"\n  show \"abc▄\\x1b[16m DEF▄ \\x1b[10mxyz▄ —— font6      ——\"\n  show \"abc▄\\x1b[17m DEF▄ \\x1b[10mxyz▄ —— font7       ——\"\n  show \"abc▄\\x1b[18m DEF▄ \\x1b[10mxyz▄ —— font8       ——\"\n  show \"abc▄\\x1b[19m DEF▄ \\x1b[10mxyz▄ —— font9    ——\"\n  show \"abc▄\\x1b[50m DEF▄ \\x1b[0mxyz▄ —— framed etc  ——\"\n  show \"abc▄\\x1b[51m DEF▄ \\x1b[0mxyz▄ —— framed etc  ——\"\n  show \"abc▄\\x1b[52m DEF▄ \\x1b[0mxyz▄ —— framed etc  ——\"\n  show \"abc▄\\x1b[54m DEF▄ \\x1b[0mxyz▄ —— framed etc  ——\"\n  show \"abc▄\\x1b[55m DEF▄ \\x1b[0mxyz▄ —— framed etc  ——\"\n  show \"abc▄\\x1b[56m DEF▄ \\x1b[0mxyz▄ —— framed etc  ——\"\n  show \"abc▄\\x1b[57m DEF▄ \\x1b[0mxyz▄ —— framed etc  ——\"\n  show \"abc▄\\x1b[58m DEF▄ \\x1b[0mxyz▄ —— framed etc  ——\"\n  show \"abc▄\\x1b[60m DEF▄ \\x1b[0mxyz▄ —— CJK  ——\"\n  show \"abc▄\\x1b[61m DEF▄ \\x1b[0mxyz▄ —— CJK  ——\"\n  show \"abc▄\\x1b[62m DEF▄ \\x1b[0mxyz▄ —— CJK  ——\"\n  show \"abc▄\\x1b[63m DEF▄ \\x1b[0mxyz▄ —— CJK  ——\"\n  show \"abc▄\\x1b[64m DEF▄ \\x1b[0mxyz▄ —— CJK  ——\"\n  show \"abc▄\\x1b[70m DEF▄ \\x1b[0mxyz▄ —— super/sub  ——\"\n  show \"abc▄\\x1b[71m DEF▄ \\x1b[0mxyz▄ —— super/sub  ——\"\n  show \"abc▄\\x1b[72m DEF▄ \\x1b[0mxyz▄ —— super/sub  ——\"\n  show \"abc▄\\x1b[73m DEF▄ \\x1b[0mxyz▄ —— super/sub  ——\"\n  show \"abc▄\\x1b[74m DEF▄ \\x1b[0mxyz▄ —— super/sub  ——\"\n  show \"abc▄\\x1b[75m DEF▄ \\x1b[0mxyz▄ —— super/sub  ——\"\n  show \"abc▄\\x1b[76m DEF▄ \\x1b[0mxyz▄ —— super/sub  ——\"\n  show \"abc▄\\x1b[77m DEF▄ \\x1b[0mxyz▄ —— super/sub  ——\"\n  show \"abc▄\\x1b[78m DEF▄ \\x1b[0mxyz▄ —— super/sub  ——\"\n  show \"abc▄\\x1b[79m DEF▄ \\x1b[0mxyz▄ —— super/sub  ——\"\n  show \"\\x1b[38;05;51m——————————————————————————————————————————————————————————————————————————————\"\n  show \"abc▄\\x1b[1m DEF▄ \\x1b[22mxyz▄ —— bold   <-> slim      ——\"\n  show \"abc▄\\x1b[21m DEF▄ \\x1b[24mxyz▄ —— double underline       ——\"\n  show \"abc▄\\x1b[2m DEF▄ \\x1b[22mxyz▄ —— dim    <-> nodim      ——\"\n  show \"abc▄\\x1b[3m DEF▄ \\x1b[23mxyz▄ —— italic <-> straight       ——\"\n  show \"abc▄\\x1b[4m DEF▄ \\x1b[24mxyz▄ —— underline    ——\"\n  show \"abc▄\\x1b[5m DEF▄ \\x1b[25mxyz▄ —— blink      ——\"\n  show \"abc▄\\x1b[6m DEF▄ \\x1b[25mxyz▄ —— blink      ——\"\n  show \"abc▄\\x1b[7m DEF▄ \\x1b[27mxyz▄ —— reverse       ——\"\n  show \"abc▄\\x1b[8m DEF▄ \\x1b[28mxyz▄ —— hide <-> reveal       ——\"\n  show \"abc▄\\x1b[9m DEF▄ \\x1b[29mxyz▄ —— strike <-> nostrike    ——\"\n  show \"abc▄\\x1b[53m DEF▄ \\x1b[55mxyz▄ —— overline <-> no overline  ——\"\n  show \"abc▄\\x1b[45mbg_magenta\\x1b[49m DEF▄ \\x1b[0mxyz▄ —— BG color off             ——\"\n  show \"\\x1b[38;05;51m——————————————————————————————————————————————————————————————————————————————\"\n  show \"abc \\x1b[36m\\x1b[53m\\x1b[7m DEFgjy \\x1b[55m\\x1b[34m\\x1b[27mxyz —— overline + reverse  ——\"\n  show \"abc \\x1b[36m\\x1b[53m\\x1b[7m DEFgjy \\x1b[55m\\x1b[34m\\x1b[27mxyz —— overline + reverse  ——\"\n  show \"\\x1b[38;05;51m——————————————————————————————————————————————————————————————————————————————\"\n  show \"abc▄\\x1b[30m DEF▄ \\x1b[0mxyz▄ —— fg_black             ——\"\n  show \"abc▄\\x1b[31m DEF▄ \\x1b[0mxyz▄ —— fg_red               ——\"\n  show \"abc▄\\x1b[32m DEF▄ \\x1b[0mxyz▄ —— fg_green             ——\"\n  show \"abc▄\\x1b[33m DEF▄ \\x1b[0mxyz▄ —— fg_yellow            ——\"\n  show \"abc▄\\x1b[34m DEF▄ \\x1b[0mxyz▄ —— fg_blue              ——\"\n  show \"abc▄\\x1b[35m DEF▄ \\x1b[0mxyz▄ —— fg_magenta           ——\"\n  show \"abc▄\\x1b[36m DEF▄ \\x1b[0mxyz▄ —— fg_cyan              ——\"\n  show \"abc▄\\x1b[37m DEF▄ \\x1b[0mxyz▄ —— fg_white             ——\"\n  show \"abc▄\\x1b[90m DEF▄ \\x1b[0mxyz▄ —— fg_bright_black      ——\"\n  show \"abc▄\\x1b[91m DEF▄ \\x1b[0mxyz▄ —— fg_bright_red        ——\"\n  show \"abc▄\\x1b[92m DEF▄ \\x1b[0mxyz▄ —— fg_bright_green      ——\"\n  show \"abc▄\\x1b[93m DEF▄ \\x1b[0mxyz▄ —— fg_bright_yellow     ——\"\n  show \"abc▄\\x1b[94m DEF▄ \\x1b[0mxyz▄ —— fg_bright_blue       ——\"\n  show \"abc▄\\x1b[95m DEF▄ \\x1b[0mxyz▄ —— fg_bright_magenta    ——\"\n  show \"abc▄\\x1b[96m DEF▄ \\x1b[0mxyz▄ —— fg_bright_cyan       ——\"\n  show \"abc▄\\x1b[97m DEF▄ \\x1b[0mxyz▄ —— fg_bright_white      ——\"\n  show \"abc▄\\x1b[40m DEF▄ \\x1b[0mxyz▄ —— bg_black             ——\"\n  show \"abc▄\\x1b[41m DEF▄ \\x1b[0mxyz▄ —— bg_red               ——\"\n  show \"abc▄\\x1b[42m DEF▄ \\x1b[0mxyz▄ —— bg_green             ——\"\n  show \"abc▄\\x1b[43m DEF▄ \\x1b[0mxyz▄ —— bg_yellow            ——\"\n  show \"abc▄\\x1b[44m DEF▄ \\x1b[0mxyz▄ —— bg_blue              ——\"\n  show \"abc▄\\x1b[45m DEF▄ \\x1b[0mxyz▄ —— bg_magenta           ——\"\n  show \"abc▄\\x1b[46m DEF▄ \\x1b[0mxyz▄ —— bg_cyan              ——\"\n  show \"abc▄\\x1b[47m DEF▄ \\x1b[0mxyz▄ —— bg_white             ——\"\n  show \"abc▄\\x1b[100m DEF▄ \\x1b[0mxyz▄ —— bg_bright_black      ——\"\n  show \"abc▄\\x1b[101m DEF▄ \\x1b[0mxyz▄ —— bg_bright_red        ——\"\n  show \"abc▄\\x1b[102m DEF▄ \\x1b[0mxyz▄ —— bg_bright_green      ——\"\n  show \"abc▄\\x1b[103m DEF▄ \\x1b[0mxyz▄ —— bg_bright_yellow     ——\"\n  show \"abc▄\\x1b[104m DEF▄ \\x1b[0mxyz▄ —— bg_bright_blue       ——\"\n  show \"abc▄\\x1b[105m DEF▄ \\x1b[0mxyz▄ —— bg_bright_magenta    ——\"\n  show \"abc▄\\x1b[106m DEF▄ \\x1b[0mxyz▄ —— bg_bright_cyan       ——\"\n  show \"abc▄\\x1b[107m DEF▄ \\x1b[0mxyz▄ —— bg_bright_white      ——\"\n  show \"\\x1b[38;05;51m——————————————————————————————————————————————————————————————————————————————\"\n  show \"\\x1b[9mESC[38;2;⟨r⟩;⟨g⟩;⟨b⟩m Select RGB foreground color\"\n  show \"\\x1b[9mESC[48;2;⟨r⟩;⟨g⟩;⟨b⟩m Select RGB background color\"\n  show \"ESC[38:2:⟨???⟩:⟨r⟩:⟨g⟩:⟨b⟩:⟨unused⟩:⟨???⟩:⟨???⟩m Select RGB foreground color\"\n  show \"ESC[48:2:⟨???⟩:⟨r⟩:⟨g⟩:⟨b⟩:⟨unused⟩:⟨???⟩:⟨???⟩m Select RGB background color\"\n  show \"also supports CMYK; trailing colons can be omitted\"\n  show \"\\x1b[38;05;51m——————————————————————————————————————————————————————————————————————————————\"\n  show \"abc▄\\x1b[38:2::255:0:0m DEF▄ \\x1b[0mxyz▄ —— RGB             ——\"\n  show \"abc▄\\x1b[38:2::200:0:0m DEF▄ \\x1b[0mxyz▄ —— RGB             ——\"\n  show \"abc▄\\x1b[38:2::100:0:0m DEF▄ \\x1b[0mxyz▄ —— RGB             ——\"\n  show \"abc▄\\x1b[38:2::10:0:0m DEF▄ \\x1b[0mxyz▄ —— RGB             ——\"\n  show \"abc▄\\x1b[38:2::255:0:0m DEF▄ \\x1b[0mxyz▄ —— RGB             ——\"\n  show \"abc▄\\x1b[38:2::200:0:200m DEF▄ \\x1b[0mxyz▄ —— RGB             ——\"\n  show \"abc▄\\x1b[38:2::100:0:200m DEF▄ \\x1b[0mxyz▄ —— RGB             ——\"\n  show \"abc▄\\x1b[38:2::10:0:255m DEF▄ \\x1b[0mxyz▄ —— RGB             ——\"\n  return null\n\n#===========================================================================================================\nif module is require.main then await do =>\n  guytest_cfg = { throw_on_error: false,  show_passes: false, report_checks: false, }\n  guytest_cfg = { throw_on_error: true,   show_passes: false, report_checks: false, }\n  # ( new Test guytest_cfg ).test { demo_proxy_as_html_producer, }\n  #.........................................................................................................\n  # demo_infinite_proxy()\n  demo_instance_function_as_proxy()\n  demo_colorful_proxy()\n  demo_show_color_effects()\n\n  # # d = new Proxy ( ( P... ) -> urge 'Ω__29', P ),\n  # provider    = {}\n  # callee      = ( P... ) ->\n  # callee_ctx  = {}\n  # d = new Proxy callee,\n  #   set: ( target, key, value ) ->\n  #     warn 'Ω__30', 'set', ( rpr key ), ( rpr value )\n  #     Reflect.set provider, key, \"*#{value}*\"\n  #     return true\n  #   get: ( target, key ) ->\n  #     help 'Ω__31', 'get', rpr key\n  #     return Reflect.get provider, key if Reflect.has provider, key\n  #     return Symbol 'notavalue'\n  #   apply: ( target, _, P... ) ->\n  #     debug 'Ω__32', P\n  #     # target.apply null, P\n  # info 'Ω__33', d 'helo'\n  # info 'Ω__34', d.greetings = 'helo'\n  # info 'Ω__35', d.greetings\n"
  ]
}