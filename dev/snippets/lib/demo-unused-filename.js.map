{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-unused-filename.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'demo-proxy'\n{ rpr\n  inspect\n  echo\n  white\n  blue\n  gold\n  grey\n  red\n  bold\n  reverse\n  log     }               = GUY.trm\n{ f }                     = require '../../../apps/effstring'\nwrite                     = ( p ) -> process.stdout.write p\nC                         = require 'ansis'\n{ nfa }                   = require '../../../apps/normalize-function-arguments'\nGTNG                      = require '../../../apps/guy-test-NG'\n{ Test                  } = GTNG\nSFMODULES                 = require './single-file-modules'\n\n\n\n#===========================================================================================================\nfile_mirror_tests =\n  t1: ->\n    { get_next_free_filename,\n      get_next_filename,\n      exists,\n      cache_filename_re,      } = SFMODULES.require_next_free_filename()\n    PATH                        = require 'node:path'\n    #.......................................................................................................\n    @throws ( Ω___7 = -> get_next_free_filename null        ), /expected a text/\n    @throws ( Ω___8 = -> get_next_free_filename undefined   ), /expected a text/\n    @throws ( Ω___9 = -> get_next_free_filename true        ), /expected a text/\n    @throws ( Ω__10 = -> get_next_free_filename ''          ), /expected a nonempty text/\n    #.......................................................................................................\n    probes_and_matchers = [\n      [ 'a',                                   [ false, '~.a.0001.filemirror-cache',         '~.a.0001.filemirror-cache', ], ]\n      [ 'README.md',                           [ true,  '~.README.md.0001.filemirror-cache', '~.README.md.0004.filemirror-cache', ], ]\n      [ '~.README.md.0001.filemirror-cache',   [ true,  '~.README.md.0002.filemirror-cache', '~.README.md.0004.filemirror-cache', ], ]\n      [ '~.README.md.0002.filemirror-cache',   [ true,  '~.README.md.0003.filemirror-cache', '~.README.md.0004.filemirror-cache', ], ]\n      [ '~.README.md.0003.filemirror-cache',   [ true,  '~.README.md.0004.filemirror-cache', '~.README.md.0004.filemirror-cache', ], ]\n      [ '~.README.md.0004.filemirror-cache',   [ false, '~.README.md.0005.filemirror-cache', '~.README.md.0005.filemirror-cache', ], ]\n      ]\n    path_prefix = PATH.resolve '../../../assets/bricabrac/find-free-filename'\n    #.......................................................................................................\n    do =>\n      for [ path, [ matcher_1, matcher_2, matcher_3, ], ] in probes_and_matchers\n        abs_path      = PATH.join path_prefix, path\n        abs_matcher_2 = PATH.join path_prefix, matcher_2\n        abs_matcher_3 = PATH.join path_prefix, matcher_3\n        @eq ( Ω__12 = -> exists abs_path                    ), matcher_1\n        @eq ( Ω__13 = -> get_next_filename       abs_path   ), abs_matcher_2\n        @eq ( Ω__14 = -> get_next_free_filename  abs_path   ), abs_matcher_3\n      return null\n    #.......................................................................................................\n    do =>\n      for [ path, [ matcher_1, matcher_2, matcher_3, ], ] in probes_and_matchers\n        rel_path      = PATH.relative process.cwd(), PATH.join path_prefix, path\n        rel_matcher_2 = PATH.relative process.cwd(), PATH.join path_prefix, matcher_2\n        rel_matcher_3 = PATH.relative process.cwd(), PATH.join path_prefix, matcher_3\n        @eq ( Ω__12 = -> exists rel_path                    ), matcher_1\n        @eq ( Ω__13 = -> get_next_filename       rel_path   ), rel_matcher_2\n        @eq ( Ω__14 = -> get_next_free_filename  rel_path   ), rel_matcher_3\n      return null\n    #.......................................................................................................\n    return null\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  guytest_cfg = { throw_on_error: false,  show_passes: false, report_checks: false, }\n  guytest_cfg = { throw_on_error: true,   show_passes: false, report_checks: false, }\n  ( new Test guytest_cfg ).test { file_mirror_tests, }\n  #.........................................................................................................\n  return null\n"
  ]
}