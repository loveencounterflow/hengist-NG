{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-unused-filename.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'demo-proxy'\n{ rpr\n  inspect\n  echo\n  white\n  blue\n  gold\n  grey\n  red\n  bold\n  reverse\n  log     }               = GUY.trm\n{ f }                     = require '../../../apps/effstring'\nwrite                     = ( p ) -> process.stdout.write p\nC                         = require 'ansis'\n{ nfa }                   = require '../../../apps/normalize-function-arguments'\nGTNG                      = require '../../../apps/guy-test-NG'\n{ Test                  } = GTNG\nSFMODULES                 = require './single-file-modules'\n\n\n\n#===========================================================================================================\nfile_mirror_tests =\n  t1: ->\n    cache_filename_re = /^~\\.(?<first>.*)\\.(?<nr>[0-9]{4})\\.filemirror-cache/v\n    class TMP_custom_error extends Error\n    class TMP_validation_error extends Error\n    FS = require 'node:fs'\n    max_attempts = 9999\n    #.......................................................................................................\n    exists = ( path ) ->\n      try FS.statSync path catch error then return false\n      return true\n    #.......................................................................................................\n    get_next_filename = ( path ) ->\n      ### TAINT use proper type checking ###\n      throw new TMP_validation_error \"Ω___1 expected a text, got #{rpr path}\" unless ( typeof path ) is 'string'\n      throw new TMP_validation_error \"Ω___2 expected a nonempty text, got #{rpr path}\" unless path.length > 0\n      return \"~.#{path}.0001.filemirror-cache\" unless ( match = path.match cache_filename_re )?\n      { first, nr, } = match.groups\n      nr        = \"#{( parseInt nr, 10 ) + 1}\".padStart 4, '0'\n      path      = first\n      return \"~.#{first}.#{nr}.filemirror-cache\"\n    #.......................................................................................................\n    get_next_free_filename = ( path ) ->\n      R                     = path\n      failed_attempt_count  = -1\n      #.....................................................................................................\n      loop\n        #...................................................................................................\n        failed_attempt_count++\n        if failed_attempt_count > max_attempts\n          throw new TMP_custom_error \"Ω___3 too many (#{failed_attempt_count}) attempts; path #{rpr R} exists\"\n        #...................................................................................................\n        R = get_next_filename R\n        whisper 'Ω___4', \"probing #{R}\"\n        break unless exists R\n      return R\n    #.......................................................................................................\n    @throws ( Ω___5 = -> get_next_free_filename null        ), /expected a text/\n    @throws ( Ω___6 = -> get_next_free_filename undefined   ), /expected a text/\n    @throws ( Ω___7 = -> get_next_free_filename true        ), /expected a text/\n    @throws ( Ω___8 = -> get_next_free_filename ''          ), /expected a nonempty text/\n    #.......................................................................................................\n    probes_and_matchers = [\n      [ 'a',                                   [ false, '~.a.0001.filemirror-cache',         '~.a.0001.filemirror-cache', ], ]\n      [ 'README.md',                           [ true,  '~.README.md.0001.filemirror-cache', '~.README.md.0004.filemirror-cache', ], ]\n      [ '~.README.md.0001.filemirror-cache',   [ true,  '~.README.md.0002.filemirror-cache', '~.README.md.0004.filemirror-cache', ], ]\n      [ '~.README.md.0002.filemirror-cache',   [ true,  '~.README.md.0003.filemirror-cache', '~.README.md.0004.filemirror-cache', ], ]\n      [ '~.README.md.0003.filemirror-cache',   [ true,  '~.README.md.0004.filemirror-cache', '~.README.md.0004.filemirror-cache', ], ]\n      [ '~.README.md.0004.filemirror-cache',   [ false, '~.README.md.0005.filemirror-cache', '~.README.md.0005.filemirror-cache', ], ]\n      ]\n    for [ path, [ matcher_1, matcher_2, matcher_3, ], ] in probes_and_matchers\n      @eq ( Ω___9 = -> exists path                    ), matcher_1\n      @eq ( Ω__10 = -> get_next_filename       path   ), matcher_2\n      @eq ( Ω__11 = -> get_next_free_filename  path   ), matcher_3\n    return null\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  guytest_cfg = { throw_on_error: false,  show_passes: false, report_checks: false, }\n  guytest_cfg = { throw_on_error: true,   show_passes: false, report_checks: false, }\n  ( new Test guytest_cfg ).test { file_mirror_tests, }\n  #.........................................................................................................\n  return null\n"
  ]
}