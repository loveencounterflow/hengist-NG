{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-generalized-function-signature.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'intertype/test-basics'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\n# WGUY                      = require '../../../apps/webguy'\nGTNG                      = require '../../../apps/guy-test-NG'\n{ Test                  } = GTNG\n{ f }                     = require '../../../apps/effstring'\n\n\n\n#===========================================================================================================\ndemo_generalized_signature = ->\n  do =>\n    d      = []\n    d[ 0 ] = 7\n    d.k    = 6\n    d[ 1 ] = 5\n    urge 'Ω_152', Object.keys d                 # [ '0', '1', 'k' ]\n    urge 'Ω_153', [ ( Object.entries d )..., ]  # [ [ '0', 7 ], [ '1', 5 ], [ 'k', 6 ] ]\n    return null\n  do =>\n    #.......................................................................................................\n    pod_prototypes  = Object.freeze [ null, ( Object.getPrototypeOf {} ), ]\n    gnd =\n      pod: isa: ( x ) -> x? and ( Object.getPrototypeOf x ) in pod_prototypes\n    #.......................................................................................................\n    get_arguments = ( positional, args, fallback = null ) ->\n      help()\n      args = [ args..., ]\n      info 'Ω_154', { positional, args, fallback, }\n      R = {}\n      #.....................................................................................................\n      if gnd.pod.isa args.at -1 then  named_args = args.pop()\n      else                            named_args = null\n      #.....................................................................................................\n      last_arg_idx = args.length - 1\n      for name, idx in positional\n        if idx <= last_arg_idx\n          help 'Ω_155', name, rpr args[ idx ]\n          R[ name ] = args[ idx ]\n        else\n          urge 'Ω_156', \"fallback for positional argument @#{idx} = #{rpr args[ idx ]}\"\n          R[ name ] = fallback\n      #.....................................................................................................\n      if named_args?\n        help 'Ω_157', \"named args #{rpr named_args}\"\n        for name, value of named_args\n          if Reflect.has R, name\n            warn 'Ω_158', \"repeated named argument { #{name}: #{rpr value}, }\"\n            # apply one of strategy = [ 'error', 'named_wins', 'positional_wins', ]\n            R[ name ] = value\n          else\n            R[ name ] = value\n      else\n        urge 'Ω_159', \"no named args\"\n      #.....................................................................................................\n      return R\n    #.......................................................................................................\n    ```\n    const g = function (\n      a,\n      b,\n      c,\n      ) {}\n    ```\n    debug 'Ω_160', g.toString()\n    f = ( a, b, Q ) ->\n      # cfg = Object.assign ( Object.create null ), { a, b, }, Q...\n      cfg = Object.assign {}, { a, b, }, Q...\n      # info 'Ω_161', f\"#{GUY.trm.gold [ arguments..., ]}:>30c;\", GUY.trm.blue { a, b, cfg, }\n      info 'Ω_162', ( GUY.trm.gold [ arguments..., ] ), GUY.trm.blue { a, b, cfg, }\n    #.......................................................................................................\n    debug 'Ω_163', ( f.toString().split '\\n' )[ 0 ].replace /^.*function\\(\\s*/, ''\n    # debug 'Ω_164', ( ( ( a, b = ')', c ) -> ).toString().split '\\n' )[ 0 ].replace /^.*function\\(\\s*/, ''\n    # debug 'Ω_165', ( ( ( a, b ### = ) ###, c, Q... ) => ).toString().split '\\n' )[ 0 ].replace /^.*function\\(\\s*/, ''\n    info 'Ω_166', get_arguments [ 'a', 'b', ], [ 1, ]\n    info 'Ω_167', get_arguments [ 'a', 'b', ], [ 1, k: 'K', ]\n    info 'Ω_168', get_arguments [ 'a', 'b', ], [ 1, 2, k: 'K', ]\n    info 'Ω_169', get_arguments [ 'a', 'b', ], [ 1, 2, 3, k: 'K', ]\n    info 'Ω_170', get_arguments [ 'a', 'b', ], [ 1, 2, k: 'K', a: 'A', ]\n    # f 1\n    # f 1, 2, 3\n    # f 1, 2, k: 'K'\n    # f 1, 2, k: 'K', 9, m: 'M'\n    return null\n  return null\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  # guytest_cfg = { throw_on_error: false,  show_passes: false, report_checks: false, }\n  # guytest_cfg = { throw_on_error: true,   show_passes: false, report_checks: false, }\n  # ( new Test guytest_cfg ).test @cleartype_tasks\n  # # ( new Test guytest_cfg ).test @cleartype_tasks.builtins\n  demo_generalized_signature()"
  ]
}