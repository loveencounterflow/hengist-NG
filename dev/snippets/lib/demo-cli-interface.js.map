{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-cli-interface.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'demo-execa'\n{ rpr\n  inspect\n  echo\n  reverse\n  bold\n  log     }               = GUY.trm\n#...........................................................................................................\nCLK                       = require '@clack/prompts'\nPATH                      = require 'node:path'\nmark                      = ( ref ) -> urge reverse bold \" #{ref} \"\n\n\n#===========================================================================================================\nclass Clack\n\n  #---------------------------------------------------------------------------------------------------------\n  intro_outro: ->\n    CLK.intro \"create-my-app\"\n    value = await CLK.text { message: \"press CTRL+C to continue\", }\n    if CLK.isCancel value\n      CLK.cancel \"Operation cancelled.\"\n      # process.exit 0\n    CLK.outro \"You're all set!\"\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  text: ->\n    cfg =\n      message:      \"What is your name?\"\n      placeholder:  \"Not sure\"\n      initialValue: \"Jim\"\n      validate:     ( value ) ->\n        # debug 'Ω___1', rpr value\n        return \"Value is required!\" if value.length is 0\n        return null\n    name = await CLK.text cfg\n    info \"Ω___2 your name is #{rpr name}\"\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  select: ->\n    await do =>\n      cfg =\n        message:    \"Pick a project type.\"\n        options: [\n          { value: 'ts',      label: 'TypeScript' },\n          { value: 'js',      label: 'JavaScript' },\n          { value: 'coffee',  label: 'CoffeeScript', hint: 'yes!' }, ]\n      project_type = await CLK.select cfg\n      info \"Ω___3 project type: #{rpr project_type}\"\n      return null\n    await do =>\n      spinner = CLK.spinner()\n      spinner.start \"asking questions\"\n      cfg =\n        message:    \"Select additional tools.\"\n        options: [\n          { value: 'eslint', label: 'ESLint', hint: 'recommended' },\n          { value: 'prettier', label: 'Prettier' },\n          { value: 'gh-action', label: 'GitHub Action' }, ]\n        required: false\n      tools = await CLK.multiselect cfg\n      info \"Ω___4 tools: #{rpr tools}\"\n      spinner.stop \"thanks!\"\n      return null\n    return null\n# clack = new Clack()\n\n#===========================================================================================================\nclass Interactive_dialog\n\n  #---------------------------------------------------------------------------------------------------------\n  ctrlc: ( value ) ->\n    # debug 'Ω___5', rpr value\n    if CLK.isCancel value\n      CLK.cancel \"Operation cancelled.\"\n      @process_exit 0\n    return value\n\n  #---------------------------------------------------------------------------------------------------------\n  intro:    ( cfg ) -> @ctrlc await CLK.intro cfg\n  outro:    ( cfg ) -> @ctrlc await CLK.outro cfg\n  confirm:  ( cfg ) -> @ctrlc await CLK.confirm cfg\n\n  #---------------------------------------------------------------------------------------------------------\n  process_exit: ( code = 0 ) -> process.exit code\n\n\n#===========================================================================================================\nclass Programmatic_dialog_error extends Error\n\n#===========================================================================================================\nclass Programmatic_dialog\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( steps ) ->\n    @exp_steps  = steps\n    @pc         = -1\n    @act_steps  = []\n    @errors     = []\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _next: ->\n    @pc++\n    unless ( R = @exp_steps[ @pc ] ? null )?\n      throw new Programmatic_dialog_error \"running out of steps: #{rpr @}\"\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  _error: ( message ) ->\n    error = { isa: 'error', message, }\n    @act_steps.push error\n    @errors.push    error\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _step: ( act_key ) ->\n    [ exp_key, value, ] = @_next()\n    if act_key is exp_key\n      @act_steps.push act_key\n    else\n      @_error \"error @ #{@pc}: act #{rpr act_key}, exp #{rpr exp_key}\"\n    return value\n\n  #---------------------------------------------------------------------------------------------------------\n  intro:    ( P... ) -> @_step 'intro'\n  outro:    ( P... ) -> @_step 'outro'\n  confirm:  ( P... ) -> @_step 'confirm'\n\n  #---------------------------------------------------------------------------------------------------------\n  process_exit: ( code ) ->\n    # not really exiting the process\n    return code\n\n\n#===========================================================================================================\nsample_dialog = ( dlg = null ) ->\n  dlg  ?= new Interactive_dialog()\n  R     = {}\n  #.........................................................................................................\n  dlg.intro \"create-my-app\"\n  loop\n    if await dlg.confirm { message: \"do you want to loop?\", }\n      continue\n    break\n  dlg.outro \"You're all set!\"\n  #.........................................................................................................\n  return R\n\n#===========================================================================================================\ndemo_run_interactive = ->\n  await sample_dialog() # or `sample_dialog new Interactive_dialog()`\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_run_programmatic = ->\n  steps = [\n    [ 'intro',    true, ]\n    [ 'confirm',  true, ]\n    # [ 'confirm',  false, ]\n    [ 'outro',    true, ] ]\n  dlg = new Programmatic_dialog steps\n  try\n    await sample_dialog dlg\n  catch error\n    throw error unless error instanceof Programmatic_dialog_error\n    warn 'Ω__14', reverse bold error.message\n  warn 'Ω__15', dlg.errors if dlg.errors.length > 0\n  help 'Ω__16', dlg.act_steps\n  return null\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  # await demo_run_interactive()\n  await demo_run_programmatic()\n  return null\n\n"
  ]
}