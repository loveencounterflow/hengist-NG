{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-all.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,WAAA,EAAA,KAAA,EAAA,MAAA,EAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,CAAA,CAAE,KAAF,EACE,KADF,EAEE,IAFF,EAGE,IAHF,EAIE,KAJF,EAKE,MALF,EAME,IANF,EAOE,IAPF,EAQE,OARF,CAAA,GAQ4B,GAAG,CAAC,GAAG,CAAC,WAAR,CAAoB,oBAApB,CAR5B;;EASA,CAAA,CAAE,GAAF,EACE,OADF,EAEE,IAFF,EAGE,GAHF,CAAA,GAG4B,GAAG,CAAC,GAHhC,EAdA;;;EAmBA,IAAA,GAA4B,OAAA,CAAQ,MAAR;;EAC5B,EAAA,GAA4B,OAAA,CAAQ,IAAR;;EAC5B,CAAA,CAAE,IAAF,CAAA,GAA4B,OAAA,CAAQ,UAAR,CAA5B;;EACA,WAAA,GAA4B,IAAI,CAAC,QAAL,CAAc,UAAd,EAtB5B;;;EA0BA,KAAA,GAAQ,CAAA;;EACL,CAAA,MAAA,QAAA,CAAA,CAAA;AACH,QAAA,GAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,EAAA;IAAE,KAAA,GAAQ,EAAE,CAAC,WAAH,CAAe,SAAf;IACR,KAAA,uCAAA;;MACE,QAAA,GAAW,IAAI,CAAC,QAAL,CAAc,IAAd;MACX,IAAY,IAAI,CAAC,QAAL,CAAc,SAAd,CAAZ;AAAA,iBAAA;;MACA,IAAY,QAAA,KAAY,WAAxB;AAAA,iBAAA;;MACA,KAAgB,QAAQ,CAAC,UAAT,CAAoB,OAApB,CAAhB;AAAA,iBAAA;;MACA,IAAA,GAAoB,IAAI,CAAC,IAAL,CAAU,SAAV,EAAqB,IAArB;MACpB,MAAA,GAAoB,OAAA,CAAQ,IAAR;MACpB,KAAA,CAAM,OAAN,EAAe,MAAf;MACA,KAAA,CAAM,OAAN;;AAAiB;QAAA,KAAA,WAAA;uBAAA;QAAA,CAAA;;UAAjB;MACA,KAAK,CAAE,QAAF,CAAL,GAAoB;IATtB;IAUA,GAAA,GAAM;MAAE,cAAA,EAAgB;IAAlB;WACN,CAAA,MAAM,CAAE,CAAE,IAAI,IAAJ,CAAS,GAAT,CAAF,CAAgB,CAAC,UAAjB,CAA4B,CAAE,KAAF,CAA5B,CAAF,CAAN;EAbC,CAAA;AA3BH",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'intertype/test-all'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\nPATH                      = require 'path'\nFS                        = require 'fs'\n{ Test }                  = require 'guy-test'\nmy_filename               = PATH.basename __filename\n\n\n############################################################################################################\ntasks = {}\ndo ->\n  paths = FS.readdirSync __dirname\n  for path in paths\n    filename = PATH.basename path\n    continue if path.endsWith '.js.map'\n    continue if filename is my_filename\n    continue unless filename.startsWith 'test-'\n    path              = PATH.join __dirname, path\n    module            = require path\n    debug 'Ω___1', module\n    debug 'Ω___2', ( k for k of module )\n    tasks[ filename ] = module\n  cfg = { throw_on_error: false, }\n  await ( ( new Test cfg ).async_test { tasks, } )\n\n\n"
  ]
}