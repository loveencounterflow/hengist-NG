{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-assign-clone-freeze.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'intertype/test-basics'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\nWGUY                      = require '../../../apps/webguy'\nTMP_types                 = new ( require 'intertype-203.0.0' ).Intertype()\nGTNG                      = require '../../../apps/guy-test-NG'\n{ Test                  } = GTNG\n# test_mode                 = 'throw_failures'\n# test_mode                 = 'throw_errors'\n# test_mode                 = 'failsafe'\n\n\n\n\n############################################################################################################\n#\n#===========================================================================================================\n@intertype_tasks =\n\n  #---------------------------------------------------------------------------------------------------------\n  lft_lets: ->\n    lft = require '../../../apps/intertype/node_modules/letsfreezethat'\n    # debug ( k for k of lft.nofreeze ), Object.isFrozen ( lft.nofreeze.freeze {}); xxx\n    # debug 'Ωacf___1', samesame.equals\n    # debug 'Ωacf___2', samesame.deep_copy\n    debug 'Ωacf___3', k = { x: true, y: 5, }\n    debug 'Ωacf___4', d = lft.lets { a: false, k, }\n    debug 'Ωacf___5', e = lft.lets d\n    debug 'Ωacf___6', f = lft.lets d, ( d ) -> d.a = true\n    #.......................................................................................................\n    @eq     ( Ωacf___7 = -> Object.isFrozen k     ), false\n    @eq     ( Ωacf___8 = -> Object.isFrozen d     ), true\n    @eq     ( Ωacf___9 = -> Object.isFrozen d.k   ), true\n    @eq     ( Ωacf__10 = -> k is d.k              ), false\n    @eq     ( Ωacf__11 = -> d is e                ), false\n    # @throws ( Ωacf__12 = -> types.validate mvp.integer,  5.3                     ), /expected a integer/\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  lft_assign: ->\n    lft = require '../../../apps/intertype/node_modules/letsfreezethat'\n    probes = [\n      [ {}, ]\n      [ { d: 6, k: true, },                                             ]\n      [ { d: 6, k: true, }, { k: false, m: 'M', }                       ]\n      [ { d: 6, k: true, }, null,                                       ]\n      [ { d: 6, k: true, }, undefined,                                  ]\n      [ [],                                                             ]\n      [ [], { z: 'zoo', y: 'wye', }                                     ]\n      ]\n    failing_probes = [\n      [ 987,                                                            ]\n      [ true,                                                           ]\n      [ false,                                                          ]\n      [ 'jkl',                                                          ]\n      ]\n    #.......................................................................................................\n    # debug 'Ωacf__13', Object.assign undefined\n    # debug 'Ωacf__14', Object.assign null\n    warn  'Ωacf__15', rpr lft.assign    987\n    info  'Ωacf__16', rpr Object.assign 987\n    warn  'Ωacf__17', rpr lft.assign    true\n    info  'Ωacf__18', rpr Object.assign true\n    warn  'Ωacf__19', rpr lft.assign    'jkl'\n    info  'Ωacf__20', rpr Object.assign 'jkl'\n    #.......................................................................................................\n    for probe in probes\n      @eq ( Ωacf__21 = -> lft.assign probe... ), Object.assign probe...\n    #.......................................................................................................\n    for probe in failing_probes\n      @eq ( ΩACCEPT_FAILURE_FOR_NOW_acf__22 = -> lft.assign probe... ), Object.assign probe...\n    #.......................................................................................................\n    @throws ( Ωacf__23 = -> Object.assign undefined   ), /Cannot convert undefined or null to object/\n    @throws ( Ωacf__24 = -> Object.assign null        ), /Cannot convert undefined or null to object/\n    @throws ( ΩACCEPT_FAILURE_FOR_NOW_acf__25 = -> lft.assign undefined      ), /Cannot convert undefined or null to object/\n    @throws ( ΩACCEPT_FAILURE_FOR_NOW_acf__26 = -> lft.assign null           ), /Cannot convert undefined or null to object/\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  lft_assign_freezing: ->\n    lft = require '../../../apps/intertype/node_modules/letsfreezethat'\n    #.......................................................................................................\n    f = { f: 'F', }\n    e = { e: 'E', f, }\n    d = { d: 'D', e, }\n    d\n    d_obj = Object.assign d\n    d_lft = lft.assign d\n    d_nfr = lft.nofreeze.assign d\n    @eq ( Ωacf__27 = -> Object.isFrozen d_obj   ), false\n    @eq ( Ωacf__28 = -> Object.isFrozen d_lft   ), true\n    @eq ( Ωacf__29 = -> Object.isFrozen d_nfr   ), false\n    @eq ( Ωacf__30 = -> d.e       is e          ), true\n    @eq ( Ωacf__31 = -> d.e.f     is f          ), true\n    @eq ( Ωacf__32 = -> d_obj     is d          ), true\n    @eq ( Ωacf__33 = -> d_obj.e   is e          ), true\n    @eq ( Ωacf__34 = -> d_obj.e.f is f          ), true\n    @eq ( Ωacf__35 = -> d_lft     is d          ), false\n    @eq ( Ωacf__36 = -> d_lft.e   is e          ), false\n    @eq ( Ωacf__37 = -> d_lft.e.f is f          ), false\n    @eq ( Ωacf__38 = -> d_nfr     is d          ), false\n    @eq ( Ωacf__39 = -> d_nfr.e   is e          ), false\n    @eq ( Ωacf__40 = -> d_nfr.e.f is f          ), false\n    #.......................................................................................................\n    return null\n\n#===========================================================================================================\nif module is require.main then await do =>\n  ( new Test { throw_on_error: true, } ).test @intertype_tasks\n\n"
  ]
}