{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'intertype/test-basics'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\nWGUY                      = require '../../../apps/webguy'\nTMP_types                 = new ( require 'intertype-203.0.0' ).Intertype()\nGTNG                      = require '../../../apps/guy-test-NG'\n{ Test                  } = GTNG\n# test_mode                 = 'throw_failures'\n# test_mode                 = 'throw_errors'\n# test_mode                 = 'failsafe'\n\n\n#===========================================================================================================\nget_MVP_typespaces = ->\n  { Typespace } = require '../../../apps/intertype'\n  #.........................................................................................................\n  std = new Typespace\n    # anything:       ( x, t ) -> true\n    nothing:        ( x, t ) -> not x?\n    something:      ( x, t ) -> x?\n    primitive:      ( x, t ) -> ( x in [ null, undefined, true, false, ] ) or ( typeof x in [ 'string', 'number', ] )\n    object:         ( x, t ) -> not t.isa std.primitive, x\n    pod:            ( x, t ) -> x? and x.constructor in [ Object, undefined, ]\n    #.......................................................................................................\n    null:           ( x, t ) -> x is null\n    undefined:      ( x, t ) -> x is undefined\n    infinity:       ( x, t ) -> ( x is +Infinity ) or ( x is -Infinity )\n    boolean:        ( x, t ) -> ( x is true ) or ( x is false )\n    nan:            ( x, t ) -> Number.isNaN x\n    #.......................................................................................................\n    integer:\n      isa:    ( x, t ) -> Number.isInteger x\n      foo:    4\n    odd:\n      isa:    ( x, t ) -> ( t.isa @$typespace.integer, x ) and ( x %% 2 isnt 0 )\n    # short form just assigns either a test method or a type name:\n    even:           ( x, t ) -> ( t.isa @$typespace.integer, x ) and ( x %% 2 is 0 )\n    float:          ( x, t ) -> Number.isFinite x\n    bigint:         ( x, t ) -> typeof x is 'bigint'\n    text:           ( x, t ) -> typeof x is 'string'\n    empty_text:     ( x, t ) -> x is ''\n    nonempty_text:  ( x, t ) -> ( t.isa @$typespace.text, x ) and ( x.length > 0 )\n    #.......................................................................................................\n    set:            ( x, t ) -> x instanceof Set\n    map:            ( x, t ) -> x instanceof Map\n    weakmap:        ( x, t ) -> x instanceof WeakMap\n    list:           ( x, t ) -> Array.isArray x\n    #.......................................................................................................\n    function:           ( x, t ) -> ( Object::toString.call x ) is '[object Function]'\n    asyncfunction:      ( x, t ) -> ( Object::toString.call x ) is '[object AsyncFunction]'\n    generatorfunction:  ( x, t ) -> ( Object::toString.call x ) is '[object GeneratorFunction]'\n    #.......................................................................................................\n    # numerical:      ( x, t ) -> ( t.isa @$typespace.float, x   ) or ( t.isa @$typespace.bigint, x )\n    # positive0:      ( x, t ) -> ( t.isa @$typespace.float, x   ) and ( x >= +0  )\n    # positive1:      ( x, t ) -> ( t.isa @$typespace.float, x   ) and ( x >= +1  )\n    # negative0:      ( x, t ) -> ( t.isa @$typespace.float, x   ) and ( x <=  0  )\n    # negative1:      ( x, t ) -> ( t.isa @$typespace.float, x   ) and ( x <= -1  )\n    # cardinal:       ( x, t ) -> ( t.isa @$typespace.integer, x ) and ( t.isa @$typespace.positive0, x )\n    #.......................................................................................................\n    # cardinalbigint: ( x, t ) -> ( t.isa @$typespace.bigint, x    ) and ( x >= +0 )\n    #.......................................................................................................\n    # circle1:  'circle2'\n    # circle2:  'circle3'\n    # circle3:  'circle1'\n    #.......................................................................................................\n    weird:    'strange' # declares another name for `odd`\n    strange:  'odd'     # declares another name for `odd`\n    abnormal: 'weird'   # declares another name for `odd`\n    #.......................................................................................................\n    quantity:\n      fields:\n        # each field becomes a `Type` instance; strings may refer to names in the same typespace\n        q:    'float'\n        u:    'nonempty_text'\n      template:\n        q:    0\n        u:    'u'\n    #.......................................................................................................\n    address:\n      fields:\n        postcode:   'nonempty_text'\n        city:       'nonempty_text'\n    #.......................................................................................................\n    employee:\n      fields:\n        address:    'address'\n        name:\n          fields:\n            firstname:  'nonempty_text'\n            lastname:   'nonempty_text'\n  #.........................................................................................................\n  flatly_1 = new Typespace\n    evenly:       'flat'\n    flat:         ( x, t ) -> t.isa std.even, x\n    plain:        'evenly'\n    # foo:          'bar'\n  #.........................................................................................................\n  flatly_2 = new Typespace\n    evenly:       'flat'\n    flat:         std.even\n    plain:        'evenly'\n  #.........................................................................................................\n  return { std, flatly_1, flatly_2, }\n\n#===========================================================================================================\nsample_declarations =\n  anything:               ( x ) -> true\n  boolean:                ( x ) -> ( x is true ) or ( x is false )\n  function:               ( x ) -> ( Object::toString.call x ) is '[object Function]'\n  asyncfunction:          ( x ) -> ( Object::toString.call x ) is '[object AsyncFunction]'\n  symbol:                 ( x ) -> ( typeof x ) is 'symbol'\n  object:                 ( x ) -> x? and ( typeof x is 'object' ) and ( ( Object::toString.call x ) is '[object Object]' )\n  float:                  ( x ) -> Number.isFinite x\n  text:                   ( x ) -> ( typeof x ) is 'string'\n  nullary:                ( x ) -> x? and ( ( x.length is 0 ) or ( x.size is 0 ) )\n  unary:                  ( x ) -> x? and ( ( x.length is 1 ) or ( x.size is 1 ) )\n  binary:                 ( x ) -> x? and ( ( x.length is 2 ) or ( x.size is 2 ) )\n  trinary:                ( x ) -> x? and ( ( x.length is 3 ) or ( x.size is 3 ) )\n  object:                 ( x ) -> x? and ( typeof x is 'object' ) and ( ( Object::toString.call x ) is '[object Object]' )\n  set:                    ( x ) -> x instanceof Set\n  list:                   ( x ) -> Array.isArray x\n\n\n\n############################################################################################################\n#\n#===========================================================================================================\n@intertype_tasks =\n\n  #=========================================================================================================\n  MVP:\n\n    #-------------------------------------------------------------------------------------------------------\n    isa: ->\n      { Intertype\n        Type\n        Typespace\n        types           } = require '../../../apps/intertype'\n      { flatly_1\n        flatly_2\n        std             } = get_MVP_typespaces()\n      $isa = sample_declarations\n      #.....................................................................................................\n      @eq ( Ωit___1 = -> std            instanceof Typespace          ), true\n      @eq ( Ωit___2 = -> flatly_1       instanceof Typespace          ), true\n      @eq ( Ωit___3 = -> flatly_2       instanceof Typespace          ), true\n      @eq ( Ωit___4 = -> flatly_1.flat  instanceof Type               ), true\n      @eq ( Ωit___5 = -> flatly_2.flat  instanceof Type               ), true\n      @eq ( Ωit___6 = -> std.quantity   instanceof Type               ), true\n      @eq ( Ωit___7 = -> $isa.function  std.quantity.isa              ), true\n      @eq ( Ωit___8 = -> $isa.object    std.quantity.fields           ), true\n      @eq ( Ωit___9 = -> std.quantity.fields.q instanceof Type        ), true\n      @eq ( Ωit__10 = -> $isa.function  std.quantity.fields.q.isa     ), true\n      #.....................................................................................................\n      echo()\n      @eq ( Ωit__11 = -> types.isa std.integer,              5                          ), true\n      @eq ( Ωit__12 = -> types.isa std.odd,                  5                          ), true\n      @eq ( Ωit__13 = -> types.isa std.even,                 6                          ), true\n      @eq ( Ωit__14 = -> types.isa std.strange,              5                          ), true\n      @eq ( Ωit__15 = -> types.isa std.weird,                5                          ), true\n      @eq ( Ωit__16 = -> types.isa std.abnormal,             5                          ), true\n      @eq ( Ωit__17 = -> types.isa flatly_1.flat,            8                          ), true\n      @eq ( Ωit__18 = -> types.isa flatly_1.evenly,          8                          ), true\n      @eq ( Ωit__19 = -> types.isa flatly_1.plain,           8                          ), true\n      @eq ( Ωit__20 = -> types.isa flatly_2.flat,            8                          ), true\n      @eq ( Ωit__21 = -> types.isa flatly_2.evenly,          8                          ), true\n      @eq ( Ωit__22 = -> types.isa flatly_2.plain,           8                          ), true\n      @eq ( Ωit__23 = -> types.isa std.nonempty_text,        'abc'                      ), true\n      @eq ( Ωit__24 = -> types.isa std.quantity.fields.q,    123.456                    ), true\n      @eq ( Ωit__25 = -> types.isa std.quantity.fields.u,    'm'                        ), true\n      @eq ( Ωit__26 = -> types.isa std.quantity,             { q: 123.456, u: 'm', }    ), true\n      #.....................................................................................................\n      echo()\n      @eq ( Ωit__27 = -> types.isa std.integer,              5.3                        ), false\n      @eq ( Ωit__28 = -> types.isa std.odd,                  6                          ), false\n      @eq ( Ωit__29 = -> types.isa std.odd,                  5.3                        ), false\n      @eq ( Ωit__30 = -> types.isa std.even,                 5                          ), false\n      @eq ( Ωit__31 = -> types.isa std.strange,              6                          ), false\n      @eq ( Ωit__32 = -> types.isa std.weird,                6                          ), false\n      @eq ( Ωit__33 = -> types.isa std.abnormal,             6                          ), false\n      @eq ( Ωit__34 = -> types.isa flatly_1.evenly,          5                          ), false\n      @eq ( Ωit__35 = -> types.isa flatly_1.flat,            5                          ), false\n      @eq ( Ωit__36 = -> types.isa flatly_1.plain,           5                          ), false\n      @eq ( Ωit__37 = -> types.isa flatly_2.flat,            5                          ), false\n      @eq ( Ωit__38 = -> types.isa flatly_2.evenly,          5                          ), false\n      @eq ( Ωit__39 = -> types.isa flatly_2.plain,           5                          ), false\n      @eq ( Ωit__40 = -> types.isa std.nonempty_text,        ''                         ), false\n      @eq ( Ωit__41 = -> types.isa std.quantity.fields.q,    '123.456'                  ), false\n      @eq ( Ωit__42 = -> types.isa std.quantity.fields.u,    ''                         ), false\n      @eq ( Ωit__43 = -> types.isa std.quantity,             { q: 123.456, u: '', }     ), false\n      @eq ( Ωit__44 = -> types.isa std.quantity,             { q: null, u: 'm', }       ), false\n      #.....................................................................................................\n      return null\n\n\n    #-------------------------------------------------------------------------------------------------------\n    validate: ->\n      { Intertype\n        Type\n        Typespace\n        types           } = require '../../../apps/intertype'\n      { flatly_1\n        flatly_2\n        std             } = get_MVP_typespaces()\n      $isa = sample_declarations\n      #.....................................................................................................\n      @eq     ( Ωit__45 = -> types.validate  std.integer,  -5   ), -5\n      @eq     ( Ωit__46 = -> types.validate  std.integer,  5    ), 5\n      @throws ( Ωit__47 = -> types.validate  std.integer,  5.3  ), /expected a integer/\n      #.....................................................................................................\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    evaluate: ->\n      { Intertype\n        Type\n        Typespace\n        types           } = require '../../../apps/intertype'\n      { flatly_1\n        flatly_2\n        std             } = get_MVP_typespaces()\n      $isa = sample_declarations\n      #.....................................................................................................\n      echo()\n      probes_and_matchers = [\n        [[ std.integer, 5, ], [\n          [ 'integer',                                              5,                                            true,   ]\n          ]]\n        [[ std.integer, 5.3, ], [\n          [ 'integer',                                              5.3,                                          false,  ]\n          ]]\n        [[ std.even, 5, ], [\n          [ 'even',                                                 5,                                            false,  ]\n          [ 'even.integer',                                         5,                                            true,   ]\n          ]]\n        [[ flatly_1.evenly, 5, ], [\n          [ 'evenly',                                               5,                                            false,  ]\n          [ 'evenly.flat',                                          5,                                            false,  ]\n          [ 'evenly.flat.even',                                     5,                                            false,  ]\n          [ 'evenly.flat.even.integer',                             5,                                            true,   ]\n          ]]\n        [[ flatly_1.evenly, 6, ], [\n          [ 'evenly',                                               6,                                            true,   ]\n          [ 'evenly.flat',                                          6,                                            true,   ]\n          [ 'evenly.flat.even',                                     6,                                            true,   ]\n          [ 'evenly.flat.even.integer',                             6,                                            true,   ]\n          ]]\n        [[ flatly_2.evenly, 5, ], [\n          [ 'evenly',                                               5,                                            false,  ]\n          [ 'evenly.even',                                          5,                                            false,  ]\n          [ 'evenly.even.integer',                                  5,                                            true,   ]\n          ]]\n        [[ flatly_2.evenly, 6, ], [\n          [ 'evenly',                                               6,                                            true,   ]\n          [ 'evenly.even',                                          6,                                            true,   ]\n          [ 'evenly.even.integer',                                  6,                                            true,   ]\n          ]]\n        [[ std.quantity, { q: 123.456, u: '' }, ], [\n          [ 'quantity',                                             { q: 123.456, u: '' },                        false,  ]\n          [ 'quantity.q',                                           123.456,                                      true,   ]\n          [ 'quantity.q.float',                                     123.456,                                      true,   ]\n          [ 'quantity.u',                                           '',                                           false,  ]\n          [ 'quantity.u.nonempty_text',                             '',                                           false,  ]\n          [ 'quantity.u.nonempty_text.text',                        '',                                           true,   ]\n          ]]\n        [[ std.quantity, { q: 123.456, u: null }, ], [\n          [ 'quantity',                                             { q: 123.456, u: null },                      false,  ]\n          [ 'quantity.q',                                           123.456,                                      true,   ]\n          [ 'quantity.q.float',                                     123.456,                                      true,   ]\n          [ 'quantity.u',                                           null,                                         false,  ]\n          [ 'quantity.u.nonempty_text',                             null,                                         false,  ]\n          [ 'quantity.u.nonempty_text.text',                        null,                                         false,  ]\n          ]]\n        [[ std.quantity, { q: 'nan', u: 'm' }, ], [\n          [ 'quantity',                                             { q: 'nan', u: 'm' },                         false,  ]\n          [ 'quantity.q',                                           'nan',                                        false,  ]\n          [ 'quantity.q.float',                                     'nan',                                        false,  ]\n          ]]\n        [[ std.employee, { address: { postcode: 'SE36', city: 'London' }, name: null }, ], [\n          [ 'employee',                                             { address: { postcode: 'SE36', city: 'London' }, name: null }, false,  ]\n          [ 'employee.address',                                     { postcode: 'SE36', city: 'London' },         true,   ]\n          [ 'employee.address.address',                             { postcode: 'SE36', city: 'London' },         true,   ]\n          [ 'employee.address.address.postcode',                    'SE36',                                       true,   ]\n          [ 'employee.address.address.postcode.nonempty_text',      'SE36',                                       true,   ]\n          [ 'employee.address.address.postcode.nonempty_text.text', 'SE36',                                       true,   ]\n          [ 'employee.address.address.city',                        'London',                                     true,   ]\n          [ 'employee.address.address.city.nonempty_text',          'London',                                     true,   ]\n          [ 'employee.address.address.city.nonempty_text.text',     'London',                                     true,   ]\n          [ 'employee.name',                                        null,                                         false,  ]\n          ]]\n        [[ std.employee, { address: { postcode: 'SE36', city: 'London' }, name: {} }, ], [\n          [ 'employee',                                             { address: { postcode: 'SE36', city: 'London' }, name: {} }, false,  ]\n          [ 'employee.address',                                     { postcode: 'SE36', city: 'London' },         true,   ]\n          [ 'employee.address.address',                             { postcode: 'SE36', city: 'London' },         true,   ]\n          [ 'employee.address.address.postcode',                    'SE36',                                       true,   ]\n          [ 'employee.address.address.postcode.nonempty_text',      'SE36',                                       true,   ]\n          [ 'employee.address.address.postcode.nonempty_text.text', 'SE36',                                       true,   ]\n          [ 'employee.address.address.city',                        'London',                                     true,   ]\n          [ 'employee.address.address.city.nonempty_text',          'London',                                     true,   ]\n          [ 'employee.address.address.city.nonempty_text.text',     'London',                                     true,   ]\n          [ 'employee.name',                                        {},                                           false,  ]\n          [ 'employee.name.firstname',                              undefined,                                    false,  ]\n          [ 'employee.name.firstname.nonempty_text',                undefined,                                    false,  ]\n          [ 'employee.name.firstname.nonempty_text.text',           undefined,                                    false,  ]\n          ]]\n        [[ std.employee, { address: { postcode: 'SE36', city: 'London' }, name: { firstname: 'Bob' } }, ], [\n          [ 'employee',                                             { address: { postcode: 'SE36', city: 'London' }, name: { firstname: 'Bob' } }, false,  ]\n          [ 'employee.address',                                     { postcode: 'SE36', city: 'London' },         true,   ]\n          [ 'employee.address.address',                             { postcode: 'SE36', city: 'London' },         true,   ]\n          [ 'employee.address.address.postcode',                    'SE36',                                       true,   ]\n          [ 'employee.address.address.postcode.nonempty_text',      'SE36',                                       true,   ]\n          [ 'employee.address.address.postcode.nonempty_text.text', 'SE36',                                       true,   ]\n          [ 'employee.address.address.city',                        'London',                                     true,   ]\n          [ 'employee.address.address.city.nonempty_text',          'London',                                     true,   ]\n          [ 'employee.address.address.city.nonempty_text.text',     'London',                                     true,   ]\n          [ 'employee.name',                                        { firstname: 'Bob' },                         false,  ]\n          [ 'employee.name.firstname',                              'Bob',                                        true,   ]\n          [ 'employee.name.firstname.nonempty_text',                'Bob',                                        true,   ]\n          [ 'employee.name.firstname.nonempty_text.text',           'Bob',                                        true,   ]\n          [ 'employee.name.lastname',                               undefined,                                    false,  ]\n          [ 'employee.name.lastname.nonempty_text',                 undefined,                                    false,  ]\n          [ 'employee.name.lastname.nonempty_text.text',            undefined,                                    false,  ]\n          ]]\n        [[ std.employee, { address: { postcode: 'SE36', city: 'London' }, name: { firstname: 'Bob', lastname: 'Miller' } }, ], [\n          [ 'employee',                                             { address: { postcode: 'SE36', city: 'London' }, name: { firstname: 'Bob', lastname: 'Miller' } }, true,   ]\n          [ 'employee.address',                                     { postcode: 'SE36', city: 'London' },         true,   ]\n          [ 'employee.address.address',                             { postcode: 'SE36', city: 'London' },         true,   ]\n          [ 'employee.address.address.postcode',                    'SE36',                                       true,   ]\n          [ 'employee.address.address.postcode.nonempty_text',      'SE36',                                       true,   ]\n          [ 'employee.address.address.postcode.nonempty_text.text', 'SE36',                                       true,   ]\n          [ 'employee.address.address.city',                        'London',                                     true,   ]\n          [ 'employee.address.address.city.nonempty_text',          'London',                                     true,   ]\n          [ 'employee.address.address.city.nonempty_text.text',     'London',                                     true,   ]\n          [ 'employee.name',                                        { firstname: 'Bob', lastname: 'Miller' },     true,   ]\n          [ 'employee.name.firstname',                              'Bob',                                        true,   ]\n          [ 'employee.name.firstname.nonempty_text',                'Bob',                                        true,   ]\n          [ 'employee.name.firstname.nonempty_text.text',           'Bob',                                        true,   ]\n          [ 'employee.name.lastname',                               'Miller',                                     true,   ]\n          [ 'employee.name.lastname.nonempty_text',                 'Miller',                                     true,   ]\n          [ 'employee.name.lastname.nonempty_text.text',            'Miller',                                     true,   ]\n          ]]\n        ]\n      #.....................................................................................................\n      # fm = ( x, width = 0 ) -> ( ( rpr x ) + ',' ).padEnd width\n      for [ [ probe_type, probe_value, ], matcher, ] in probes_and_matchers\n        # echo '[', ( fm probe_type ), ( fm rpr probe_value ), '], ['\n        records = types.evaluate probe_type, probe_value\n        for record, idx in records\n          @eq ( Ωit__48 = -> [ record.stack, record.value, record.verdict, ] ), matcher[ idx ]\n        #   echo '  [', ( fm record.stack, 55 ), ( fm record.value, 45 ), ( fm record.verdict, 7 ), ']'\n        # echo '  ]'\n      #.....................................................................................................\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    create: ->\n      { Intertype\n        Type\n        Typespace\n        types           } = require '../../../apps/intertype'\n      { flatly_1\n        flatly_2\n        std             } = get_MVP_typespaces()\n      $isa = sample_declarations\n      #.....................................................................................................\n      # debug 'Ωit__49', types.create std.integer\n      # debug 'Ωit__50', types.create std.integer, 7\n      # debug 'Ωit__51', types.create std.integer, 7.8\n      # debug 'Ωit__52', types.create std.integer, '7'\n      # debug 'Ωit__53', types.create std.integer, '7.8'\n      #.....................................................................................................\n      return null\n\n\n  #=========================================================================================================\n  basics:\n\n    #-------------------------------------------------------------------------------------------------------\n    type_of: ->\n      { Intertype\n        Type\n        Typespace\n        types           } = require '../../../apps/intertype'\n      # { std             } = get_MVP_typespaces()\n      $isa = sample_declarations\n      #.....................................................................................................\n      @eq ( Ωit__54 = -> $isa.list Intertype.primitive_types        ), true\n      @eq ( Ωit__55 = -> Object.isFrozen Intertype.primitive_types  ), true\n      #.....................................................................................................\n      @eq ( Ωit__56 = -> Intertype.type_of null               ), 'null'\n      @eq ( Ωit__57 = -> Intertype.type_of undefined          ), 'undefined'\n      @eq ( Ωit__58 = -> Intertype.type_of +Infinity          ), 'infinity'\n      @eq ( Ωit__59 = -> Intertype.type_of -Infinity          ), 'infinity'\n      @eq ( Ωit__60 = -> Intertype.type_of true               ), 'boolean'\n      @eq ( Ωit__61 = -> Intertype.type_of false              ), 'boolean'\n      @eq ( Ωit__62 = -> Intertype.type_of NaN                ), 'nan'\n      @eq ( Ωit__63 = -> Intertype.type_of 6e78               ), 'float'\n      @eq ( Ωit__64 = -> Intertype.type_of 'wat'              ), 'text'\n      @eq ( Ωit__65 = -> Intertype.type_of []                 ), 'list'\n      @eq ( Ωit__66 = -> Intertype.type_of ( -> null )        ), 'function'\n      @eq ( Ωit__67 = -> Intertype.type_of ( -> await null )  ), 'asyncfunction'\n      @eq ( Ωit__68 = -> Intertype.type_of ( -> yield null )  ), 'generatorfunction'\n      @eq ( Ωit__69 = -> Intertype.type_of {}                 ), 'object'\n      @eq ( Ωit__70 = -> Intertype.type_of new Set()          ), 'set'\n      @eq ( Ωit__71 = -> Intertype.type_of new Map()          ), 'map'\n      @eq ( Ωit__72 = -> Intertype.type_of new WeakMap()      ), 'weakmap'\n      #.....................................................................................................\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    types_of: ->\n      { Intertype\n        Type\n        Typespace\n        types           } = require '../../../apps/intertype'\n      { std             } = get_MVP_typespaces()\n      $isa = sample_declarations\n      class Myclass\n      #.....................................................................................................\n      @eq ( Ωit__73 = -> types.types_of std, null               ), [ 'nothing', 'primitive', 'null', ]\n      @eq ( Ωit__74 = -> types.types_of std, undefined          ), [ 'nothing', 'primitive', 'undefined', ]\n      @eq ( Ωit__75 = -> types.types_of std, +Infinity          ), [ 'something', 'primitive', 'infinity', ]\n      @eq ( Ωit__76 = -> types.types_of std, -Infinity          ), [ 'something', 'primitive', 'infinity', ]\n      @eq ( Ωit__77 = -> types.types_of std, true               ), [ 'something', 'primitive', 'boolean', ]\n      @eq ( Ωit__78 = -> types.types_of std, false              ), [ 'something', 'primitive', 'boolean', ]\n      @eq ( Ωit__79 = -> types.types_of std, NaN                ), [ 'something', 'primitive', 'nan', ]\n      @eq ( Ωit__80 = -> types.types_of std, 6e78               ), [ 'something', 'primitive', 'integer', 'even', 'float', ]\n      @eq ( Ωit__81 = -> types.types_of std, 3                  ), [ 'something', 'primitive', 'integer', 'odd', 'float', 'weird', 'strange', 'abnormal', ]\n      @eq ( Ωit__82 = -> types.types_of std, 'wat'              ), [ 'something', 'primitive', 'text', 'nonempty_text', ]\n      @eq ( Ωit__83 = -> types.types_of std, ''                 ), [ 'something', 'primitive', 'text', 'empty_text', ]\n      @eq ( Ωit__84 = -> types.types_of std, []                 ), [ 'something', 'object', 'list', ]\n      @eq ( Ωit__85 = -> types.types_of std, ( -> null )        ), [ 'something', 'object', 'function', ]\n      @eq ( Ωit__86 = -> types.types_of std, ( -> await null )  ), [ 'something', 'object', 'asyncfunction', ]\n      @eq ( Ωit__87 = -> types.types_of std, ( -> yield null )  ), [ 'something', 'object', 'generatorfunction', ]\n      @eq ( Ωit__88 = -> types.types_of std, {}                 ), [ 'something', 'object', 'pod', ]\n      @eq ( Ωit__89 = -> types.types_of std, Object.create null ), [ 'something', 'object', 'pod', ]\n      @eq ( Ωit__90 = -> types.types_of std, new Myclass()      ), [ 'something', 'object', ]\n      @eq ( Ωit__91 = -> types.types_of std, new Set()          ), [ 'something', 'object', 'set', ]\n      @eq ( Ωit__92 = -> types.types_of std, new Map()          ), [ 'something', 'object', 'map', ]\n      @eq ( Ωit__93 = -> types.types_of std, new WeakMap()      ), [ 'something', 'object', 'weakmap', ]\n      #.....................................................................................................\n      return null\n\n\n############################################################################################################\n#\n#===========================================================================================================\n@OLD_intertype_tasks =\n\n  #-----------------------------------------------------------------------------------------------------------\n  interface: ->\n    INTERTYPE     = require '../../../apps/intertype'\n    @eq ( Ωit__94 = -> debug '2312312'; TMP_types.isa.object    INTERTYPE.types                               ), true\n    @eq ( Ωit__95 = -> TMP_types.isa.undefined INTERTYPE.types.get_isa                       ), true\n    @eq ( Ωit__96 = -> TMP_types.isa.undefined INTERTYPE.types.get_isa_optional              ), true\n    @eq ( Ωit__97 = -> TMP_types.isa.undefined INTERTYPE.types.get_validate                  ), true\n    @eq ( Ωit__98 = -> TMP_types.isa.undefined INTERTYPE.types.get_validate_optional         ), true\n    @eq ( Ωit__99 = -> TMP_types.isa.function  INTERTYPE.types._get_isa                      ), true\n    @eq ( Ωit_100 = -> TMP_types.isa.function  INTERTYPE.types._get_isa_optional             ), true\n    @eq ( Ωit_101 = -> TMP_types.isa.function  INTERTYPE.types._get_validate                 ), true\n    @eq ( Ωit_102 = -> TMP_types.isa.function  INTERTYPE.types._get_validate_optional        ), true\n    @eq ( Ωit_103 = -> TMP_types.isa.object    INTERTYPE.types                               ), true\n    @eq ( Ωit_104 = -> TMP_types.isa.object    INTERTYPE.types.isa                           ), true\n    # @eq ( Ωit_105 = -> TMP_types.isa.function  INTERTYPE.types.isa.optional                  ), true\n    @eq ( Ωit_106 = -> TMP_types.isa.object    INTERTYPE.types.validate                      ), true\n    # @eq ( Ωit_107 = -> TMP_types.isa.function  INTERTYPE.types.validate.optional             ), true\n    @eq ( Ωit_108 = -> TMP_types.isa.function  INTERTYPE.types.isa.boolean                   ), true\n    @eq ( Ωit_109 = -> TMP_types.isa.function  INTERTYPE.types.isa.optional.boolean          ), true\n    @eq ( Ωit_110 = -> TMP_types.isa.function  INTERTYPE.types.validate.boolean              ), true\n    @eq ( Ωit_111 = -> TMP_types.isa.function  INTERTYPE.types.validate.optional.boolean     ), true\n    @eq ( Ωit_112 = -> TMP_types.isa.object    INTERTYPE.types.create                        ), true\n    @eq ( Ωit_113 = -> TMP_types.isa.function  INTERTYPE.types.isa.text                      ), true\n    @eq ( Ωit_114 = -> TMP_types.isa.function  INTERTYPE.types.create.text                   ), true\n    @eq ( Ωit_115 = -> TMP_types.isa.object    INTERTYPE.types.declarations                  ), true\n    @eq ( Ωit_116 = -> TMP_types.isa.object    INTERTYPE.types.declarations.text             ), true\n    #.........................................................................................................\n    # @eq ( Ωit_117 = -> INTERTYPE.types.isa.name           ), 'isa'\n    # @eq ( Ωit_118 = -> INTERTYPE.types.evaluate.name      ), 'evaluate'\n    # @eq ( Ωit_119 = -> INTERTYPE.types.validate.name      ), 'validate'\n    # @eq ( Ωit_120 = -> INTERTYPE.types.create.name        ), 'create'\n    @eq ( Ωit_121 = -> INTERTYPE.types.declare.name       ), 'declare'\n    @eq ( Ωit_122 = -> INTERTYPE.types.type_of.name       ), 'type_of'\n    #.........................................................................................................\n    do =>\n      for type of INTERTYPE.testing._isa\n        continue if Reflect.has INTERTYPE.declarations, type\n        @fail 'Ωit_123', \"type known from `INTERTYPE.testing._isa` but missing from `INTERTYPE.default_declarations`: #{rpr type}\"\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  basic_functionality_using_types_object: ->\n    INTERTYPE     = require '../../../apps/intertype'\n    types         = new INTERTYPE.Intertype_minimal sample_declarations\n    @eq ( Ωit_124 = -> types.isa.boolean           false               ), true\n    @eq ( Ωit_125 = -> types.isa.boolean           true                ), true\n    @eq ( Ωit_126 = -> types.isa.boolean           null                ), false\n    @eq ( Ωit_127 = -> types.isa.boolean           1                   ), false\n    @eq ( Ωit_128 = -> types.isa.optional.boolean  false               ), true\n    @eq ( Ωit_129 = -> types.isa.optional.boolean  true                ), true\n    @eq ( Ωit_130 = -> types.isa.optional.boolean  null                ), true\n    @eq ( Ωit_131 = -> types.isa.optional.boolean  1                   ), false\n    #.........................................................................................................\n    @eq ( Ωit_132 = -> types.validate.boolean               false      ), false\n    @eq ( Ωit_133 = -> types.validate.boolean               true       ), true\n    @eq ( Ωit_134 = -> types.validate.optional.boolean      true       ), true\n    @eq ( Ωit_135 = -> types.validate.optional.boolean      false      ), false\n    @eq ( Ωit_136 = -> types.validate.optional.boolean      undefined  ), undefined\n    @eq ( Ωit_137 = -> types.validate.optional.boolean      null       ), null\n    @throws ( Ωit_138 = -> types.validate.boolean           1 ), /expected a boolean/\n    @throws ( Ωit_139 = -> types.validate.optional.boolean  1 ), /expected an optional boolean/\n    #.........................................................................................................\n    @eq ( Ωit_140 = -> types.type_of null            ), 'null'\n    @eq ( Ωit_141 = -> types.type_of undefined       ), 'undefined'\n    @eq ( Ωit_142 = -> types.type_of false           ), 'boolean'\n    @eq ( Ωit_143 = -> types.type_of Symbol 'p'      ), 'symbol'\n    @eq ( Ωit_144 = -> types.type_of {}              ), 'object'\n    @eq ( Ωit_145 = -> types.type_of NaN             ), 'unknown'\n    @eq ( Ωit_146 = -> types.type_of +Infinity       ), 'unknown'\n    @eq ( Ωit_147 = -> types.type_of -Infinity       ), 'unknown'\n    #.........................................................................................................\n    debug '^4324^', 'null           ', types.declarations.null\n    debug '^4324^', 'function       ', types.declarations.function\n    debug '^4324^', 'boolean        ', types.declarations.boolean\n    debug '^4324^', 'text           ', types.declarations.text\n    debug '^4324^', 'asyncfunction  ', types.declarations.asyncfunction\n    debug '^4324^'\n    debug '^4324^', 'null           ', types.isa.null\n    debug '^4324^', 'function       ', types.isa.function\n    debug '^4324^', 'boolean        ', types.isa.boolean\n    debug '^4324^', 'text           ', types.isa.text\n    debug '^4324^', 'asyncfunction  ', types.isa.asyncfunction\n    debug '^4324^'\n    debug '^4324^', 'null           ', types.isa.optional.null\n    debug '^4324^', 'function       ', types.isa.optional.function\n    debug '^4324^', 'boolean        ', types.isa.optional.boolean\n    debug '^4324^', 'text           ', types.isa.optional.text\n    debug '^4324^', 'asyncfunction  ', types.isa.optional.asyncfunction\n    debug '^4324^'\n    debug '^4324^', 'null           ', types.validate.null\n    debug '^4324^', 'function       ', types.validate.function\n    debug '^4324^', 'boolean        ', types.validate.boolean\n    debug '^4324^', 'text           ', types.validate.text\n    debug '^4324^', 'asyncfunction  ', types.validate.asyncfunction\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  basic_functionality_using_standalone_methods: ->\n    INTERTYPE     = require '../../../apps/intertype'\n    { isa\n      validate\n      type_of   } = new INTERTYPE.Intertype_minimal sample_declarations\n    @eq ( Ωit_148 = -> isa.boolean           false               ), true\n    @eq ( Ωit_149 = -> isa.boolean           true                ), true\n    @eq ( Ωit_150 = -> isa.boolean           null                ), false\n    @eq ( Ωit_151 = -> isa.boolean           1                   ), false\n    @eq ( Ωit_152 = -> isa.unknown           1                   ), false\n    @eq ( Ωit_153 = -> isa.unknown           Infinity            ), true\n    @eq ( Ωit_154 = -> isa.optional.boolean  false               ), true\n    @eq ( Ωit_155 = -> isa.optional.boolean  true                ), true\n    @eq ( Ωit_156 = -> isa.optional.boolean  null                ), true\n    @eq ( Ωit_157 = -> isa.optional.boolean  1                   ), false\n    @eq ( Ωit_158 = -> isa.optional.unknown  1                   ), false\n    @eq ( Ωit_159 = -> isa.optional.unknown  Infinity            ), true\n    @eq ( Ωit_160 = -> isa.optional.unknown  undefined           ), true\n    @eq ( Ωit_161 = -> isa.optional.unknown  undefined           ), true\n    #.........................................................................................................\n    @eq ( Ωit_162 = -> validate.boolean               false      ), false\n    @eq ( Ωit_163 = -> validate.boolean               true       ), true\n    @eq ( Ωit_164 = -> validate.optional.boolean      true       ), true\n    @eq ( Ωit_165 = -> validate.optional.boolean      false      ), false\n    @eq ( Ωit_166 = -> validate.optional.boolean      undefined  ), undefined\n    @eq ( Ωit_167 = -> validate.optional.boolean      null       ), null\n    @throws ( Ωit_168 = -> validate.boolean           1  ), /expected a boolean/\n    @throws ( Ωit_169 = -> validate.optional.boolean  1  ), /expected an optional boolean/\n    #.........................................................................................................\n    @eq ( Ωit_170 = -> type_of null            ), 'null'\n    @eq ( Ωit_171 = -> type_of undefined       ), 'undefined'\n    @eq ( Ωit_172 = -> type_of false           ), 'boolean'\n    @eq ( Ωit_173 = -> type_of Symbol 'p'      ), 'symbol'\n    @eq ( Ωit_174 = -> type_of {}              ), 'object'\n    @eq ( Ωit_175 = -> type_of NaN             ), 'unknown'\n    @eq ( Ωit_176 = -> type_of +Infinity       ), 'unknown'\n    @eq ( Ωit_177 = -> type_of -Infinity       ), 'unknown'\n    #.........................................................................................................\n    @eq ( Ωit_178 = -> isa.asyncfunction.name               ), 'isa.asyncfunction'\n    @eq ( Ωit_179 = -> isa.optional.asyncfunction.name      ), 'isa.optional.asyncfunction'\n    @eq ( Ωit_180 = -> validate.asyncfunction.name          ), 'validate.asyncfunction'\n    @eq ( Ωit_181 = -> validate.optional.asyncfunction.name ), 'validate.optional.asyncfunction'\n    #.........................................................................................................\n    @throws ( Ωit_182 = -> isa.float 3, 4 ), /method 'isa.float' expects 1 arguments, got 2/\n    @throws ( Ωit_183 = -> isa.float()    ), /method 'isa.float' expects 1 arguments, got 0/\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  methods_check_arity: ->\n    INTERTYPE     = require '../../../apps/intertype'\n    { isa\n      validate\n      type_of   } = new INTERTYPE.Intertype_minimal sample_declarations\n    #.........................................................................................................\n    @throws ( Ωit_184 = -> isa.float 3, 4               ), /method 'isa.float' expects 1 arguments, got 2/\n    @throws ( Ωit_185 = -> isa.float()                  ), /method 'isa.float' expects 1 arguments, got 0/\n    @throws ( Ωit_186 = -> isa.optional.float 3, 4      ), /method 'isa.optional.float' expects 1 arguments, got 2/\n    @throws ( Ωit_187 = -> isa.optional.float()         ), /method 'isa.optional.float' expects 1 arguments, got 0/\n    @throws ( Ωit_188 = -> validate.float 3, 4          ), /method 'validate.float' expects 1 arguments, got 2/\n    @throws ( Ωit_189 = -> validate.float()             ), /method 'validate.float' expects 1 arguments, got 0/\n    @throws ( Ωit_190 = -> validate.optional.float 3, 4 ), /method 'validate.optional.float' expects 1 arguments, got 2/\n    @throws ( Ωit_191 = -> validate.optional.float()    ), /method 'validate.optional.float' expects 1 arguments, got 0/\n    @throws ( Ωit_192 = -> type_of 3, 4                 ), /expected 1 arguments, got 2/\n    @throws ( Ωit_193 = -> type_of()                    ), /expected 1 arguments, got 0/\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  same_basic_types: ->\n    { isa\n      validate\n      type_of   } = require '../../../apps/intertype'\n    #.........................................................................................................\n    boolean                 = false\n    $function               = ->\n    asyncfunction           = -> await null\n    generatorfunction       = ( -> yield null )\n    generator               = ( -> yield null )()\n    asyncgeneratorfunction  = ( -> yield await null )\n    asyncgenerator          = ( -> yield await null )()\n    symbol                  = Symbol 'what'\n    #.........................................................................................................\n    @eq ( Ωit_194 = -> isa.boolean                     boolean                 ), true\n    @eq ( Ωit_195 = -> isa.function                    $function               ), true\n    @eq ( Ωit_196 = -> isa.asyncfunction               asyncfunction           ), true\n    @eq ( Ωit_197 = -> isa.generatorfunction           generatorfunction       ), true\n    @eq ( Ωit_198 = -> isa.asyncgeneratorfunction      asyncgeneratorfunction  ), true\n    @eq ( Ωit_199 = -> isa.asyncgenerator              asyncgenerator          ), true\n    @eq ( Ωit_200 = -> isa.generator                   generator               ), true\n    @eq ( Ωit_201 = -> isa.symbol                      symbol                  ), true\n    #.........................................................................................................\n    @eq ( Ωit_202 = -> validate.boolean                boolean                 ), boolean\n    @eq ( Ωit_203 = -> validate.function               $function               ), $function\n    @eq ( Ωit_204 = -> validate.asyncfunction          asyncfunction           ), asyncfunction\n    @eq ( Ωit_205 = -> validate.generatorfunction      generatorfunction       ), generatorfunction\n    @eq ( Ωit_206 = -> validate.asyncgeneratorfunction asyncgeneratorfunction  ), asyncgeneratorfunction\n    @eq ( Ωit_207 = -> validate.asyncgenerator         asyncgenerator          ), asyncgenerator\n    @eq ( Ωit_208 = -> validate.generator              generator               ), generator\n    @eq ( Ωit_209 = -> validate.symbol                 symbol                  ), symbol\n    #.........................................................................................................\n    @eq ( Ωit_210 = -> type_of boolean                                         ), 'boolean'\n    @eq ( Ωit_211 = -> type_of $function                                       ), 'function'\n    @eq ( Ωit_212 = -> type_of asyncfunction                                   ), 'asyncfunction'\n    @eq ( Ωit_213 = -> type_of generatorfunction                               ), 'generatorfunction'\n    @eq ( Ωit_214 = -> type_of asyncgeneratorfunction                          ), 'asyncgeneratorfunction'\n    @eq ( Ωit_215 = -> type_of asyncgenerator                                  ), 'asyncgenerator'\n    @eq ( Ωit_216 = -> type_of generator                                       ), 'generator'\n    @eq ( Ωit_217 = -> type_of symbol                                          ), 'symbol'\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  throw_instructive_error_on_missing_type: ->\n    INTERTYPE     = require '../../../apps/intertype'\n    { isa\n      validate\n      type_of   } = new INTERTYPE.Intertype()\n    #.........................................................................................................\n    @throws ( Ωit_218 = -> isa.quux                    ), /unknown type 'quux'/\n    @throws ( Ωit_219 = -> isa.quux()                  ), /unknown type 'quux'/\n    @throws ( Ωit_220 = -> isa.quux 3                  ), /unknown type 'quux'/\n    @throws ( Ωit_221 = -> isa.quux 3, 4               ), /unknown type 'quux'/\n    @throws ( Ωit_222 = -> isa.optional.quux           ), /unknown type 'quux'/\n    @throws ( Ωit_223 = -> isa.optional.quux()         ), /unknown type 'quux'/\n    @throws ( Ωit_224 = -> isa.optional.quux 3         ), /unknown type 'quux'/\n    @throws ( Ωit_225 = -> isa.optional.quux 3, 4      ), /unknown type 'quux'/\n    @throws ( Ωit_226 = -> validate.quux               ), /unknown type 'quux'/\n    @throws ( Ωit_227 = -> validate.quux()             ), /unknown type 'quux'/\n    @throws ( Ωit_228 = -> validate.quux 3             ), /unknown type 'quux'/\n    @throws ( Ωit_229 = -> validate.quux 3, 4          ), /unknown type 'quux'/\n    @throws ( Ωit_230 = -> validate.optional.quux      ), /unknown type 'quux'/\n    @throws ( Ωit_231 = -> validate.optional.quux()    ), /unknown type 'quux'/\n    @throws ( Ωit_232 = -> validate.optional.quux 3    ), /unknown type 'quux'/\n    @throws ( Ωit_233 = -> validate.optional.quux 3, 4 ), /unknown type 'quux'/\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  throw_instructive_error_when_optional_is_declared: ->\n    INTERTYPE     = require '../../../apps/intertype'\n    @throws ( Ωit_234 = -> new INTERTYPE.Intertype_minimal { optional: ( ( x ) -> true ), } ), /not allowed to re-declare type 'optional'/\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  throw_instructive_error_when_wrong_type_of_isa_test_declared: ->\n    { Intertype } = require '../../../apps/intertype'\n    #.........................................................................................................\n    @throws ( Ωit_235 = -> new Intertype { foo: ( -> ), }                      ), /expected function with 1 parameters, got one with 0/\n    @throws ( Ωit_236 = -> new Intertype { foo: ( ( a, b ) -> ), }             ), /expected function with 1 parameters, got one with 2/\n    @throws ( Ωit_237 = -> new Intertype { foo: true, }                        ), /expected type name, method, or object to indicate test method, got a boolean/\n    @throws ( Ωit_238 = -> new Intertype { foo: undefined, }                   ), /expected type name, method, or object to indicate test method, got a undefined/\n    @throws ( Ωit_239 = -> new Intertype { foo: null, }                        ), /expected type name, method, or object to indicate test method, got a null/\n    @throws ( Ωit_240 = -> new Intertype { foo: {}, }                          ), /expected type name, method, or object to indicate test method, got a undefined/\n    @throws ( Ωit_241 = -> new Intertype { foo: { test: null, }, }             ), /expected type name, method, or object to indicate test method, got a null/\n    @throws ( Ωit_242 = -> new Intertype { foo: { test: false, }, }            ), /expected type name, method, or object to indicate test method, got a boolean/\n    @throws ( Ωit_243 = -> new Intertype { foo: { test: ( ( a, b ) -> ), }, }  ), /expected function with 1 parameters, got one with 2/\n    @throws ( Ωit_244 = -> new Intertype { foo: 'quux', }                      ), /unknown type 'quux'/\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  allow_declaration_objects: ->\n    { Intertype_minimal } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      declarations  = { sample_declarations..., }\n      declarations.integer =\n        test:     ( x ) -> Number.isInteger x\n        template: 0\n      types = new Intertype_minimal declarations\n      @eq ( Ωit_245 = -> TMP_types.isa.function types.isa.integer  ), true\n      @eq ( Ωit_246 = -> types.isa.integer.length                  ), 1\n      @eq ( Ωit_247 = -> types.isa.integer 123                     ), true\n      @eq ( Ωit_248 = -> types.isa.integer 123.456                 ), false\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  create_entries_must_be_sync_functions: ->\n    { Intertype_minimal } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      declarations  = { sample_declarations..., }\n      declarations.integer =\n        test:     ( x ) -> Number.isInteger x\n        create:   -> await 0\n      @throws ( Ωit_249 = -> new Intertype_minimal declarations ), /expected a function for `create` entry of type 'integer', got a asyncfunction/\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  template_methods_must_be_nullary: ->\n    { Intertype_minimal } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      declarations  = { sample_declarations..., }\n      declarations.foolist =\n        test:     ( x ) -> true\n        template: ( n ) -> [ n, ]\n      @throws ( Ωit_250 = -> new Intertype_minimal declarations ), /template method for type 'foolist' has arity 1 but must be nullary/\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  intertype_knows_its_base_types: ->\n    { isa } = require '../../../apps/intertype'\n    #.........................................................................................................\n    @eq ( Ωit_251 = -> isa.basetype 'optional'   ), false\n    @eq ( Ωit_252 = -> isa.basetype 'anything'   ), true\n    @eq ( Ωit_253 = -> isa.basetype 'nothing'    ), true\n    @eq ( Ωit_254 = -> isa.basetype 'something'  ), true\n    @eq ( Ωit_255 = -> isa.basetype 'null'       ), true\n    @eq ( Ωit_256 = -> isa.basetype 'undefined'  ), true\n    @eq ( Ωit_257 = -> isa.basetype 'unknown'    ), true\n    @eq ( Ωit_258 = -> isa.basetype 'integer'    ), false\n    @eq ( Ωit_259 = -> isa.basetype 'float'      ), false\n    @eq ( Ωit_260 = -> isa.basetype 'basetype'   ), false\n    @eq ( Ωit_261 = -> isa.basetype 'quux'       ), false\n    @eq ( Ωit_262 = -> isa.basetype 'toString'   ), false\n    @eq ( Ωit_263 = -> isa.basetype null         ), false\n    @eq ( Ωit_264 = -> isa.basetype undefined    ), false\n    @eq ( Ωit_265 = -> isa.basetype 4            ), false\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  disallow_licensed_overrides: ->\n    { Intertype } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      types         = new Intertype()\n      @eq ( Ωit_266 = -> types.isa.float 4 ), true\n      #.......................................................................................................\n      overrides     =\n        float:\n          test:       ( x ) -> x is 'float'\n      @throws ( Ωit_267 = -> types.declare overrides ), /not allowed to re-declare type 'float'/\n      #.......................................................................................................\n      ### pre-existing declaration remains valid: ###\n      @eq ( Ωit_268 = -> types.isa.float 4       ), true\n      @eq ( Ωit_269 = -> types.isa.float 'float' ), false\n      return null\n    #.........................................................................................................\n    do =>\n      types         = new Intertype()\n      @eq ( Ωit_270 = -> types.isa.float 4 ), true\n      #.......................................................................................................\n      overrides     =\n        float:\n          override:   true\n          test:       ( x ) -> x is 'float'\n      @throws ( Ωit_271 = -> types.declare overrides ), /not allowed to re-declare type 'float'/\n      return null\n    #.........................................................................................................\n    do =>\n      types         = new Intertype()\n      @eq ( Ωit_272 = -> types.isa.float 4 ), true\n      #.......................................................................................................\n      overrides     =\n        anything:\n          override:   true\n          test:       ( x ) -> true\n      @throws ( Ωit_273 = -> types.declare overrides ), /not allowed to re-declare basetype 'anything'/\n      #.......................................................................................................\n      ### pre-existing declaration remains valid: ###\n      @eq ( Ωit_274 = -> types.isa.anything 4       ), true\n      @eq ( Ωit_275 = -> types.isa.anything 'float' ), true\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  can_create_types_with_templates_and_create: ->\n    { Intertype\n      Intertype_minimal } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      declarations  = { sample_declarations..., }\n      declarations.integer =\n        test:     ( x ) -> Number.isInteger x\n        template: 0\n      declarations.text = { template: '', test: ( ( x ) -> ( typeof x ) is 'string' ), }\n      declarations.float =\n        test:     ( x ) -> Number.isFinite x\n        create:   ( p = null ) -> parseFloat p ? @declarations.float.template\n        template: 0\n      declarations.nan = ( x ) -> Number.isNaN x\n      #.......................................................................................................\n      types = new Intertype_minimal declarations\n      @eq ( Ωit_276 = -> TMP_types.isa.object types.declarations       ), true\n      @eq ( Ωit_277 = -> TMP_types.isa.object types.declarations.float ), true\n      @eq ( Ωit_278 = -> TMP_types.isa.object types.declarations.text  ), true\n      #.......................................................................................................\n      @throws ( Ωit_279 = -> types.create.boolean() ), /type declaration of 'boolean' has no `create` and no `template` entries, cannot be created/\n      @throws ( Ωit_280 = -> types.create.text 'foo' ), /expected 0 arguments, got 1/\n      #.......................................................................................................\n      @eq ( Ωit_281 = -> types.create.text()         ), ''\n      @eq ( Ωit_282 = -> types.create.integer()      ), 0\n      @eq ( Ωit_283 = -> types.create.float()        ), 0\n      @eq ( Ωit_284 = -> types.create.float '123.45' ), 123.45\n      @throws ( Ωit_285 = -> types.create.float '***' ), /these arguments are not suitable for `create.float\\(\\)`: '\\*\\*\\*'/\n      #.......................................................................................................\n      return null\n    #.........................................................................................................\n    do =>\n      declarations =\n        quantity:\n          test:       'object'\n          template:\n            q:        0\n            u:        'u'\n        'quantity.q': 'float'\n        'quantity.u': 'text'\n      { isa\n        validate\n        create    } = new Intertype declarations\n      @eq ( Ωit_286 = -> create.quantity()    ), { q: 0, u: 'u', }\n      return null\n    #.........................................................................................................\n    do =>\n      declarations =\n        quantity:\n          test:       'object'\n          template:\n            q:        0\n            u:        'u'\n          fields:\n            q:        'float'\n            u:        'text'\n      { isa\n        validate\n        create    } = new Intertype declarations\n      @eq ( Ωit_287 = -> create.quantity()                         ), { q: 0, u: 'u', }\n      @eq ( Ωit_288 = -> create.quantity { q: 123, }               ), { q: 123, u: 'u', }\n      @eq ( Ωit_289 = -> create.quantity { u: 'kg', }              ), { q: 0, u: 'kg', }\n      @eq ( Ωit_290 = -> create.quantity { u: 'kg', foo: 'bar', }  ), { q: 0, u: 'kg', foo: 'bar', }\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  builtin_types_support_create: ->\n    { Intertype } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      types       = new Intertype()\n      { create\n        type_of } = types\n      @eq ( Ωit_291 = -> create.float()         ), 0\n      @eq ( Ωit_292 = -> create.boolean()       ), false\n      @eq ( Ωit_293 = -> create.object()        ), {}\n      @eq ( Ωit_294 = -> create.float()         ), 0\n      @eq ( Ωit_295 = -> create.infinity()      ), Infinity\n      @eq ( Ωit_296 = -> create.text()          ), ''\n      @eq ( Ωit_297 = -> create.list()          ), []\n      @eq ( Ωit_298 = -> create.regex()         ), new RegExp()\n      @eq ( Ωit_299 = -> type_of create.function()      ), 'function'\n      @eq ( Ωit_300 = -> type_of create.asyncfunction() ), 'asyncfunction'\n      @eq ( Ωit_301 = -> type_of create.symbol()        ), 'symbol'\n      @throws ( Ωit_302 = -> create.basetype() ), /type declaration of 'basetype' has no `create` and no `template` entries, cannot be created/\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  template_functions_are_called_in_template_fields: ->\n    { Intertype } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      types       = new Intertype()\n      { declare\n        create\n        isa\n        type_of\n        declarations  } = types\n      declare quantity:\n        test:     'object'\n        fields:\n          q:      'float'\n          u:      'text'\n        template:\n          q:      -> @create.float()\n          u:      -> 'u'\n      debug '^3234^', create.quantity()\n      debug '^3234^', declarations.quantity\n      @eq ( Ωit_303 = -> create.quantity()                          ), { q: 0, u: 'u', }\n      @eq ( Ωit_304 = -> isa.quantity { q: 9, }                     ), false\n      @eq ( Ωit_305 = -> type_of declarations.quantity.sub_tests.q  ), 'function'\n      @eq ( Ωit_306 = -> type_of declarations.quantity.sub_tests.u  ), 'function'\n      return null\n    #.........................................................................................................\n    do =>\n      types       = new Intertype()\n      { declare\n        create\n        type_of } = types\n      declare foo:\n        test:     'object'\n        fields:\n          foo:\n            test:   'object'\n            fields:\n              bar:\n                test:     'float'\n        template:\n          foo:\n            bar: 123\n      debug '^3234^', create.foo()\n      @eq ( Ωit_307 = -> create.foo() ), { foo: { bar: 123, } }\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  type_object_assumed_if_fields_present: ->\n    { Intertype } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      types       = new Intertype()\n      { declare\n        declarations\n        create\n        type_of\n        isa     } = types\n      declare quantity:\n        # test: 'object'\n        fields:\n          q:      'float'\n          u:      'text'\n      @eq ( Ωit_308 = -> type_of declarations.quantity.test ), 'function'\n      debug '^342342^', declarations.quantity\n      @eq ( Ωit_309 = -> type_of declarations.quantity.sub_tests.q ), 'function'\n      @eq ( Ωit_310 = -> type_of declarations.quantity.sub_tests.u ), 'function'\n      @eq ( Ωit_311 = -> isa.quantity { q: 987, u: 's', } ), true\n      @eq ( Ωit_312 = -> isa.quantity { q: 987, } ), false\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  intertype_minimal_has_only_base_types: ->\n    { Intertype_minimal } = require '../../../apps/intertype'\n    types = new Intertype_minimal()\n    @eq ( Ωit_313 = -> ( Object.keys types.declarations ).sort() ), [ 'anything', 'nothing', 'null', 'optional', 'something', 'undefined', 'unknown' ]\n    types.declare { z: ( ( x ) -> ), }\n    @eq ( Ωit_314 = -> ( Object.keys types.declarations ).sort() ), [ 'anything', 'nothing', 'null', 'optional', 'something', 'undefined', 'unknown', 'z' ]\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  can_use_type_name_for_test: ->\n    { Intertype } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      types = new Intertype()\n      @throws ( Ωit_315 = -> types.declare { z: 'quux', } ), /unknown type 'quux'/\n      types.declare { z: 'float', }\n      @eq ( Ωit_316 = -> types.isa.z 12 ), true\n      @eq ( Ωit_317 = -> types.isa.float.name                ), 'isa.float'\n      @eq ( Ωit_318 = -> types.declarations.float.type       ), 'float'\n      @eq ( Ωit_319 = -> types.declarations.float.test.name  ), 'float'\n      @eq ( Ωit_320 = -> types.isa.z.name                    ), 'isa.z'\n      @eq ( Ωit_321 = -> types.declarations.z.type           ), 'z'\n      @eq ( Ωit_322 = -> types.declarations.z.test.name      ), 'z' # ?\n    #.........................................................................................................\n    do =>\n      types = new Intertype()\n      @throws ( Ωit_323 = -> types.declare { z: { test: 'quux', }, } ), /unknown type 'quux'/\n      types.declare { z: { test: 'float', }, }\n      @eq ( Ωit_324 = -> types.isa.z 12 ), true\n      @eq ( Ωit_325 = -> types.isa.float.name                ), 'isa.float'\n      @eq ( Ωit_326 = -> types.declarations.float.type       ), 'float'\n      @eq ( Ωit_327 = -> types.declarations.float.test.name  ), 'float'\n      @eq ( Ωit_328 = -> types.isa.z.name                    ), 'isa.z'\n      @eq ( Ωit_329 = -> types.declarations.z.type           ), 'z'\n      @eq ( Ωit_330 = -> types.declarations.z.test.name      ), 'z'\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  resolve_dotted_type: ->\n    { Intertype } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      types = new Intertype()\n      @eq ( Ωit_331 = -> Reflect.has types.declarations, 'foo'           ), false\n      types.declare { foo: 'object', }\n      @eq ( Ωit_332 = -> Reflect.has types.declarations, 'foo'           ), true\n      @eq ( Ωit_333 = -> Reflect.has types.declarations, 'foo.bar'       ), false\n      types.declare { 'foo.bar': 'object', }\n      @eq ( Ωit_334 = -> Reflect.has types.declarations, 'foo.bar'       ), true\n      @eq ( Ωit_335 = -> Reflect.has types.declarations, 'foo.bar.baz'   ), false\n      types.declare { 'foo.bar.baz': 'float', }\n      @eq ( Ωit_336 = -> Reflect.has types.declarations, 'foo.bar.baz'   ), true\n      @eq ( Ωit_337 = -> types.isa.foo.bar.baz null                      ), false\n      @eq ( Ωit_338 = -> types.isa.foo.bar.baz 4                         ), true\n      @eq ( Ωit_339 = -> types.isa.foo.bar.baz +Infinity                 ), false\n      # T?.eq types.declarations[ 'foo.bar.baz' ].test, types.declarations.float.test\n      # types.declare { 'foo.bar.baz.quux.dax.dux': 'float', }\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  dotted_types_are_test_methods: ->\n    { Intertype } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      types = new Intertype()\n      types.declare { quantity: 'object', }\n      types.declare { 'quantity.q': 'float', }\n      types.declare { 'quantity.u': 'text', }\n      @eq ( Ωit_340 = -> types.isa[ 'quantity.q' ] ), types.declarations[ 'quantity' ].sub_tests[ 'q' ]\n      @eq ( Ωit_341 = -> types.isa[ 'quantity.q' ] ), types.isa.quantity.q\n      # debug '^409-1^', types.declarations\n      @eq ( Ωit_342 = -> types.isa.quantity {}                 ), false\n      @eq ( Ωit_343 = -> types.isa.quantity { q: {}, }         ), false\n      @eq ( Ωit_344 = -> types.isa.quantity { q: 3, }          ), false\n      @eq ( Ωit_345 = -> types.isa.quantity { q: 3, u: 'm', }  ), true\n      @eq ( Ωit_346 = -> types.isa.quantity.q 3                ), true\n      @eq ( Ωit_347 = -> types.isa.quantity.q 3.1              ), true\n      @eq ( Ωit_348 = -> types.isa.quantity.q '3.1'            ), false\n      @eq ( Ωit_349 = -> types.isa.quantity.u 'm'              ), true\n      @eq ( Ωit_350 = -> types.isa.quantity.u null             ), false\n      @eq ( Ωit_351 = -> types.isa.quantity.u 3                ), false\n      debug '^433-1^', types.declarations[ 'quantity' ]\n      debug '^433-1^', types.declarations[ 'quantity.q' ]\n      debug '^433-1^', types.declarations[ 'quantity.u' ]\n      return null\n    #.........................................................................................................\n    do =>\n      types = new Intertype()\n      types.declare { 'person':                       'object', }\n      types.declare { 'person.name':                  'text',   }\n      types.declare { 'person.address':               'object', }\n      types.declare { 'person.address.city':          'object', }\n      types.declare { 'person.address.city.name':     'text',   }\n      types.declare { 'person.address.city.postcode': 'text',   }\n      # T?.eq types.isa[ 'quantity.q' ], types.declarations[ 'quantity' ].sub_tests[ 'q' ]\n      # T?.eq types.isa[ 'quantity.q' ], types.isa.quantity.q\n      @eq ( Ωit_352 = -> types.isa.person.address.city.name 'P'  ), true\n      @eq ( Ωit_353 = -> types.isa.person.address.city.name 1234 ), false\n      @eq ( Ωit_354 = -> types.isa.person 1234 ), false\n      @eq ( Ωit_355 = -> types.isa.person { name: 'Bob', } ), false\n      @eq ( Ωit_356 = -> types.isa.person { name: 'Bob', address: {}, } ), false\n      @eq ( Ωit_357 = -> types.isa.person { name: 'Bob', address: { city: {}, }, } ), false\n      @eq ( Ωit_358 = -> types.isa.person { name: 'Bob', address: { city: { name: 'P', }, }, } ), false\n      @eq ( Ωit_359 = -> types.isa.person { name: 'Bob', address: { city: { name: 'P', postcode: 'SO36', }, }, } ), true\n      @eq ( Ωit_360 = -> types.isa.person.address.city.name     'P'                                ), true\n      @eq ( Ωit_361 = -> types.isa.person.address.city.postcode 'SO36'                             ), true\n      @eq ( Ωit_362 = -> types.isa.person.address.city {         name: 'P', postcode: 'SO36', }    ), true\n      @eq ( Ωit_363 = -> types.isa.person.address      { city: { name: 'P', postcode: 'SO36', }, } ), true\n      help '^322-1^', ( { \"#{k}\": f.name } for k, f of types.declarations[ 'person'               ].sub_tests )\n      help '^322-2^', ( { \"#{k}\": f.name } for k, f of types.declarations[ 'person.address'       ].sub_tests )\n      help '^322-3^', ( { \"#{k}\": f.name } for k, f of types.declarations[ 'person.address.city'  ].sub_tests )\n      @eq ( Ωit_364 = -> Object.keys types.declarations[ 'person'               ].sub_tests ), [ 'name', 'address', ]\n      @eq ( Ωit_365 = -> Object.keys types.declarations[ 'person.address'       ].sub_tests ), [ 'city', ]\n      @eq ( Ωit_366 = -> Object.keys types.declarations[ 'person.address.city'  ].sub_tests ), [ 'name', 'postcode', ]\n      @eq ( Ωit_367 = -> types.declarations[ 'person' ].sub_tests isnt types.declarations[ 'person.address'      ].sub_tests ), true\n      @eq ( Ωit_368 = -> types.declarations[ 'person' ].sub_tests isnt types.declarations[ 'person.address.city' ].sub_tests ), true\n      return null\n    #.........................................................................................................\n    do =>\n      types = new Intertype()\n      types.declare { 'foo':      'float', }\n      types.declare { 'foo.bar':  'text',   }\n      do =>\n        d = 3\n        # d.bar = '?' # Cannot create property in strict mode, so can never satisfy test\n        @eq ( Ωit_369 = -> types.isa.foo d ), false\n        return null\n      do =>\n        d = new Number 3\n        d.bar = '?'\n        @eq ( Ωit_370 = -> d.bar ), '?'\n        # still won't work b/c `float` doesn't accept objects (which is a good thing):\n        @eq ( Ωit_371 = -> types.isa.foo d ), false\n        return null\n      return null\n    #.........................................................................................................\n    do =>\n      types = new Intertype()\n      types.declare { 'foo':        'object', }\n      types.declare { 'foo.bind':   'float',   }\n      types.declare { 'foo.apply':  'float',   }\n      types.declare { 'foo.call':   'float',   }\n      types.declare { 'foo.name':   'float',   }\n      types.declare { 'foo.length': 'float',   }\n      @eq ( Ωit_372 = -> types.isa.foo {} ), false\n      @eq ( Ωit_373 = -> types.isa.foo { bind: 1, apply: 2, call: 3, name: 4, length: 5, } ), true\n      return null\n    #.........................................................................................................\n    do =>\n      types = new Intertype()\n      types.declare { 'foo':        'object',           }\n      types.declare { 'foo.text':   ( ( x ) -> x is 1 ) }\n      types.declare { 'foo.float':  ( ( x ) -> x is 2 ) }\n      @eq ( Ωit_374 = -> types.isa.foo {} ), false\n      @eq ( Ωit_375 = -> types.isa.foo { text: 1, float: 2, } ), true\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  can_use_refs_to_dotted_types: ->\n    { Intertype } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      types = new Intertype()\n      types.declare { 'person':                       'object', }\n      types.declare { 'person.name':                  'text',   }\n      types.declare { 'person.address':               'object', }\n      types.declare { 'person.address.city':          'object', }\n      types.declare { 'person.address.city.name':     'text',   }\n      types.declare { 'person.address.city.postcode': 'text',   }\n      types.declare { 'mycity':                       ( ( x ) -> @isa.person.address.city x ), }\n      # debug '^434-1^', types.declarations[ 'person.address.city' ]\n      # debug '^434-2^', types.declarations.mycity\n      urge '^342-1^', ( types.declarations.mycity )\n      @eq ( Ωit_376 = -> types.isa.person.address.city {} ), false\n      @eq ( Ωit_377 = -> types.isa.person.address.city null ), false\n      @eq ( Ωit_378 = -> types.isa.person.address.city { name: 'P', postcode: 'SO36', } ), true\n      @eq ( Ωit_379 = -> types.isa.mycity {} ), false\n      @eq ( Ωit_380 = -> types.isa.mycity null ), false\n      @eq ( Ωit_381 = -> types.isa.mycity { name: 'P', postcode: 'SO36', } ), true\n      return null\n    #.........................................................................................................\n    do =>\n      types = new Intertype()\n      types.declare { 'person':                       'object', }\n      types.declare { 'person.name':                  'text',   }\n      types.declare { 'person.address':               'object', }\n      types.declare { 'person.address.city':          'object', }\n      types.declare { 'person.address.city.name':     'text',   }\n      types.declare { 'person.address.city.postcode': 'text',   }\n      types.declare { 'mycity':                       'person.address.city', }\n      # debug '^434-3^', types.declarations[ 'person.address.city' ]\n      # debug '^434-4^', types.declarations.mycity\n      urge '^342-2^', ( types.declarations.mycity )\n      @eq ( Ωit_382 = -> types.isa.person.address.city {} ), false\n      @eq ( Ωit_383 = -> types.isa.person.address.city null ), false\n      @eq ( Ωit_384 = -> types.isa.person.address.city { name: 'P', postcode: 'SO36', } ), true\n      @eq ( Ωit_385 = -> types.isa.mycity {} ), false\n      @eq ( Ωit_386 = -> types.isa.mycity null ), false\n      @eq ( Ωit_387 = -> types.isa.mycity { name: 'P', postcode: 'SO36', } ), true\n      return null\n    #.........................................................................................................\n    do =>\n      types = new Intertype()\n      types.declare { 'person':                       'object', }\n      types.declare { 'person.name':                  'text',   }\n      types.declare { 'person.address':               'object', }\n      types.declare { 'person.address.city':          'object', }\n      types.declare { 'person.address.city.name':     'text',   }\n      types.declare { 'person.address.city.postcode': 'text',   }\n      types.declare { 'mycity':                       ( ( x ) -> @isa.optional.person.address.city x ), }\n      # debug '^434-5^', types.declarations[ 'person.address.city' ]\n      # debug '^434-6^', types.declarations.mycity\n      urge '^342-3^', ( types.declarations.mycity )\n      @eq ( Ωit_388 = -> types.isa.person.address.city {} ), false\n      @eq ( Ωit_389 = -> types.isa.person.address.city null ), false\n      @eq ( Ωit_390 = -> types.isa.person.address.city { name: 'P', postcode: 'SO36', } ), true\n      @eq ( Ωit_391 = -> types.isa.optional.person.address.city {} ), false\n      @eq ( Ωit_392 = -> types.isa.optional.person.address.city null ), true\n      @eq ( Ωit_393 = -> types.isa.optional.person.address.city { name: 'P', postcode: 'SO36', } ), true\n      @eq ( Ωit_394 = -> types.isa.mycity {} ), false\n      @eq ( Ωit_395 = -> types.isa.mycity null ), true\n      @eq ( Ωit_396 = -> types.isa.mycity { name: 'P', postcode: 'SO36', } ), true\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  forbidden_to_define_fields_on_basetypes: ->\n    { Intertype\n      declarations  } = require '../../../apps/intertype'\n    #.........................................................................................................\n    await do =>\n      types         = new Intertype()\n      { declare\n        validate\n        isa } = types\n      @throws ( Ωit_397 = -> types.declare { 'optional.d':    ( ( x ) -> ), } ), /illegal use of 'optional' in declaration of type 'optional.d'/\n      @throws ( Ωit_398 = -> types.declare { 'anything.d':    ( ( x ) -> ), } ), /illegal use of basetype 'anything' in declaration of type 'anything.d'/\n      @throws ( Ωit_399 = -> types.declare { 'nothing.d':     ( ( x ) -> ), } ), /illegal use of basetype 'nothing' in declaration of type 'nothing.d'/\n      @throws ( Ωit_400 = -> types.declare { 'something.d':   ( ( x ) -> ), } ), /illegal use of basetype 'something' in declaration of type 'something.d'/\n      @throws ( Ωit_401 = -> types.declare { 'null.d':        ( ( x ) -> ), } ), /illegal use of basetype 'null' in declaration of type 'null.d'/\n      @throws ( Ωit_402 = -> types.declare { 'undefined.d':   ( ( x ) -> ), } ), /illegal use of basetype 'undefined' in declaration of type 'undefined.d'/\n      @throws ( Ωit_403 = -> types.declare { 'unknown.d':     ( ( x ) -> ), } ), /illegal use of basetype 'unknown' in declaration of type 'unknown.d'/\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  internal_type_of_method: ->\n    { Intertype\n      declarations\n      __type_of     } = require '../../../apps/intertype'\n    #.........................................................................................................\n    _isa = Object.fromEntries ( [ type, declaration.test, ] for type, declaration of declarations )\n    #.........................................................................................................\n    do =>\n      types         = new Intertype()\n      @eq ( Ωit_404 = -> __type_of null, _isa, null          ), 'null'\n      @eq ( Ωit_405 = -> __type_of null, _isa, undefined     ), 'undefined'\n      @eq ( Ωit_406 = -> __type_of null, _isa, 4             ), 'float'\n      @eq ( Ωit_407 = -> __type_of null, _isa, ->            ), 'function'\n      @eq ( Ωit_408 = -> __type_of null, _isa, -> await null ), 'asyncfunction'\n      @eq ( Ωit_409 = -> __type_of null, _isa, {}            ), 'object'\n      @eq ( Ωit_410 = -> __type_of null, _isa, []            ), 'list'\n      @eq ( Ωit_411 = -> __type_of null, _isa, +Infinity     ), 'infinity'\n      @eq ( Ωit_412 = -> __type_of null, _isa, -Infinity     ), 'infinity'\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  deepmerge: ->\n    { Intertype\n      declarations\n      deepmerge   } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      sub = { foo: 3, }\n      probe =\n        bar:\n          baz:\n            sub: sub\n        gnu: 4\n      result = deepmerge probe\n      @eq ( Ωit_413 = -> result                                   ), probe\n      @eq ( Ωit_414 = -> result.bar         is probe.bar          ), false\n      @eq ( Ωit_415 = -> result.bar.baz     is probe.bar.baz      ), false\n      @eq ( Ωit_416 = -> result.bar.baz.sub is probe.bar.baz.sub  ), false\n      @eq ( Ωit_417 = -> result.bar.baz.sub is sub                ), false\n      @eq ( Ωit_418 = -> probe.bar.baz.sub  is sub                ), true\n      return null\n    #.........................................................................................................\n    do =>\n      sub = { foo: 3, }\n      probe =\n        bar:\n          baz:\n            sub: sub\n        gnu: 4\n      types = new Intertype { q: { test: 'object', template: probe, }, }\n      result = types.create.q()\n      @eq ( Ωit_419 = -> result                                   ), probe\n      @eq ( Ωit_420 = -> result.bar         is probe.bar          ), false\n      @eq ( Ωit_421 = -> result.bar.baz     is probe.bar.baz      ), false\n      @eq ( Ωit_422 = -> result.bar.baz.sub is probe.bar.baz.sub  ), false\n      @eq ( Ωit_423 = -> result.bar.baz.sub is sub                ), false\n      @eq ( Ωit_424 = -> probe.bar.baz.sub  is sub                ), true\n      return null\n    #.........................................................................................................\n    do =>\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  validate_dotted_types: ->\n    { Intertype } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      types         = new Intertype()\n      { validate }  = types\n      types.declare { 'person':                       'object', }\n      types.declare { 'person.name':                  'text',   }\n      types.declare { 'person.address':               'object', }\n      types.declare { 'person.address.city':          'object', }\n      types.declare { 'person.address.city.name':     'text',   }\n      types.declare { 'person.address.city.postcode': 'text',   }\n      #.......................................................................................................\n      @throws ( Ωit_425 = -> validate.person null                        ), /expected a person, got a null/\n      @throws ( Ωit_426 = -> validate.person.address null                ), /expected a person.address, got a null/\n      @throws ( Ωit_427 = -> validate.person.address.city null           ), /expected a person.address.city, got a null/\n      @throws ( Ωit_428 = -> validate.person.address.city.postcode null  ), /expected a person.address.city.postcode, got a null/\n      #.......................................................................................................\n      @eq ( Ωit_429 = -> types.isa.person.address.city.postcode 3 ), false\n      @throws ( Ωit_430 = -> validate.person.address.city.postcode 3             ), /expected a person.address.city.postcode/\n      #.......................................................................................................\n      @eq ( Ωit_431 = -> types.isa.person.address.city { name: 'P', } ), false\n      @throws ( Ωit_432 = -> validate.person.address.city { name: 'P', }         ), /expected a person.address.city/\n      # #.......................................................................................................\n      @eq ( Ωit_433 = -> types.isa.person.address.city { postcode: '3421', } ), false\n      @throws ( Ωit_434 = -> validate.person.address.city()                      ), /method 'validate.person.address.city' expects 1 arguments, got 0/\n      @throws ( Ωit_435 = -> validate.person.address.city null                   ), /expected a person.address.city/\n      @throws ( Ωit_436 = -> validate.person.address.city '3421'                 ), /expected a person.address.city/\n      @throws ( Ωit_437 = -> validate.person.address.city { postcode: '3421', }  ), /expected a person.address.city/\n      #.......................................................................................................\n      @eq ( Ωit_438 = -> types.isa.person.address.city { name: 'P', postcode: '3421', } ), true\n      @eq ( Ωit_439 = -> validate.person.address.city { name: 'P', postcode: '3421', } ), { name: 'P', postcode: '3421', }\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  use_evaluate: ->\n    { Intertype } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      types         = new Intertype()\n      { validate\n        isa\n        evaluate }  = types\n      types.declare { 'person':                       'object', }\n      types.declare { 'person.name':                  'text',   }\n      types.declare { 'person.address':               'object', }\n      types.declare { 'person.address.city':          'object', }\n      types.declare { 'person.address.city.name':     'text',   }\n      types.declare { 'person.address.city.postcode': 'text',   }\n      #.......................................................................................................\n      @throws ( Ωit_440 = -> evaluate.optional 1         ), /`optional` is not a legal type for `evaluate` methods/\n      @throws ( Ωit_441 = -> evaluate.optional.person 1  ), /`optional` is not a legal type for `evaluate` methods/\n      #.......................................................................................................\n      @eq ( Ωit_442 = -> isa.person       { name: 'Alice', address: { city: { name: 'Atown', postcode: 'VA1234' } } } ), true\n      @eq ( Ωit_443 = -> evaluate.person  { name: 'Alice', address: { city: { name: 'Atown', postcode: 'VA1234' } } } ), { person: true,  'person.name': true, 'person.address': true, 'person.address.city': true, 'person.address.city.name': true, 'person.address.city.postcode': true, }\n      #.......................................................................................................\n      @eq ( Ωit_444 = -> isa.person       { name: 'Alice', address: { city: { name: 'Atown', postcode: 12345678 } } } ), false\n      @eq ( Ωit_445 = -> evaluate.person  { name: 'Alice', address: { city: { name: 'Atown', postcode: 12345678 } } } ), { person: false,  'person.name': true, 'person.address': false, 'person.address.city': false, 'person.address.city.name': true, 'person.address.city.postcode': false, }\n      #.......................................................................................................\n      @eq ( Ωit_446 = -> isa.person       {                address: { city: { name: 'Atown', postcode: 12345678 } } } ), false\n      @eq ( Ωit_447 = -> evaluate.person  {                address: { city: { name: 'Atown', postcode: 12345678 } } } ), { person: false,  'person.name': false, 'person.address': false, 'person.address.city': false, 'person.address.city.name': true, 'person.address.city.postcode': false, }\n      #.......................................................................................................\n      @eq ( Ωit_448 = -> isa.person       {                address: { city: { name: 'Atown', postcode: 'VA1234' } } } ), false\n      @eq ( Ωit_449 = -> evaluate.person  {                address: { city: { name: 'Atown', postcode: 'VA1234' } } } ), { person: false, 'person.name': false, 'person.address': true, 'person.address.city': true, 'person.address.city.name': true, 'person.address.city.postcode': true, }\n      #.......................................................................................................\n      @eq ( Ωit_450 = -> isa.person       null  ), false\n      @eq ( Ωit_451 = -> evaluate.person  null  ), { person: false, 'person.name': false, 'person.address': false, 'person.address.city': false, 'person.address.city.name': false, 'person.address.city.postcode': false, }\n      #.......................................................................................................\n      @eq ( Ωit_452 = -> isa.person       {}    ), false\n      @eq ( Ωit_453 = -> evaluate.person  {}    ), { person: false, 'person.name': false, 'person.address': false, 'person.address.city': false, 'person.address.city.name': false, 'person.address.city.postcode': false, }\n      return null\n    #.........................................................................................................\n    do =>\n      types         = new Intertype()\n      { validate\n        isa\n        evaluate }  = types\n      types.declare { 'person':                       'object', }\n      types.declare { 'person.address':               'object', }\n      types.declare { 'person.address.city':          'object', }\n      types.declare { 'person.address.city.postcode': 'text',   }\n      types.declare { 'person.address.city.name':     'text',   }\n      types.declare { 'person.name':                  'text',   }\n      #.......................................................................................................\n      @eq ( Ωit_454 = -> isa.person                   { name: 'Alice', address: { city: { name: 'Atown', postcode: 'VA1234' } } } ), true\n      @eq ( Ωit_455 = -> evaluate.person              { name: 'Alice', address: { city: { name: 'Atown', postcode: 'VA1234' } } } ), { person: true,  'person.name': true, 'person.address': true, 'person.address.city': true, 'person.address.city.name': true, 'person.address.city.postcode': true, }\n      @eq ( Ωit_456 = -> Object.keys evaluate.person  { name: 'Alice', address: { city: { name: 'Atown', postcode: 'VA1234' } } } ), [ 'person', 'person.address', 'person.address.city', 'person.address.city.postcode', 'person.address.city.name', 'person.name' ]\n      #.......................................................................................................\n      @eq ( Ωit_457 = -> isa.person                   {                address: { city: { name: 'Atown', postcode: 'VA1234' } } } ), false\n      @eq ( Ωit_458 = -> evaluate.person              {                address: { city: { name: 'Atown', postcode: 'VA1234' } } } ), { person: false, 'person.name': false, 'person.address': true, 'person.address.city': true, 'person.address.city.name': true, 'person.address.city.postcode': true, }\n      @eq ( Ωit_459 = -> Object.keys evaluate.person  {                address: { city: { name: 'Atown', postcode: 'VA1234' } } } ), [ 'person', 'person.address', 'person.address.city', 'person.address.city.postcode', 'person.address.city.name', 'person.name' ]\n      #.......................................................................................................\n      @eq ( Ωit_460 = -> isa.person                   null  ), false\n      @eq ( Ωit_461 = -> evaluate.person              null  ), { person: false, 'person.name': false, 'person.address': false, 'person.address.city': false, 'person.address.city.name': false, 'person.address.city.postcode': false, }\n      @eq ( Ωit_462 = -> Object.keys evaluate.person  null  ), [ 'person', 'person.address', 'person.address.city', 'person.address.city.postcode', 'person.address.city.name', 'person.name' ]\n      #.......................................................................................................\n      @eq ( Ωit_463 = -> isa.person                   {}  ), false\n      @eq ( Ωit_464 = -> evaluate.person              {}  ), { person: false, 'person.name': false, 'person.address': false, 'person.address.city': false, 'person.address.city.name': false, 'person.address.city.postcode': false, }\n      @eq ( Ωit_465 = -> Object.keys evaluate.person  {}  ), [ 'person', 'person.address', 'person.address.city', 'person.address.city.postcode', 'person.address.city.name', 'person.name' ]\n      #.......................................................................................................\n      @eq ( Ωit_466 = -> isa.person.address                   { city: { name: 'Atown', postcode: 'VA1234' } } ), true\n      @eq ( Ωit_467 = -> evaluate.person.address              { city: { name: 'Atown', postcode: 'VA1234' } } ), { 'person.address': true, 'person.address.city': true, 'person.address.city.name': true, 'person.address.city.postcode': true, }\n      @eq ( Ωit_468 = -> Object.keys evaluate.person.address  { city: { name: 'Atown', postcode: 'VA1234' } } ), [ 'person.address', 'person.address.city', 'person.address.city.postcode', 'person.address.city.name' ]\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  walk_prefixes: ->\n    { walk_prefixes\n      isa\n      type_of                     } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      @eq ( Ωit_469 = -> isa.generatorfunction walk_prefixes             ), true\n      @eq ( Ωit_470 = -> [ ( walk_prefixes 'one'                )..., ]  ), []\n      @eq ( Ωit_471 = -> [ ( walk_prefixes 'one.two'            )..., ]  ), [ 'one' ]\n      @eq ( Ωit_472 = -> [ ( walk_prefixes 'one.two.three'      )..., ]  ), [ 'one', 'one.two', ]\n      @eq ( Ωit_473 = -> [ ( walk_prefixes 'one.two.three.four' )..., ]  ), [ 'one', 'one.two', 'one.two.three', ]\n      ### TAINT should not allow empty namers: ###\n      @eq ( Ωit_474 = -> [ ( walk_prefixes '.one.two.three'     )..., ]  ), [ '', '.one', '.one.two', ]\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  can_use_namespaces: ->\n    { Intertype } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      declarations =\n        'foo.bar':      ( x ) -> x is 'foo.bar'\n        'foo.bar.baz':  ( x ) -> x is 'foo.bar.baz'\n      @throws ( Ωit_475 = -> types = new Intertype declarations ), /unknown partial type 'foo'/\n      return null\n    #.........................................................................................................\n    do =>\n      declarations =\n        'quantity':         'object'\n        'quantity.q':       'float'\n        'quantity.u':       'text'\n      types = new Intertype declarations\n      @eq ( Ωit_476 = -> types.isa.quantity {}                   ), false\n      @eq ( Ωit_477 = -> types.isa.quantity { q: 12, u: 'kg', }  ), true\n      @eq ( Ωit_478 = -> types.isa[ 'quantity.q' ] 12            ), true\n      @eq ( Ωit_479 = -> types.isa[ 'quantity.u' ] 'kg'          ), true\n      @eq ( Ωit_480 = -> types.isa.quantity.q 12                 ), true\n      @eq ( Ωit_481 = -> types.isa.quantity.u 'kg'               ), true\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  can_use_qualifiers: ->\n    { Intertype_minimal } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      declarations =\n        'empty':            { test: 'object', role: 'qualifier', }\n        'nonempty':         { test: 'object', role: 'qualifier', }\n        'empty.list':       ( x ) -> ( @isa.list  x ) and ( x.length  is  0 )\n        'empty.text':       ( x ) -> ( @isa.text  x ) and ( x.length  is  0 )\n        'empty.set':        ( x ) -> ( @isa.set   x ) and ( x.size    is  0 )\n        'nonempty.list':    ( x ) -> ( @isa.list  x ) and ( x.length  >   0 )\n        'nonempty.text':    ( x ) -> ( @isa.text  x ) and ( x.length  >   0 )\n        'nonempty.set':     ( x ) -> ( @isa.set   x ) and ( x.size    >   0 )\n      types   = new Intertype_minimal sample_declarations, declarations\n      { isa } = types\n      @eq ( Ωit_482 = -> isa.empty.list    []          ), true\n      @eq ( Ωit_483 = -> isa.empty.list    [ 'A', ]    ), false\n      @eq ( Ωit_484 = -> isa.empty.list    4           ), false\n      @eq ( Ωit_485 = -> isa.nonempty.list []          ), false\n      @eq ( Ωit_486 = -> isa.nonempty.list [ 'A', ]    ), true\n      @eq ( Ωit_487 = -> isa.nonempty.list 4           ), false\n      @eq ( Ωit_488 = -> isa.empty.text    ''          ), true\n      @eq ( Ωit_489 = -> isa.empty.text    'A'         ), false\n      @eq ( Ωit_490 = -> isa.empty.text    4           ), false\n      @eq ( Ωit_491 = -> isa.nonempty.text ''          ), false\n      @eq ( Ωit_492 = -> isa.nonempty.text 'A'         ), true\n      @eq ( Ωit_493 = -> isa.nonempty.text 4           ), false\n      ### this doesn't make a terrible lot of sense: ###\n      @eq ( Ωit_494 = -> isa.empty { list: [], text: '', set: new Set() } ), false\n      return null\n    #.........................................................................................................\n    do =>\n      declarations =\n        'empty':            { role: 'qualifier', }\n        'nonempty':         { role: 'qualifier', }\n        'empty.list':       ( x ) -> ( @isa.list  x ) and ( x.length  is  0 )\n        'empty.text':       ( x ) -> ( @isa.text  x ) and ( x.length  is  0 )\n        'empty.set':        ( x ) -> ( @isa.set   x ) and ( x.size    is  0 )\n        'nonempty.list':    ( x ) -> ( @isa.list  x ) and ( x.length  >   0 )\n        'nonempty.text':    ( x ) -> ( @isa.text  x ) and ( x.length  >   0 )\n        'nonempty.set':     ( x ) -> ( @isa.set   x ) and ( x.size    >   0 )\n      types         = new Intertype_minimal sample_declarations, declarations\n      { isa\n        validate  } = types\n      @eq ( Ωit_495 = -> isa.empty.list    []          ), true\n      @eq ( Ωit_496 = -> isa.empty.list    [ 'A', ]    ), false\n      @eq ( Ωit_497 = -> isa.empty.list    4           ), false\n      @eq ( Ωit_498 = -> isa.nonempty.list []          ), false\n      @eq ( Ωit_499 = -> isa.nonempty.list [ 'A', ]    ), true\n      @eq ( Ωit_500 = -> isa.nonempty.list 4           ), false\n      @eq ( Ωit_501 = -> isa.empty.text    ''          ), true\n      @eq ( Ωit_502 = -> isa.empty.text    'A'         ), false\n      @eq ( Ωit_503 = -> isa.empty.text    4           ), false\n      @eq ( Ωit_504 = -> isa.nonempty.text ''          ), false\n      @eq ( Ωit_505 = -> isa.nonempty.text 'A'         ), true\n      @eq ( Ωit_506 = -> isa.nonempty.text 4           ), false\n      #.......................................................................................................\n      @eq ( Ωit_507 = -> isa.empty []                  ), true\n      @eq ( Ωit_508 = -> isa.empty ''                  ), true\n      @eq ( Ωit_509 = -> isa.empty new Set()           ), true\n      @eq ( Ωit_510 = -> isa.empty [ 1, ]              ), false\n      @eq ( Ωit_511 = -> isa.empty 'A'                 ), false\n      @eq ( Ωit_512 = -> isa.empty new Set 'abc'       ), false\n      #.......................................................................................................\n      @eq ( Ωit_513 = -> validate.empty []                  ), []\n      @eq ( Ωit_514 = -> validate.empty ''                  ), ''\n      @eq ( Ωit_515 = -> validate.empty new Set()           ), new Set()\n      @throws ( Ωit_516 = -> validate.empty [ 1, ]              ), /expected a empty, got a list/\n      @throws ( Ωit_517 = -> validate.empty 'A'                 ), /expected a empty, got a text/\n      @throws ( Ωit_518 = -> validate.empty new Set 'abc'       ), /expected a empty, got a set/\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  can_use_optional_with_qualifiers: ->\n    { Intertype_minimal } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      declarations =\n        'empty':            { role: 'qualifier', }\n        'nonempty':         { role: 'qualifier', }\n        'empty.list':       ( x ) -> ( @isa.list  x ) and ( x.length  is  0 )\n        'empty.text':       ( x ) -> ( @isa.text  x ) and ( x.length  is  0 )\n        'empty.set':        ( x ) -> ( @isa.set   x ) and ( x.size    is  0 )\n        'nonempty.list':    ( x ) -> ( @isa.list  x ) and ( x.length  >   0 )\n        'nonempty.text':    ( x ) -> ( @isa.text  x ) and ( x.length  >   0 )\n        'nonempty.set':     ( x ) -> ( @isa.set   x ) and ( x.size    >   0 )\n      types         = new Intertype_minimal sample_declarations, declarations\n      { isa\n        validate  } = types\n      @eq ( Ωit_519 = -> isa.optional.empty.list    []          ), true\n      @eq ( Ωit_520 = -> isa.optional.empty.list    [ 'A', ]    ), false\n      @eq ( Ωit_521 = -> isa.optional.empty.list    4           ), false\n      @eq ( Ωit_522 = -> isa.optional.nonempty.list []          ), false\n      @eq ( Ωit_523 = -> isa.optional.nonempty.list [ 'A', ]    ), true\n      @eq ( Ωit_524 = -> isa.optional.nonempty.list 4           ), false\n      @eq ( Ωit_525 = -> isa.optional.empty.text    ''          ), true\n      @eq ( Ωit_526 = -> isa.optional.empty.text    'A'         ), false\n      @eq ( Ωit_527 = -> isa.optional.empty.text    4           ), false\n      @eq ( Ωit_528 = -> isa.optional.nonempty.text ''          ), false\n      @eq ( Ωit_529 = -> isa.optional.nonempty.text 'A'         ), true\n      @eq ( Ωit_530 = -> isa.optional.nonempty.text 4           ), false\n      #.......................................................................................................\n      @eq ( Ωit_531 = -> isa.optional.empty []                  ), true\n      @eq ( Ωit_532 = -> isa.optional.empty ''                  ), true\n      @eq ( Ωit_533 = -> isa.optional.empty new Set()           ), true\n      @eq ( Ωit_534 = -> isa.optional.empty [ 1, ]              ), false\n      @eq ( Ωit_535 = -> isa.optional.empty 'A'                 ), false\n      @eq ( Ωit_536 = -> isa.optional.empty new Set 'abc'       ), false\n      #.......................................................................................................\n      @eq ( Ωit_537 = -> validate.optional.empty []                   ), []\n      @eq ( Ωit_538 = -> validate.optional.empty ''                   ), ''\n      @eq ( Ωit_539 = -> validate.optional.empty new Set()            ), new Set()\n      @eq ( Ωit_540 = -> validate.optional.empty.list  []             ), []\n      @eq ( Ωit_541 = -> validate.optional.empty.text  ''             ), ''\n      @eq ( Ωit_542 = -> validate.optional.empty.set   new Set()      ), new Set()\n      @throws ( Ωit_543 = -> validate.optional.empty [ 1, ]           ), /expected an optional empty, got a list/\n      @throws ( Ωit_544 = -> validate.optional.empty 'A'              ), /expected an optional empty, got a text/\n      @throws ( Ωit_545 = -> validate.optional.empty new Set 'abc'    ), /expected an optional empty, got a set/\n      #.......................................................................................................\n      @eq ( Ωit_546 = -> isa.optional.empty []                        ), true\n      @eq ( Ωit_547 = -> isa.optional.empty ''                        ), true\n      @eq ( Ωit_548 = -> isa.optional.empty new Set()                 ), true\n      @eq ( Ωit_549 = -> isa.optional.empty [ 1, ]                    ), false\n      @eq ( Ωit_550 = -> isa.optional.empty 'A'                       ), false\n      @eq ( Ωit_551 = -> isa.optional.empty new Set 'abc'             ), false\n      @eq ( Ωit_552 = -> validate.optional.empty       null           ), null\n      @eq ( Ωit_553 = -> validate.optional.empty.list  null           ), null\n      @eq ( Ωit_554 = -> validate.optional.empty.text  null           ), null\n      @eq ( Ωit_555 = -> validate.optional.empty.set   null           ), null\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  use_fields_to_declare_qualifiers: ->\n    { Intertype_minimal } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      declarations =\n        empty:\n          role:     'qualifier'\n          fields:\n            list:     ( x ) -> ( @isa.list  x ) and ( x.length  is  0 )\n            text:     ( x ) -> ( @isa.text  x ) and ( x.length  is  0 )\n            set:      ( x ) -> ( @isa.set   x ) and ( x.size    is  0 )\n        nonempty:\n          role:     'qualifier'\n          fields:\n            list:     ( x ) -> ( @isa.list  x ) and ( x.length  >   0 )\n            text:     ( x ) -> ( @isa.text  x ) and ( x.length  >   0 )\n            set:      ( x ) -> ( @isa.set   x ) and ( x.size    >   0 )\n      #.......................................................................................................\n      types         = new Intertype_minimal sample_declarations, declarations\n      { isa\n        validate  } = types\n      #.......................................................................................................\n      @eq ( Ωit_556 = -> isa.empty.list    []          ), true\n      @eq ( Ωit_557 = -> isa.empty.list    [ 'A', ]    ), false\n      @eq ( Ωit_558 = -> isa.empty.list    4           ), false\n      @eq ( Ωit_559 = -> isa.nonempty.list []          ), false\n      @eq ( Ωit_560 = -> isa.nonempty.list [ 'A', ]    ), true\n      @eq ( Ωit_561 = -> isa.nonempty.list 4           ), false\n      @eq ( Ωit_562 = -> isa.empty.text    ''          ), true\n      @eq ( Ωit_563 = -> isa.empty.text    'A'         ), false\n      @eq ( Ωit_564 = -> isa.empty.text    4           ), false\n      @eq ( Ωit_565 = -> isa.nonempty.text ''          ), false\n      @eq ( Ωit_566 = -> isa.nonempty.text 'A'         ), true\n      @eq ( Ωit_567 = -> isa.nonempty.text 4           ), false\n      #.......................................................................................................\n      @eq ( Ωit_568 = -> isa.empty []                  ), true\n      @eq ( Ωit_569 = -> isa.empty ''                  ), true\n      @eq ( Ωit_570 = -> isa.empty new Set()           ), true\n      @eq ( Ωit_571 = -> isa.empty [ 1, ]              ), false\n      @eq ( Ωit_572 = -> isa.empty 'A'                 ), false\n      @eq ( Ωit_573 = -> isa.empty new Set 'abc'       ), false\n      #.......................................................................................................\n      @eq ( Ωit_574 = -> validate.empty []                   ), []\n      @eq ( Ωit_575 = -> validate.empty ''                   ), ''\n      @eq ( Ωit_576 = -> validate.empty new Set()            ), new Set()\n      @eq ( Ωit_577 = -> validate.empty.list  []             ), []\n      @eq ( Ωit_578 = -> validate.empty.text  ''             ), ''\n      @eq ( Ωit_579 = -> validate.empty.set   new Set()      ), new Set()\n      @throws ( Ωit_580 = -> validate.empty [ 1, ]           ), /expected a empty, got a list/\n      @throws ( Ωit_581 = -> validate.empty 'A'              ), /expected a empty, got a text/\n      @throws ( Ωit_582 = -> validate.empty new Set 'abc'    ), /expected a empty, got a set/\n      #.......................................................................................................\n      @eq ( Ωit_583 = -> isa.empty []                        ), true\n      @eq ( Ωit_584 = -> isa.empty ''                        ), true\n      @eq ( Ωit_585 = -> isa.empty new Set()                 ), true\n      @eq ( Ωit_586 = -> isa.empty [ 1, ]                    ), false\n      @eq ( Ωit_587 = -> isa.empty 'A'                       ), false\n      @eq ( Ωit_588 = -> isa.empty new Set 'abc'             ), false\n      @throws ( Ωit_589 = -> validate.empty       null           ), /expected a empty, got a null/\n      @throws ( Ωit_590 = -> validate.empty.list  null           ), /expected a empty.list, got a null/\n      @throws ( Ωit_591 = -> validate.empty.text  null           ), /expected a empty.text, got a null/\n      @throws ( Ωit_592 = -> validate.empty.set   null           ), /expected a empty.set, got a null/\n      #.......................................................................................................\n      @eq ( Ωit_593 = -> isa.optional.empty.list    []          ), true\n      @eq ( Ωit_594 = -> isa.optional.empty.list    [ 'A', ]    ), false\n      @eq ( Ωit_595 = -> isa.optional.empty.list    4           ), false\n      @eq ( Ωit_596 = -> isa.optional.nonempty.list []          ), false\n      @eq ( Ωit_597 = -> isa.optional.nonempty.list [ 'A', ]    ), true\n      @eq ( Ωit_598 = -> isa.optional.nonempty.list 4           ), false\n      @eq ( Ωit_599 = -> isa.optional.empty.text    ''          ), true\n      @eq ( Ωit_600 = -> isa.optional.empty.text    'A'         ), false\n      @eq ( Ωit_601 = -> isa.optional.empty.text    4           ), false\n      @eq ( Ωit_602 = -> isa.optional.nonempty.text ''          ), false\n      @eq ( Ωit_603 = -> isa.optional.nonempty.text 'A'         ), true\n      @eq ( Ωit_604 = -> isa.optional.nonempty.text 4           ), false\n      #.......................................................................................................\n      @eq ( Ωit_605 = -> isa.optional.empty []                  ), true\n      @eq ( Ωit_606 = -> isa.optional.empty ''                  ), true\n      @eq ( Ωit_607 = -> isa.optional.empty new Set()           ), true\n      @eq ( Ωit_608 = -> isa.optional.empty [ 1, ]              ), false\n      @eq ( Ωit_609 = -> isa.optional.empty 'A'                 ), false\n      @eq ( Ωit_610 = -> isa.optional.empty new Set 'abc'       ), false\n      #.......................................................................................................\n      @eq ( Ωit_611 = -> validate.optional.empty []                   ), []\n      @eq ( Ωit_612 = -> validate.optional.empty ''                   ), ''\n      @eq ( Ωit_613 = -> validate.optional.empty new Set()            ), new Set()\n      @eq ( Ωit_614 = -> validate.optional.empty.list  []             ), []\n      @eq ( Ωit_615 = -> validate.optional.empty.text  ''             ), ''\n      @eq ( Ωit_616 = -> validate.optional.empty.set   new Set()      ), new Set()\n      @throws ( Ωit_617 = -> validate.optional.empty [ 1, ]           ), /expected an optional empty, got a list/\n      @throws ( Ωit_618 = -> validate.optional.empty 'A'              ), /expected an optional empty, got a text/\n      @throws ( Ωit_619 = -> validate.optional.empty new Set 'abc'    ), /expected an optional empty, got a set/\n      #.......................................................................................................\n      @eq ( Ωit_620 = -> isa.optional.empty []                        ), true\n      @eq ( Ωit_621 = -> isa.optional.empty ''                        ), true\n      @eq ( Ωit_622 = -> isa.optional.empty new Set()                 ), true\n      @eq ( Ωit_623 = -> isa.optional.empty [ 1, ]                    ), false\n      @eq ( Ωit_624 = -> isa.optional.empty 'A'                       ), false\n      @eq ( Ωit_625 = -> isa.optional.empty new Set 'abc'             ), false\n      @eq ( Ωit_626 = -> validate.optional.empty       null           ), null\n      @eq ( Ωit_627 = -> validate.optional.empty.list  null           ), null\n      @eq ( Ωit_628 = -> validate.optional.empty.text  null           ), null\n      @eq ( Ωit_629 = -> validate.optional.empty.set   null           ), null\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  builtin_qualifiers: ->\n    { Intertype } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      types   = new Intertype()\n      { isa\n        validate\n        evaluate\n        type_of   } = types\n      #.......................................................................................................\n      @eq ( Ωit_630 = -> isa.empty.list    []                             ), true\n      @eq ( Ωit_631 = -> isa.empty.list    [ 'A', ]                       ), false\n      @eq ( Ωit_632 = -> isa.empty.list    4                              ), false\n      @eq ( Ωit_633 = -> isa.nonempty.list []                             ), false\n      @eq ( Ωit_634 = -> isa.nonempty.list [ 'A', ]                       ), true\n      @eq ( Ωit_635 = -> isa.nonempty.list 4                              ), false\n      @eq ( Ωit_636 = -> isa.empty.text    ''                             ), true\n      @eq ( Ωit_637 = -> isa.empty.text    'A'                            ), false\n      @eq ( Ωit_638 = -> isa.empty.text    4                              ), false\n      @eq ( Ωit_639 = -> isa.nonempty.text ''                             ), false\n      @eq ( Ωit_640 = -> isa.nonempty.text 'A'                            ), true\n      @eq ( Ωit_641 = -> isa.nonempty.text 4                              ), false\n      @eq ( Ωit_642 = -> isa.empty { list: [], text: '', set: new Set() } ), false\n      #.......................................................................................................\n      @eq ( Ωit_643 = -> isa.empty []                                     ), true\n      @eq ( Ωit_644 = -> isa.empty ''                                     ), true\n      @eq ( Ωit_645 = -> isa.empty new Set()                              ), true\n      @eq ( Ωit_646 = -> isa.empty /d/                                    ), false\n      @eq ( Ωit_647 = -> isa.empty [ 1, ]                                 ), false\n      @eq ( Ωit_648 = -> isa.empty 'A'                                    ), false\n      @eq ( Ωit_649 = -> isa.empty new Set 'abc'                          ), false\n      #.......................................................................................................\n      @eq ( Ωit_650 = -> validate.empty []                                ), []\n      @eq ( Ωit_651 = -> validate.empty ''                                ), ''\n      @eq ( Ωit_652 = -> validate.empty new Set()                         ), new Set()\n      @throws ( Ωit_653 = -> validate.empty [ 1, ]                        ), /expected a empty, got a list/\n      @throws ( Ωit_654 = -> validate.empty 'A'                           ), /expected a empty, got a text/\n      @throws ( Ωit_655 = -> validate.empty new Set 'abc'                 ), /expected a empty, got a set/\n      #.......................................................................................................\n      @eq ( Ωit_656 = -> type_of []                                       ), 'list'\n      @eq ( Ωit_657 = -> type_of ''                                       ), 'text'\n      @eq ( Ωit_658 = -> type_of new Set()                                ), 'set'\n      @eq ( Ωit_659 = -> type_of [ 'a', ]                                 ), 'list'\n      @eq ( Ωit_660 = -> type_of 'a'                                      ), 'text'\n      @eq ( Ωit_661 = -> type_of new Set 'a'                              ), 'set'\n      #.......................................................................................................\n      @eq ( Ωit_662 = -> type_of 1234                                     ), 'float'\n      @eq ( Ωit_663 = -> isa.integer 1234                                 ), true\n      @eq ( Ωit_664 = -> isa.positive.integer 1234                        ), true\n      @eq ( Ωit_665 = -> isa.negative.integer 1234                        ), false\n      @eq ( Ωit_666 = -> isa.negative.integer -1234                       ), true\n      @eq ( Ωit_667 = -> isa.negative.integer -Infinity                   ), false\n      @eq ( Ωit_668 = -> isa.negative.integer -12.34                      ), false\n      #.......................................................................................................\n      @eq ( Ωit_669 = -> isa.positive.float     +4                        ), true\n      @eq ( Ωit_670 = -> isa.positive.integer   +4                        ), true\n      @eq ( Ωit_671 = -> isa.positive.infinity  +4                        ), false\n      @eq ( Ωit_672 = -> isa.negative.float     +4                        ), false\n      @eq ( Ωit_673 = -> isa.negative.integer   +4                        ), false\n      @eq ( Ωit_674 = -> isa.negative.infinity  +4                        ), false\n      @eq ( Ωit_675 = -> isa.posnaught.float    +4                        ), true\n      @eq ( Ωit_676 = -> isa.posnaught.integer  +4                        ), true\n      @eq ( Ωit_677 = -> isa.posnaught.infinity +4                        ), false\n      @eq ( Ωit_678 = -> isa.negnaught.float    +4                        ), false\n      @eq ( Ωit_679 = -> isa.negnaught.integer  +4                        ), false\n      @eq ( Ωit_680 = -> isa.negnaught.infinity +4                        ), false\n      #.......................................................................................................\n      @eq ( Ωit_681 = -> isa.positive.float      0                        ), false\n      @eq ( Ωit_682 = -> isa.positive.integer    0                        ), false\n      @eq ( Ωit_683 = -> isa.positive.infinity   0                        ), false\n      @eq ( Ωit_684 = -> isa.negative.float      0                        ), false\n      @eq ( Ωit_685 = -> isa.negative.integer    0                        ), false\n      @eq ( Ωit_686 = -> isa.negative.infinity   0                        ), false\n      @eq ( Ωit_687 = -> isa.posnaught.float     0                        ), true\n      @eq ( Ωit_688 = -> isa.posnaught.integer   0                        ), true\n      @eq ( Ωit_689 = -> isa.posnaught.infinity  0                        ), false\n      @eq ( Ωit_690 = -> isa.negnaught.float     0                        ), true\n      @eq ( Ωit_691 = -> isa.negnaught.integer   0                        ), true\n      @eq ( Ωit_692 = -> isa.negnaught.infinity  0                        ), false\n      #.......................................................................................................\n      @eq ( Ωit_693 = -> isa.positive.float      Infinity                 ), false\n      @eq ( Ωit_694 = -> isa.positive.integer    Infinity                 ), false\n      @eq ( Ωit_695 = -> isa.positive.infinity   Infinity                 ), true\n      @eq ( Ωit_696 = -> isa.negative.float      Infinity                 ), false\n      @eq ( Ωit_697 = -> isa.negative.integer    Infinity                 ), false\n      @eq ( Ωit_698 = -> isa.negative.infinity   Infinity                 ), false\n      @eq ( Ωit_699 = -> isa.posnaught.float     Infinity                 ), false\n      @eq ( Ωit_700 = -> isa.posnaught.integer   Infinity                 ), false\n      @eq ( Ωit_701 = -> isa.posnaught.infinity  Infinity                 ), true\n      @eq ( Ωit_702 = -> isa.negnaught.float     Infinity                 ), false\n      @eq ( Ωit_703 = -> isa.negnaught.integer   Infinity                 ), false\n      @eq ( Ωit_704 = -> isa.negnaught.infinity  Infinity                 ), false\n      #.......................................................................................................\n      @eq ( Ωit_705 = -> isa.positive.float      +4.3                     ), true\n      @eq ( Ωit_706 = -> isa.positive.integer    +4.3                     ), false\n      @eq ( Ωit_707 = -> isa.positive.infinity   +4.3                     ), false\n      @eq ( Ωit_708 = -> isa.negative.float      +4.3                     ), false\n      @eq ( Ωit_709 = -> isa.negative.integer    +4.3                     ), false\n      @eq ( Ωit_710 = -> isa.negative.infinity   +4.3                     ), false\n      @eq ( Ωit_711 = -> isa.posnaught.float     +4.3                     ), true\n      @eq ( Ωit_712 = -> isa.posnaught.integer   +4.3                     ), false\n      @eq ( Ωit_713 = -> isa.posnaught.infinity  +4.3                     ), false\n      @eq ( Ωit_714 = -> isa.negnaught.float     +4.3                     ), false\n      @eq ( Ωit_715 = -> isa.negnaught.integer   +4.3                     ), false\n      @eq ( Ωit_716 = -> isa.negnaught.infinity  +4.3                     ), false\n      #.......................................................................................................\n      @eq ( Ωit_717 = -> isa.positive.float      -4.3                     ), false\n      @eq ( Ωit_718 = -> isa.positive.integer    -4.3                     ), false\n      @eq ( Ωit_719 = -> isa.positive.infinity   -4.3                     ), false\n      @eq ( Ωit_720 = -> isa.negative.float      -4.3                     ), true\n      @eq ( Ωit_721 = -> isa.negative.integer    -4.3                     ), false\n      @eq ( Ωit_722 = -> isa.negative.infinity   -4.3                     ), false\n      @eq ( Ωit_723 = -> isa.posnaught.float     -4.3                     ), false\n      @eq ( Ωit_724 = -> isa.posnaught.integer   -4.3                     ), false\n      @eq ( Ωit_725 = -> isa.posnaught.infinity  -4.3                     ), false\n      @eq ( Ωit_726 = -> isa.negnaught.float     -4.3                     ), true\n      @eq ( Ωit_727 = -> isa.negnaught.integer   -4.3                     ), false\n      @eq ( Ωit_728 = -> isa.negnaught.infinity  -4.3                     ), false\n      #.......................................................................................................\n      @eq ( Ωit_729 = -> isa.posnaught           +Infinity                ), true\n      @eq ( Ωit_730 = -> isa.negnaught           +Infinity                ), false\n      @eq ( Ωit_731 = -> isa.posnaught           -Infinity                ), false\n      @eq ( Ωit_732 = -> isa.negnaught           -Infinity                ), true\n      @eq ( Ωit_733 = -> isa.posnaught           0                        ), true\n      @eq ( Ωit_734 = -> isa.negnaught           0                        ), true\n      @eq ( Ωit_735 = -> isa.posnaught           0                        ), true\n      @eq ( Ωit_736 = -> isa.negnaught           0                        ), true\n      #.......................................................................................................\n      @eq ( Ωit_737 = -> isa.frozen         Object.freeze {}              ), true\n      @eq ( Ωit_738 = -> isa.frozen         Object.freeze []              ), true\n      @eq ( Ωit_739 = -> isa.frozen                       {}              ), false\n      @eq ( Ωit_740 = -> isa.frozen                       []              ), false\n      @eq ( Ωit_741 = -> isa.frozen.object  Object.freeze {}              ), true\n      @eq ( Ωit_742 = -> isa.frozen.list    Object.freeze []              ), true\n      @eq ( Ωit_743 = -> isa.frozen.object                {}              ), false\n      @eq ( Ωit_744 = -> isa.frozen.list                  []              ), false\n      #.......................................................................................................\n      @eq ( Ωit_745 = -> isa.odd.integer                  []              ), false\n      @eq ( Ωit_746 = -> isa.odd.integer                  102.4           ), false\n      @eq ( Ωit_747 = -> isa.odd.integer                  9997            ), true\n      @eq ( Ωit_748 = -> isa.odd.integer                  '1024'          ), false\n      @eq ( Ωit_749 = -> isa.odd.integer                  0               ), false\n      @eq ( Ωit_750 = -> isa.odd.integer                  1024            ), false\n      @eq ( Ωit_751 = -> isa.odd.positive.integer         1024            ), false\n      @eq ( Ωit_752 = -> isa.odd.positive.integer         102.4           ), false\n      @eq ( Ωit_753 = -> isa.odd.positive.integer         1023            ), true\n      @eq ( Ωit_754 = -> isa.odd.positive.integer         -1023           ), false\n      @eq ( Ωit_755 = -> isa.odd.positive.integer         103.4           ), false\n      @eq ( Ωit_756 = -> isa.even.integer                 []              ), false\n      @eq ( Ωit_757 = -> isa.even.integer                 102.4           ), false\n      @eq ( Ωit_758 = -> isa.even.integer                 9997            ), false\n      @eq ( Ωit_759 = -> isa.even.integer                 '1024'          ), false\n      @eq ( Ωit_760 = -> isa.even.integer                 0               ), true\n      @eq ( Ωit_761 = -> isa.even.integer                 1024            ), true\n      @eq ( Ωit_762 = -> isa.even.positive.integer        1024            ), true\n      @eq ( Ωit_763 = -> isa.even.positive.integer        0               ), false\n      @eq ( Ωit_764 = -> isa.even.posnaught.integer       1024            ), true\n      @eq ( Ωit_765 = -> isa.even.posnaught.integer       0               ), true\n      #.......................................................................................................\n      @eq ( Ωit_766 = -> isa.even.posnaught               0               ), true\n      @eq ( Ωit_767 = -> isa.even.posnaught               1               ), false\n      @eq ( Ωit_768 = -> isa.even.posnaught               2               ), true\n      #.......................................................................................................\n      @eq ( Ωit_769 = -> isa.cardinal                     -1024           ), false\n      @eq ( Ωit_770 = -> isa.cardinal                     10              ), true\n      @eq ( Ωit_771 = -> isa.cardinal                     123.7           ), false\n      @eq ( Ωit_772 = -> isa.cardinal                     0               ), true\n      @eq ( Ωit_773 = -> isa.cardinal                     1               ), true\n      @eq ( Ωit_774 = -> isa.cardinal                     Infinity        ), false\n      @eq ( Ωit_775 = -> evaluate.cardinal                Infinity        ), { cardinal: false }\n      @eq ( Ωit_776 = -> evaluate.posnaught.integer       Infinity        ), { 'posnaught.integer': false }\n      #.......................................................................................................\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  disallow_rhs_optional: ->\n    { Intertype } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      ### TAINT observe the out-comment messages would perhaps make more sense as they are more specific ###\n      @eq ( Ωit_777 = -> ( new Intertype() ).declare { foo: 'float', } ), null\n      @eq ( Ωit_778 = -> ( new Intertype() ).declare { foo: 'text',  } ), null\n      # ( new Intertype() ).declare { foo: 'optional', }\n      @throws ( Ωit_779 = -> ( new Intertype() ).declare { foo: 'optional', }        ), /illegal use of 'optional' in declaration of type 'foo'/\n      @throws ( Ωit_780 = -> ( new Intertype() ).declare { foo: 'qqq', }             ), /unknown type 'qqq'/\n      @throws ( Ωit_781 = -> ( new Intertype() ).declare { foo: 'optional.float', }  ), /illegal use of 'optional' in declaration of type 'foo'/\n      @throws ( Ωit_782 = -> ( new Intertype() ).declare { foo: 'anything.float', }  ), /illegal use of basetype 'anything' in declaration of type 'foo'/\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  parallel_behavior_of_isa_validate_mandatory_and_optional: ->\n    { Intertype } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      { isa\n        validate  } = new Intertype\n          normalfloat: ( ( x ) -> ( @isa.float x ) and ( 0 <= x <= 1 ) )\n      @eq ( Ωit_783 = -> isa.normalfloat                     0     ), true\n      @eq ( Ωit_784 = -> isa.normalfloat                     null  ), false\n      @eq ( Ωit_785 = -> isa.normalfloat                     -1    ), false\n      @eq ( Ωit_786 = -> isa.normalfloat                     '?'   ), false\n      @eq ( Ωit_787 = -> isa.optional.normalfloat            0     ), true\n      @eq ( Ωit_788 = -> isa.optional.normalfloat            null  ), true\n      @eq ( Ωit_789 = -> isa.optional.normalfloat            -1    ), false\n      @eq ( Ωit_790 = -> isa.optional.normalfloat            '?'   ), false\n      @eq ( Ωit_791 = -> validate.normalfloat                0     ), 0\n      @eq ( Ωit_792 = -> validate.optional.normalfloat       0     ), 0\n      @eq ( Ωit_793 = -> validate.optional.normalfloat       null  ), null\n      @throws ( Ωit_794 = -> validate.normalfloat           null ), /expected a normalfloat, got a null/\n      @throws ( Ωit_795 = -> validate.normalfloat           -1   ), /expected a normalfloat, got a float/\n      @throws ( Ωit_796 = -> validate.normalfloat           '?'  ), /expected a normalfloat, got a text/\n      @throws ( Ωit_797 = -> validate.optional.normalfloat  -1   ), /expected an optional normalfloat, got a float/\n      @throws ( Ωit_798 = -> validate.optional.normalfloat  '?'  ), /expected an optional normalfloat, got a text/\n      return null\n    #.........................................................................................................\n    do =>\n      my_types =\n        'quantity':     'object'\n        'quantity.q':   'float'\n        'quantity.u':   'text'\n        'foo':          'object'\n        'foo.bar':      'object'\n        'foo.bar.baz':  'float'\n      { isa\n        validate  } = types = new Intertype my_types\n      @eq ( Ωit_799 = -> isa.quantity            { q: 1, u: 'm', }   ), true\n      @eq ( Ωit_800 = -> isa.quantity            null                ), false\n      @eq ( Ωit_801 = -> isa.optional.quantity   { q: 2, u: 'm', }   ), true\n      @eq ( Ωit_802 = -> isa.optional.quantity   null                ), true\n      @eq ( Ωit_803 = -> validate.quantity               { q: 3, u: 'm', } ), { q: 3, u: 'm', }\n      @eq ( Ωit_804 = -> validate.optional.quantity      { q: 4, u: 'm', } ), { q: 4, u: 'm', }\n      @eq ( Ωit_805 = -> validate.optional.quantity.q    null  ), null\n      @eq ( Ωit_806 = -> validate.optional.quantity.q    111   ), 111\n      @eq ( Ωit_807 = -> isa.quantity                     null               ), false\n      @eq ( Ωit_808 = -> isa.quantity                     -1                 ), false\n      @eq ( Ωit_809 = -> isa.quantity                     '?'                ), false\n      @eq ( Ωit_810 = -> isa.quantity.q                   '?'                ), false\n      @eq ( Ωit_811 = -> isa.quantity.q                   3                  ), true\n      @eq ( Ωit_812 = -> isa.optional.quantity            { q: 1, u: 'm', }  ), true\n      @eq ( Ωit_813 = -> isa.optional.quantity            null               ), true\n      @eq ( Ωit_814 = -> isa.optional.quantity            -1                 ), false\n      @eq ( Ωit_815 = -> isa.optional.quantity            '?'                ), false\n      @eq ( Ωit_816 = -> isa.optional.quantity.q          '?'                ), false\n      @eq ( Ωit_817 = -> isa.optional.quantity.q          3                  ), true\n      @eq ( Ωit_818 = -> validate.quantity                { q: 1, u: 'm', }  ), { q: 1, u: 'm', }\n      @eq ( Ωit_819 = -> validate.optional.quantity       { q: 1, u: 'm', }  ), { q: 1, u: 'm', }\n      @eq ( Ωit_820 = -> validate.optional.quantity       null               ), null\n      @throws ( Ωit_821 = -> validate.quantity           { q: 5, }  ), /expected a quantity, got a object/ ### TAINT message should be more specific ###\n      @throws ( Ωit_822 = -> validate.quantity            null      ), /expected a quantity, got a null/\n      @throws ( Ωit_823 = -> validate.quantity            -1        ), /expected a quantity, got a float/\n      @throws ( Ωit_824 = -> validate.quantity            '?'       ), /expected a quantity, got a text/\n      @throws ( Ωit_825 = -> validate.quantity            { q: 1, } ), /expected a quantity, got a object/ ### TAINT message should be more specific ###\n      @throws ( Ωit_826 = -> validate.optional.quantity   -1        ), /expected an optional quantity, got a float/\n      @throws ( Ωit_827 = -> validate.optional.quantity   { q: 1, } ), /expected an optional quantity, got a object/ ### TAINT message should be more specific ###\n      @throws ( Ωit_828 = -> validate.optional.quantity.q { q: 1, } ), /expected an optional quantity.q, got a object/\n      @throws ( Ωit_829 = -> validate.optional.quantity.q 3, 4, 5   ), /method 'validate.optional.quantity.q' expects 1 arguments, got 3/\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  declaration_role_field: ->\n    { Intertype } = require '../../../apps/intertype'\n    #.........................................................................................................\n    do =>\n      { declarations  } = new Intertype()\n      @eq ( Ωit_830 = -> declarations.float.role     ), 'usertype'\n      @eq ( Ωit_831 = -> declarations.null.role      ), 'basetype'\n      @eq ( Ωit_832 = -> declarations.anything.role  ), 'basetype'\n      @eq ( Ωit_833 = -> declarations.unknown.role   ), 'basetype'\n      @eq ( Ωit_834 = -> declarations.optional.role  ), 'optional'\n      # @throws T, /expected a normalfloat, got a null/,             -> validate.normalfloat           null\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  minimal_type_of_results: ->\n    { Intertype_minimal } = require '../../../apps/intertype'\n    { isa\n      validate\n      create\n      declare\n      type_of           } = new Intertype_minimal()\n    #.........................................................................................................\n    do =>\n      @eq ( Ωit_835 = -> type_of null              ), 'null'\n      @eq ( Ωit_836 = -> type_of undefined         ), 'undefined'\n      @eq ( Ωit_837 = -> type_of +Infinity         ), 'unknown'\n      @eq ( Ωit_838 = -> type_of 4                 ), 'unknown'\n      return null\n    #.........................................................................................................\n    do =>\n      @eq ( Ωit_839 = -> isa.anything   1          ), true\n      @eq ( Ωit_840 = -> isa.nothing    1          ), false\n      @eq ( Ωit_841 = -> isa.something  1          ), true\n      @eq ( Ωit_842 = -> isa.unknown    1          ), true\n      return null\n    #.........................................................................................................\n    do =>\n      @eq ( Ωit_843 = -> isa.anything   null       ), true\n      @eq ( Ωit_844 = -> isa.nothing    null       ), true\n      @eq ( Ωit_845 = -> isa.something  null       ), false\n      @eq ( Ωit_846 = -> isa.unknown    null       ), false\n      return null\n    #.........................................................................................................\n    do =>\n      @eq ( Ωit_847 = -> isa.anything   undefined  ), true\n      @eq ( Ωit_848 = -> isa.nothing    undefined  ), true\n      @eq ( Ωit_849 = -> isa.something  undefined  ), false\n      @eq ( Ωit_850 = -> isa.unknown    undefined  ), false\n      return null\n    #.........................................................................................................\n    do =>\n      @throws ( Ωit_851 = -> isa.optional 1      ), /`optional` is not a legal type for `isa` methods/\n      @throws ( Ωit_852 = -> validate.optional 1 ), /`optional` is not a legal type for `validate` methods/\n      @throws ( Ωit_853 = -> create.optional 1   ), /`optional` is not a legal type for `create` methods/\n      return null\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  can_use_null_and_undefined_in_record_create_methods: ->\n    { Intertype, } = require '../../../apps/intertype'\n    types = new Intertype()\n    types.declare\n      foobar:\n        fields:\n          foo:    'integer'\n          bar:    'integer'\n        template:\n          foo:    4\n          bar:    5\n    @eq ( Ωit_854 = -> types.create.foobar { foo: 8, bar: 9, } ), { foo: 8, bar: 9, }\n    @eq ( Ωit_855 = -> types.create.foobar { foo: 8,         } ), { foo: 8, bar: 5, }\n    @eq ( Ωit_856 = -> types.create.foobar { foo: 4, bar: 5, } ), { foo: 4, bar: 5, }\n    @eq ( Ωit_857 = -> types.create.foobar {                 } ), { foo: 4, bar: 5, }\n    @eq ( Ωit_858 = -> types.create.foobar undefined           ), { foo: 4, bar: 5, }\n    @eq ( Ωit_859 = -> types.create.foobar null                ), { foo: 4, bar: 5, }\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  can_use_values_of_unknown_type: ->\n    do =>\n      { Intertype_minimal, } = require '../../../apps/intertype'\n      types = new Intertype_minimal()\n      types.declare thirtyone: ( x ) -> x is 31\n      @eq ( Ωit_860 = -> types.type_of 31        ), 'thirtyone'\n      @eq ( Ωit_861 = -> types.type_of 32        ), 'unknown'\n      @eq ( Ωit_862 = -> types.isa.thirtyone 31  ), true\n      @eq ( Ωit_863 = -> types.isa.thirtyone 32  ), false\n      @eq ( Ωit_864 = -> types.type_of new Map() ), 'unknown'\n      return null\n    #.......................................................................................................\n    do =>\n      { Intertype_minimal, } = require '../../../apps/intertype'\n      types = new Intertype_minimal()\n      types.declare thirtyone:  ( x ) -> ( @isa.float x ) and ( x is 31 )\n      ### this used to be a problem        ^^^^ ###\n      types.declare float:      ( x ) -> Number.isFinite x\n      @eq ( Ωit_865 = -> types.type_of 31        ), 'thirtyone'\n      @eq ( Ωit_866 = -> types.type_of 32        ), 'float'\n      @eq ( Ωit_867 = -> types.isa.thirtyone 31  ), true\n      @eq ( Ωit_868 = -> types.isa.thirtyone 32  ), false\n      @eq ( Ωit_869 = -> types.type_of new Map() ), 'unknown'\n      return null\n    #.......................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  advanced_types: ->\n    { Intertype, } = require '../../../apps/intertype'\n    types = new Intertype()\n    @eq ( Ωit_870 = -> types.type_of new Set() ), 'set'\n    @eq ( Ωit_871 = -> types.type_of new Map() ), 'map'\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  kinds_and_roles: ->\n    { Intertype, } = require '../../../apps/intertype'\n    types = new Intertype()\n    types.declare\n      foo:\n        fields:\n          d:      'integer'\n          e:      'float'\n      bar:        'foo'\n    @eq ( Ωit_872 = -> types.declarations.integer.kind  ), 'float'\n    @eq ( Ωit_873 = -> types.declarations.foo.type      ), 'foo'\n    @eq ( Ωit_874 = -> types.declarations.foo.kind      ), 'object'\n    @eq ( Ωit_875 = -> types.declarations.foo.role      ), 'usertype'\n    @eq ( Ωit_876 = -> types.declarations.bar.type      ), 'bar'\n    @eq ( Ωit_877 = -> types.declarations.bar.kind      ), 'foo'\n    @eq ( Ωit_878 = -> types.declarations.bar.role      ), 'usertype'\n    return null\n\n  #=========================================================================================================\n  Naming:\n\n    #-------------------------------------------------------------------------------------------------------\n    type: ->\n      { Intertype, } = require '../../../apps/intertype'\n      t2 = new Intertype()\n      for type, declaration of t2.declarations\n        @eq ( Ωit_879 = -> declaration.type is type ), true\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    validate_methods: ->\n      { Intertype, } = require '../../../apps/intertype'\n      t2 = new Intertype()\n      @eq ( Ωit_880 = -> t2.validate.asyncfunction.name          ), 'validate.asyncfunction'\n      @eq ( Ωit_881 = -> t2.validate.optional.asyncfunction.name ), 'validate.optional.asyncfunction'\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    isa_methods: ->\n      { Intertype, } = require '../../../apps/intertype'\n      t2 = new Intertype()\n      @eq ( Ωit_882 = -> t2.isa.asyncfunction.name               ), 'isa.asyncfunction'\n      @eq ( Ωit_883 = -> t2.isa.optional.asyncfunction.name      ), 'isa.optional.asyncfunction'\n      @eq ( Ωit_884 = -> t2.isa.null?.name                       ), 'isa.null'\n      @eq ( Ωit_885 = -> t2.isa.function?.name                   ), 'isa.function'\n      @eq ( Ωit_886 = -> t2.isa.boolean?.name                    ), 'isa.boolean'\n      @eq ( Ωit_887 = -> t2.isa.text?.name                       ), 'isa.text'\n      @eq ( Ωit_888 = -> t2.isa.asyncfunction?.name              ), 'isa.asyncfunction'\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    create_methods: ->\n      { Intertype, } = require '../../../apps/intertype'\n      t2 = new Intertype()\n      @eq ( Ωit_889 = -> t2.create.function.name               ), 'create.function'\n      @eq ( Ωit_890 = -> t2.create.float.name                  ), 'create.float'\n      return null\n\n  #=========================================================================================================\n  Create_methods:\n\n    #-------------------------------------------------------------------------------------------------------\n    floats: ->\n      { Intertype, } = require '../../../apps/intertype'\n      t2 = new Intertype()\n      @eq     ( Ωit_891 = -> t2.create.float()              ), 0\n      @eq     ( Ωit_892 = -> t2.create.float +0             ), 0\n      @eq     ( Ωit_893 = -> t2.create.float -0             ), 0\n      @eq     ( Ωit_894 = -> t2.create.float false          ), 0\n      @eq     ( Ωit_895 = -> t2.create.float true           ), 1\n      @eq     ( Ωit_896 = -> t2.create.float 12.34          ), 12.34\n      @eq     ( Ωit_897 = -> t2.create.float '12.34'        ), 12.34\n      @eq     ( Ωit_898 = -> t2.create.float +12.34         ), 12.34\n      @eq     ( Ωit_899 = -> t2.create.float '+12.34'       ), 12.34\n      @eq     ( Ωit_900 = -> t2.create.float -12.34         ), -12.34\n      @eq     ( Ωit_901 = -> t2.create.float '-12.34'       ), -12.34\n      @eq     ( Ωit_902 = -> t2.create.float null           ), 0\n      @eq     ( Ωit_903 = -> t2.create.float undefined      ), 0\n      @throws ( Ωit_904 = -> t2.create.float ''             ), /these arguments are not suitable for `create.float\\(\\)`: ''/\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    integers: ->\n      { Intertype, } = require '../../../apps/intertype'\n      t2 = new Intertype()\n      @eq     ( Ωit_905 = -> t2.create.integer()              ), 0\n      @eq     ( Ωit_906 = -> t2.create.integer +0             ), 0\n      @eq     ( Ωit_907 = -> t2.create.integer -0             ), 0\n      @eq     ( Ωit_908 = -> t2.create.integer false          ), 0\n      @eq     ( Ωit_909 = -> t2.create.integer true           ), 1\n      @eq     ( Ωit_910 = -> t2.create.integer 12.34          ), 12\n      @eq     ( Ωit_911 = -> t2.create.integer '12'           ), 12\n      @eq     ( Ωit_912 = -> t2.create.integer +12            ), 12\n      @eq     ( Ωit_913 = -> t2.create.integer '+12'          ), 12\n      @eq     ( Ωit_914 = -> t2.create.integer -12            ), -12\n      @eq     ( Ωit_915 = -> t2.create.integer '-12'          ), -12\n      @eq     ( Ωit_916 = -> t2.create.integer null           ), 0\n      @eq     ( Ωit_917 = -> t2.create.integer undefined      ), 0\n      @throws ( Ωit_918 = -> t2.create.integer ''             ), /these arguments are not suitable for `create.integer\\(\\)`: ''/\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    cardinals: ->\n      { Intertype, } = require '../../../apps/intertype'\n      t2 = new Intertype()\n      @eq     ( Ωit_919 = -> t2.create.cardinal()              ), 0\n      @eq     ( Ωit_920 = -> t2.create.cardinal +0             ), +0\n      @eq     ( Ωit_921 = -> t2.create.cardinal -0             ), -0\n      @eq     ( Ωit_922 = -> t2.create.cardinal false          ), 0\n      @eq     ( Ωit_923 = -> t2.create.cardinal true           ), 1\n      @eq     ( Ωit_924 = -> t2.create.cardinal 12.34          ), 12\n      @eq     ( Ωit_925 = -> t2.create.cardinal '12'           ), 12\n      @eq     ( Ωit_926 = -> t2.create.cardinal +12            ), 12\n      @eq     ( Ωit_927 = -> t2.create.cardinal '+12'          ), 12\n      @throws ( Ωit_928 = -> t2.create.cardinal -12            ), /these arguments are not suitable for `create.cardinal\\(\\)`: -12/\n      @throws ( Ωit_929 = -> t2.create.cardinal '-12'          ), /these arguments are not suitable for `create.cardinal\\(\\)`: '-12'/\n      @eq     ( Ωit_930 = -> t2.create.cardinal null           ), 0\n      @eq     ( Ωit_931 = -> t2.create.cardinal undefined      ), 0\n      @throws ( Ωit_932 = -> t2.create.cardinal ''             ), /these arguments are not suitable for `create.cardinal\\(\\)`: ''/\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    texts: ->\n      { Intertype, } = require '../../../apps/intertype'\n      t2 = new Intertype()\n      @eq     ( Ωit_933 = -> t2.create.text()              ), ''\n      @eq     ( Ωit_934 = -> t2.create.text +0             ), '0'\n      @eq     ( Ωit_935 = -> t2.create.text -0             ), '-0'\n      @eq     ( Ωit_936 = -> t2.create.text false          ), 'false'\n      @eq     ( Ωit_937 = -> t2.create.text true           ), 'true'\n      @eq     ( Ωit_938 = -> t2.create.text 12.34          ), '12.34'\n      @eq     ( Ωit_939 = -> t2.create.text '12'           ), '12'\n      @eq     ( Ωit_940 = -> t2.create.text +12            ), '12'\n      @eq     ( Ωit_941 = -> t2.create.text '+12'          ), '+12'\n      @eq     ( Ωit_942 = -> t2.create.text -12            ), '-12'\n      @eq     ( Ωit_943 = -> t2.create.text '-12'          ), '-12'\n      @eq     ( Ωit_944 = -> t2.create.text null           ), ''\n      @eq     ( Ωit_945 = -> t2.create.text undefined      ), ''\n      @eq     ( Ωit_946 = -> t2.create.text ''             ), ''\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    on_dotted_types_1: ->\n      { Intertype, }  = require '../../../apps/intertype'\n      has_been_called = { create_quantity: 0, create_quantity_q: 0, create_quantity_u: 0, }\n      #.....................................................................................................\n      do =>\n        declarations =\n          quantity:\n            test:       'object'\n            template:\n              q:        0\n              u:        'u'\n            create: ( x ) ->\n              has_been_called.create_quantity++\n              debug 'Ω_947', \"create.quantity( #{rpr x} )\"\n              debug 'Ω_948', { @declarations.quantity.template..., x..., }\n              return { @declarations.quantity.template..., x..., }\n          'quantity.q':\n            test: 'float'\n            create: ( x ) ->\n              has_been_called.create_quantity_q++\n              debug 'Ω_949', \"create.quantity.q( #{rpr x} )\"\n              return 0\n          'quantity.u':\n            test: 'text'\n            create: ( x ) ->\n              has_been_called.create_quantity_u++\n              debug 'Ω_950', \"create.quantity.u( #{rpr x} )\"\n              return 'u'\n        t2 = new Intertype declarations\n        @eq     ( Ωit_951 = -> t2.create.quantity()               ), { q: 0, u: 'u', }\n        @eq     ( Ωit_952 = -> has_been_called.create_quantity    ), 1\n        @eq     ( Ωit_953 = -> has_been_called.create_quantity_q  ), 1\n        @eq     ( Ωit_954 = -> has_been_called.create_quantity_u  ), 1\n        @eq     ( Ωit_955 = -> t2.create.quantity '12.5m'         ), { q: 12.5, u: 'm', }\n        @eq     ( Ωit_956 = -> t2.create.quantity.q()             ), 0\n        @eq     ( Ωit_957 = -> t2.create.quantity.u()             ), 'u'\n        @eq     ( Ωit_958 = -> t2.create[ 'quantity.q' ]()        ), 0\n        @eq     ( Ωit_959 = -> t2.create[ 'quantity.u' ]()        ), 'u'\n        return null\n\n    #-------------------------------------------------------------------------------------------------------\n    on_dotted_types_2: ->\n      { Intertype, }  = require '../../../apps/intertype'\n      has_been_called = { create_quantity: 0, create_quantity_q: 0, create_quantity_u: 0, }\n      #.....................................................................................................\n      do =>\n        declarations =\n          quantity:\n            test:       'object'\n            fields:\n              q:\n                test:     'float'\n                create:   ( x ) -> 0\n              u:\n                test:     'text'\n                create:   ( x ) -> 'u'\n            template:\n              q:        0\n              u:        'u'\n            create: ( x ) ->\n              { q: 0, u: 'u', }\n        t2 = new Intertype declarations\n        @eq     ( Ωit_960 = -> t2.create.quantity()               ), { q: 0, u: 'u', }\n        @eq     ( Ωit_961 = -> t2.create.quantity '12.5m'         ), { q: 12.5, u: 'm', }\n        @eq     ( Ωit_962 = -> t2.create.quantity.q()             ), 0\n        @eq     ( Ωit_963 = -> t2.create.quantity.u()             ), 'u'\n        @eq     ( Ωit_964 = -> t2.create[ 'quantity.q' ]()        ), 0\n        @eq     ( Ωit_965 = -> t2.create[ 'quantity.u' ]()        ), 'u'\n        return null\n\n    #-------------------------------------------------------------------------------------------------------\n    on_dotted_types_3: ->\n      { Intertype, }  = require '../../../apps/intertype'\n      has_been_called = { create_quantity: 0, create_quantity_q: 0, create_quantity_u: 0, }\n      #.....................................................................................................\n      do =>\n        declarations =\n          literal:\n            role:     'qualifier'\n            fields:\n              float:\n                test:     'float'\n                create:   ( x ) -> parseFloat x\n              integer:\n                test:     'integer'\n                create:   ( x ) -> parseInt x, 10\n        t2 = new Intertype declarations\n        debug 'Ωit_966', t2.declarations[ 'literal.float'   ].create '123.456e4'\n        debug 'Ωit_967', t2.declarations[ 'literal.integer' ].create '123.456'\n        return null\n      #.....................................................................................................\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    on_dotted_types_4: ->\n      { Intertype,  } = require '../../../apps/intertype'\n      has_been_called = { create_quantity: 0, }\n      #.....................................................................................................\n      do =>\n        declarations =\n          float1:       'float'\n          float2:       'float1'\n          float3:       'float2'\n          float4:       'float3'\n          quantity:\n            test:       'object'\n            template:\n              q:        0\n              u:        'u'\n            create: ( x ) ->\n              debug 'Ω_968', { x, }\n              has_been_called.create_quantity++\n              { q: 0, u: 'u', x..., }\n        #...................................................................................................\n        t2 = new Intertype declarations\n        @eq     ( Ωit_969 = -> t2.create.float()                  ), 0\n        @eq     ( Ωit_970 = -> t2.create.float1()                 ), 0\n        @eq     ( Ωit_971 = -> t2.create.float2()                 ), 0\n        @eq     ( Ωit_972 = -> t2.create.float3()                 ), 0\n        @eq     ( Ωit_973 = -> t2.create.float4()                 ), 0\n        @eq     ( Ωit_974 = -> t2.create.quantity()               ), { q: 0, u: 'u', }\n        @eq     ( Ωit_975 = -> t2.create.quantity { q: 1, }       ), { q: 1, u: 'u', }\n        @eq     ( Ωit_976 = -> t2.create.quantity { u: 'm', }     ), { q: 0, u: 'm', }\n        @eq     ( Ωit_977 = -> has_been_called.create_quantity    ), 3\n        # @eq     ( Ωit_978 = -> t2.declarations.mass.kind          ), 'quantity'\n        # @eq     ( Ωit_979 = -> t2.create[ 'quantity.q' ]()        ), 0\n        # @eq     ( Ωit_980 = -> t2.create[ 'quantity.u' ]()        ), 'u'\n        # #...................................................................................................\n        # @eq     ( Ωit_981 = -> t2.create.mass()                   ), { q: 0, u: 'u', }\n        # @eq     ( Ωit_982 = -> t2.create[ 'foo.bar.baz' ]()       ), { q: 0, u: 'u', }\n        # @eq     ( Ωit_983 = -> t2.create.quantity.q()             ), 0\n        # @eq     ( Ωit_984 = -> t2.create.quantity.u()             ), 'u'\n        # @eq     ( Ωit_985 = -> t2.create.foo.bar.baz()            ), { q: 0, u: 'u', }\n        # debug 'Ωit_986', t2.create.float\n        # debug 'Ωit_987', t2.create.quantity\n        debug 'Ωit_988', has_been_called\n        debug 'Ωit_989', has_been_called.create_quantity\n        return null\n      #.....................................................................................................\n      return null\n\n    # #-------------------------------------------------------------------------------------------------------\n    # posnaught_integers: ->\n    #   { Intertype, } = require '../../../apps/intertype'\n    #   t2 = new Intertype()\n    #   @eq     ( Ωit_990 = -> t2.create.posnaught.integer()              ), 0\n    #   @eq     ( Ωit_991 = -> t2.create.posnaught.integer +0             ), 0\n    #   @eq     ( Ωit_992 = -> t2.create.posnaught.integer -0             ), 0\n    #   @eq     ( Ωit_993 = -> t2.create.posnaught.integer false          ), 0\n    #   @eq     ( Ωit_994 = -> t2.create.posnaught.integer true           ), 1\n    #   @eq     ( Ωit_995 = -> t2.create.posnaught.integer 12.34          ), 12\n    #   @eq     ( Ωit_996 = -> t2.create.posnaught.integer '12'           ), 12\n    #   @eq     ( Ωit_997 = -> t2.create.posnaught.integer +12            ), 12\n    #   @eq     ( Ωit_998 = -> t2.create.posnaught.integer '+12'          ), 12\n    #   @eq     ( Ωit_999 = -> t2.create.posnaught.integer -12            ), -12\n    #   @eq     ( Ωit1000 = -> t2.create.posnaught.integer '-12'          ), -12\n    #   @eq     ( Ωit1001 = -> t2.create.posnaught.integer null           ), 0\n    #   @eq     ( Ωit1002 = -> t2.create.posnaught.integer undefined      ), 0\n    #   @throws ( Ωit1003 = -> t2.create.posnaught.integer ''             ), /these arguments are not suitable for `create.posnaught.integer\\(\\)`: \\[ '' \\]/\n    #   return null\n\n  Regexes:\n    floats: ->\n      { Intertype, }  = require '../../../apps/intertype'\n      type_patterns   = require '../../../apps/intertype/lib/patterns'\n      types           = new Intertype()\n      types.declare is_valid_literal: ( x ) -> return x in [ true, false, null, ]\n      regexes         = [\n        # ///^   [-+]? (  [0-9]*[.])?[0-9]+([eE][-+]?\\d+)?                                      $/// ### r0 ###\n        # ///^ ( [-+]? (?:[0-9]+(?:\\.[0-9]+)?|\\.[0-9]+)(?:[eE][+-]?[0-9]+)?)                    $/// ### r1 ###\n        # ///^ (?: (?: [-+]?[0-9]*\\.?[0-9]+ ) | (?: [-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)? ) )  $/// ### r2 ###\n        # ///^\n        #       (?:\n        #       [+-]? # optional sign\n        #         (?: # start a conditional group\n        #         \\d+ # either a nonzero number of digits\n        #         |   # or a decimal phrase\n        #         \\d* # optional digits preceding the decimal\n        #         \\.(?=\\d) # a literal decimal followed by at least one digit\n        #         \\d* # optionally some more digits\n        #         ) # note this group is mandatory!\n        #         (?: # start an optional scientific notation group\n        #         [eE] # the scientific notation character\n        #         [+-]? # optional sign\n        #         \\d+ # after sci notation, you cannot go directly to a decimal\n        #         )?\n        #       )\n        #       $ /// ### r3 ###\n        # ///^   [-+]? (  [0-9]*[.])?[0-9]+([eE][-+]?\\d+)?                                      $/// ### r4 ###\n        # ///^[+\\-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:\\d[eE][+\\-]?\\d+)?$/// ### r5 thx to https://stackoverflow.com/a/51790561/7568091 ###\n        ### thx to https://stackoverflow.com/a/51790561/7568091 ###\n        # ///^[-+]?([0-9]*[.])?[0-9]+([eE][-+]?[0-9]+)?$/// ### r6 ###\n        # ///^\n        #   [-+]?\n        #   (?:\n        #     ([1-9][0-9]*[.])[0-9]+ |\n        #     ([.])[0-9]+ |\n        #     ([1-9][0-9]*)\n        #     )\n        #   ([eE][-+]?[0-9]+)?\n        #   $///u ### r7 ###\n        # type_patterns.patterns.any.float\n        type_patterns.patterns.only.float\n        # type_patterns.patterns.only.float_and_rest\n        ]\n      probes_and_matchers = [\n        [ '123',          true,   123,           ] ### p0  ###\n        [ '123.45',       true,   123.45,        ] ### p1  ###\n        [ '45e43',        true,   4.5e+44,       ] ### p2  ###\n        [ '.45',          true,   0.45,          ] ### p3  ###\n        [ '.45e43',       true,   4.5e+42,       ] ### p4  ###\n        [ '.45e+43',      true,   4.5e+42,       ] ### p5  ###\n        [ '.45e-43',      true,   4.5e-44,       ] ### p6  ###\n        [ '+.45',         true,   0.45,          ] ### p7  ###\n        [ '+.45e43',      true,   4.5e+42,       ] ### p8  ###\n        [ '+.45e+43',     true,   4.5e+42,       ] ### p9  ###\n        [ '+.45e-43',     true,   4.5e-44,       ] ### p10  ###\n        [ '-.45',         true,   -0.45,         ] ### p11 ###\n        [ '-.45e43',      true,   -4.5e+42,      ] ### p12 ###\n        [ '-.45e+43',     true,   -4.5e+42,      ] ### p13 ###\n        [ '-.45e-43',     true,   -4.5e-44,      ] ### p14 ###\n        [ '123e3',        true,   123000,        ] ### p15 ###\n        [ '123.0e3',      true,   123000,        ] ### p16 ###\n        [ '123.4e3',      true,   123400,        ] ### p17 ###\n        [ '+3',           true,   3,             ] ### p18 ###\n        [ '3.2e23',       true,   3.2e+23,       ] ### p19 ###\n        [ '-4.70e+9',     true,   -4.7e+9,       ] ### p20 ###\n        [ '-.2E-4',       true,   -0.2e-4,       ] ### p21 ###\n        [ '-7.6603',      true,   -7.6603,       ] ### p22 ###\n\n        #...................................................................................................\n        [ '+0003',        false,   'Octal literals are not allowed in strict mode.',  ] ### p23 ###\n        [ '0003',         false,   'Octal literals are not allowed in strict mode.',  ] ### p24 ###\n        [ '-0003',        false,   'Octal literals are not allowed in strict mode.',  ] ### p25 ###\n        [ '123.e3',       null,   123000,                                             ] ### p26 ? ###\n        [ '4567.',        null,   null,                                               ] ### p27 ?? ###\n        [ 'e123',         false,  'e123 is not defined',                              ] ### p28 ###\n        [ 'e-4',          false,  'e is not defined',                                 ] ### p29 ###\n        [ '.e4',          false,  \"Unexpected token '.'\",                             ] ### p29 ###\n        [ '.45e-43.2',    false,  'Unexpected number',                                ] ### p30 ?? ###\n        [ '45e4৩',        false,  'Invalid or unexpected token',                      ] ### p31  ###\n        [ '37.e88',       null,   3.7e+89,                                            ] ### p32 (dot before the e) ###\n        [ '123.4.e3',     null,   null,                                               ] ### p33 (parsed as attribute access) ###\n        ]\n      #.....................................................................................................\n      ### Test whether `is_valid_literal` entries are themselves valid ###\n      for [ probe, is_valid_literal, val_or_err, ], pi in probes_and_matchers\n        types.validate.is_valid_literal is_valid_literal\n        switch true\n          when is_valid_literal is true\n            @eq ( WGUY.props.nameit \"Ω1022-INVALID-TEST-p#{pi}\", -> eval probe ), parseFloat probe\n            @eq ( WGUY.props.nameit \"Ω1023-INVALID-TEST-p#{pi}\", -> eval probe ), val_or_err\n          when is_valid_literal is false\n            @throws ( WGUY.props.nameit \"Ω1024-INVALID-TEST-p#{pi}\", -> eval probe ), val_or_err\n          when is_valid_literal is null\n            @pass 'Ω1025', \"#{rpr probe} will be considered not well-formed for the purposes of this test\"\n      #.....................................................................................................\n      for regex, ri in regexes\n        for [ probe, is_valid_literal, ], pi in probes_and_matchers\n          regex.lastIndex = 0\n          if ( match = probe.match regex )?\n            switch true\n              when is_valid_literal is true   then @pass \"Ω1026-r#{ri}-p#{pi}\"\n              when is_valid_literal is false  then @fail \"Ω1027-r#{ri}-p#{pi}\", \"expected no match but got one\"\n              when is_valid_literal is null   then @fail \"Ω1028-r#{ri}-p#{pi}\", \"expected no match but got one\"\n          else\n            switch true\n              when is_valid_literal is true   then @fail \"Ω1029-r#{ri}-p#{pi}\", \"expected match but got none\"\n              when is_valid_literal is false  then @pass \"Ω1030-r#{ri}-p#{pi}\"\n              when is_valid_literal is null   then @pass \"Ω1031-r#{ri}-p#{pi}\"\n      #.....................................................................................................\n      for regex, ri in regexes\n        for [ probe, is_valid_literal, ], pi in probes_and_matchers\n          regex.lastIndex = 0\n          if ( match = probe.match regex )?\n            switch true\n              when is_valid_literal is true   then help         \"Ω1032-r#{ri}-p#{pi}\", match\n              when is_valid_literal is false  then warn reverse \"Ω1033-r#{ri}-p#{pi}\", match\n              when is_valid_literal is null   then urge reverse \"Ω1034-r#{ri}-p#{pi}\", match\n          else\n            switch true\n              when is_valid_literal is true   then help reverse \"Ω1035-r#{ri}-p#{pi}\", match\n              when is_valid_literal is false  then warn         \"Ω1036-r#{ri}-p#{pi}\", match\n              when is_valid_literal is null   then urge         \"Ω1037-r#{ri}-p#{pi}\", match\n      #.....................................................................................................\n      return null\n\n\n#   demo_exception_with_lacking_stacktrace_1: ->\n#     { Intertype, }  = require '../../../apps/intertype'\n#     types           = new Intertype()\n#     types.declare\n#             quantity:\n#               test:       'object'\n#               template:\n#                 q:        0\n#                 u:        'u'\n#               create: ( x ) ->\n#                 { q: 0, u: 'u', }\n#             'quantity.q':\n#               test: 'float'\n#               create: ( x ) -> 0\n#             'quantity.u':\n#               test: 'text'\n#               create: ( x ) -> 'u'\n#             mass:           'quantity'\n#     #.......................................................................................................\n#     try\n#       types.create.mass()\n#     catch error\n#       debug 'Ωit1004', format_error_stack error.stack\n#     #.......................................................................................................\n#     return null\n\n#   demo_exception_with_lacking_stacktrace_2: ->\n#     { Intertype, }  = require '../../../apps/intertype'\n#     types           = new Intertype()\n#     types.declare\n#             quantity:\n#               test:       'object'\n#               template:\n#                 q:        0\n#                 u:        'u'\n#               create: ( x ) ->\n#                 { q: 0, u: 'u', }\n#             'quantity.q':\n#               test: 'float'\n#               create: ( x ) -> 0\n#             'quantity.u':\n#               test: 'text'\n#               create: ( x ) -> 'u'\n#             mass:           'quantity'\n#     #.......................................................................................................\n#     try\n#       @eq ( Ω1039 = -> types.create.mass() ), { q: 0, u: 'u', }\n#     catch error\n#       debug 'Ωit1005', format_error_stack error.stack\n#     #.......................................................................................................\n#     return null\n\n# format_error_stack = ( stack ) ->\n#   lines = stack.split '\\n'\n#   lines = ( line for line in lines when not /\\bnode:/.test line )\n#   lines = ( ( if /jzr\\/intertype/.test line then GUY.trm.yellow GUY.trm.reverse line else GUY.trm.white line ) for line in lines )\n#   return '\\n\\n' + ( lines.join '\\n' ) + '\\n'\n\n#===========================================================================================================\nif module is require.main then await do =>\n  # @use_fields_to_declare_qualifiers()\n  # test @use_fields_to_declare_qualifiers\n  # TT = { interface: @intertype_tasks.interface, }\n  # ( new Test { throw_on_error: false, } ).test ( { Create_methods: @intertype_tasks.Create_methods, } )\n  # ( new Test { throw_on_error: false, } ).test ( { on_dotted_types: @intertype_tasks.Create_methods.on_dotted_types, } )\n  # ( new Test { throw_on_error: false, } ).test ( { kinds_and_roles: @intertype_tasks.kinds_and_roles, } )\n  # ( new Test { throw_on_error: false, } ).test {\n  #     on_dotted_types_1: @intertype_tasks.Create_methods.on_dotted_types_1\n  #     # on_dotted_types_2: @intertype_tasks.Create_methods.on_dotted_types_2\n  #     # on_dotted_types_3: @intertype_tasks.Create_methods.on_dotted_types_3\n  #     # on_dotted_types_4: @intertype_tasks.Create_methods.on_dotted_types_4\n  #     }\n  # ( new Test { throw_on_error: false, } ).test { can_create_types_with_templates_and_create: @intertype_tasks.can_create_types_with_templates_and_create, }\n  # ( new Test { throw_on_error: false, } ).test ( { Naming: @intertype_tasks.Naming, } )\n  # ( new Test { throw_on_error: false, } ).test ( { Regexes: @intertype_tasks.Regexes, } )\n  # ( new Test { throw_on_error: true, } ).test ( { demo_exception_with_lacking_stacktrace_1: @intertype_tasks.demo_exception_with_lacking_stacktrace_1, } )\n  # ( new Test { throw_on_error: true, } ).test ( { demo_exception_with_lacking_stacktrace_2: @intertype_tasks.demo_exception_with_lacking_stacktrace_2, } )\n  # await ( new Test { throw_on_error: true, } ).async_test { tasks: @tasks, }\n  # await ( new Test { throw_on_error: true, } ).async_test { can_use_values_of_unknown_type: @tasks.can_use_values_of_unknown_type, }\n  # demo_1()\n  ( new Test { throw_on_error: true, } ).test @intertype_tasks\n"
  ]
}