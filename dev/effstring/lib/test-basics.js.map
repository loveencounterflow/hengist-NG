{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'intertype/test-basics'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\nWGUY                      = require '../../../apps/webguy'\nTMP_types                 = new ( require 'intertype-203.0.0' ).Intertype()\nGTNG                      = require '../../../apps/guy-test-NG'\n{ Test                  } = GTNG\n# test_mode                 = 'throw_failures'\n# test_mode                 = 'throw_errors'\n# test_mode                 = 'failsafe'\n\n\n\n\n############################################################################################################\n#\n#===========================================================================================================\n@intertype_tasks =\n\n  #---------------------------------------------------------------------------------------------------------\n  module_exports: ->\n    EFFSTRING = require '../../../apps/effstring'\n    #.....................................................................................................\n    # @throws ( Ω___1 = -> create_typespace() ), /declaration for type 'wholenumber' contains forward reference to type 'integer'/\n    @eq ( Ω___2 = -> typeof EFFSTRING   ), 'object'\n    @eq ( Ω___3 = -> typeof EFFSTRING.f ), 'function'\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  re_matches: ->\n    { _format_re } = require '../../../apps/effstring'\n    #.....................................................................................................\n    @eq ( Ω___4 = ->  ( ( \":5;)\"        ).match _format_re )?.groups ? null ), { fmt: '5',      tail: ')'       }\n    @eq ( Ω___5 = ->  ( ( \":>5;)\"       ).match _format_re )?.groups ? null ), { fmt: '>5',     tail: ')'       }\n    @eq ( Ω___6 = ->  ( ( \":<5;)\"       ).match _format_re )?.groups ? null ), { fmt: '<5',     tail: ')'       }\n    @eq ( Ω___7 = ->  ( ( \":>5.2;)\"     ).match _format_re )?.groups ? null ), { fmt: '>5.2',   tail: ')'       }\n    @eq ( Ω___8 = ->  ( ( \":\\\\;<5;)\"    ).match _format_re )?.groups ? null ), { fmt: '\\\\',     tail: '<5;)'    }\n    @eq ( Ω___9 = ->  ( ( \":\\\\;<5;);\"   ).match _format_re )?.groups ? null ), { fmt: '\\\\',     tail: '<5;);'   }\n    @eq ( Ω__10 = ->  ( ( \":\\\\;<5;)\\\\;\" ).match _format_re )?.groups ? null ), { fmt: '\\\\',     tail: '<5;)\\\\;' }\n    @eq ( Ω__11 = ->  ( ( \":\\\\;>15;)\"   ).match _format_re )?.groups ? null ), { fmt: '\\\\',     tail: '>15;)'   }\n    @eq ( Ω__12 = ->  ( ( \":;>15;)\"     ).match _format_re )?.groups ? null ), { fmt: ';>15',   tail: ')'       }\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  basic_functionality: ->\n    { f, } = require '../../../apps/effstring'\n    #.....................................................................................................\n    @eq ( Ω__13 = -> f''                                                  ), ''\n    @eq ( Ω__14 = -> f'helo'                                              ), 'helo'\n    @eq ( Ω__15 = -> f'(#{123})'                                          ), '(#{123})'\n    @eq ( Ω__16 = -> f'(#{123}\\;)'                                        ), '(#{123};)'\n    @eq ( Ω__17 = -> f'(#{123}\\\\;)'                                       ), '(#{123}\\\\;)'\n    @eq ( Ω__18 = -> f\"(#{123})\"                                          ), '(123)'\n    @eq ( Ω__19 = -> f\"(#{123}:5;)\"                                       ), '(  123)'\n    @eq ( Ω__20 = -> f\"(#{123}:>5;)\"                                      ), '(  123)'\n    @eq ( Ω__21 = -> f\"(#{123}:<5;)\"                                      ), '(123  )'\n    @eq ( Ω__22 = -> f\"(#{123.456}:>5.2;)\"                                ), '(1.2e+2)'\n    @eq ( Ω__23 = -> f\"(#{123}:;>15;)\"                                    ), '(;;;;;;;;;;;;123)'\n    @eq ( Ω__24 = -> f\"(#{123}:;<15;)\"                                    ), '(123;;;;;;;;;;;;)'\n    @eq ( Ω__25 = -> f\"(#{123}:>>15;)\"                                    ), '(>>>>>>>>>>>>123)'\n    @eq ( Ω__26 = -> f\"(#{123}:<>15;)\"                                    ), '(<<<<<<<<<<<<123)'\n    @eq ( Ω__27 = -> f\"(#{123}:;<7;)\"                                     ), '(123;;;;)'\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  malformed_formats: ->\n    { f\n      Effstring_error\n      Effstring_syntax_error\n      Effstring_lib_syntax_error } = require '../../../apps/effstring'\n    #.......................................................................................................\n    @throws ( Ω__28 = -> f\"(#{123}:;>15)\"       ), /\\(Effstring_syntax_error\\) illegal format expression ':;>15\\)'/\n    @throws ( Ω__29 = -> f\"(#{123}:)\"           ), /\\(Effstring_syntax_error\\) illegal format expression/\n    @throws ( Ω__30 = -> f\"(#{123}:;)\"          ), /\\(Effstring_syntax_error\\) illegal format expression ':;\\)'/\n    @throws ( Ω__31 = -> f\"(#{123}:--->3f;)\"    ), /\\(Effstring_lib_syntax_error\\) illegal format expression '--->3f'/\n    @eq ( Ω__32 = -> try f\"(#{123}:;)\"        catch e then e instanceof Effstring_error   ), true\n    @eq ( Ω__33 = -> try f\"(#{123}:;)\"        catch e then e instanceof Effstring_syntax_error   ), true\n    @eq ( Ω__34 = -> try f\"(#{123}:;)\"        catch e then e instanceof Effstring_lib_syntax_error   ), false\n    @eq ( Ω__35 = -> try f\"(#{123}:--->3f;)\"  catch e then e instanceof Effstring_error   ), true\n    @eq ( Ω__36 = -> try f\"(#{123}:--->3f;)\"  catch e then e instanceof Effstring_syntax_error   ), true\n    @eq ( Ω__37 = -> try f\"(#{123}:--->3f;)\"  catch e then e instanceof Effstring_lib_syntax_error   ), true\n    @throws ( Ω__38 = -> f\"(#{123}:\\\\;<5;)\"    ), /illegal format expression/\n    @throws ( Ω__39 = -> f\"(#{123}:\\\\;<5;);\"   ), /illegal format expression/\n    @throws ( Ω__40 = -> f\"(#{123}:\\\\;<5;)\\\\;\" ), /illegal format expression/\n    @throws ( Ω__41 = -> f\"(#{123}:\\\\;>15;)\"   ), /illegal format expression/\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  fixed_point_notation: ->\n    { f, } = require '../../../apps/effstring'\n    #.....................................................................................................\n    @eq ( Ω__42 = -> f\"(#{123.456}:>5.2f;)\"                               ), '(123.46)'\n    @eq ( Ω__43 = -> f\"(#{123.456}:>15.2f;)\"                              ), '(         123.46)'\n    @eq ( Ω__44 = -> f\"(#{123.456}:<15.2f;)\"                              ), '(123.46         )'\n    @eq ( Ω__45 = -> f\"(#{1234.567}:>15.2f;)\"                             ), '(        1234.57)'\n    @eq ( Ω__46 = -> f\"(#{1234.567}:<15.2f;)\"                             ), '(1234.57        )'\n    @eq ( Ω__47 = -> f\"(#{1234.567}:=>15.2f;)\"                            ), '(========1234.57)'\n    @eq ( Ω__48 = -> f\"(#{1234.567}:=<15.2f;)\"                            ), '(1234.57========)'\n    @eq ( Ω__49 = -> f\"(#{1234.567}:=>15,.2f;)\"                           ), '(=======1,234.57)'\n    @eq ( Ω__50 = -> f\"(#{1234.567}:=<15,.2f;)\"                           ), '(1,234.57=======)'\n    #.......................................................................................................\n    @eq ( Ω__51 = -> f\"(#{-1234.567}:_>15,.2f;)\"                          ), '(______−1,234.57)'\n    @eq ( Ω__52 = -> f\"(#{+1234.567}:_>-15,.2f;)\"                         ), '(_______1,234.57)'\n    @eq ( Ω__53 = -> f\"(#{-1234.567}:_>-15,.2f;)\"                         ), '(______−1,234.57)'\n    @eq ( Ω__54 = -> f\"(#{+1234.567}:_>+15,.2f;)\"                         ), '(______+1,234.57)'\n    @eq ( Ω__55 = -> f\"(#{-1234.567}:_>+15,.2f;)\"                         ), '(______−1,234.57)'\n    @eq ( Ω__56 = -> f\"(#{+1234.567}:_=+15,.2f;)\"                         ), '(+______1,234.57)'\n    @eq ( Ω__57 = -> f\"(#{-1234.567}:_=+15,.2f;)\"                         ), '(−______1,234.57)'\n    @eq ( Ω__58 = -> f\"(#{-1234.567}:_=+015,.2f;)\"                        ), '(−0,000,001,234.57)'\n    @eq ( Ω__59 = -> f\"(#{-1234.567}:=+015,.2f;)\"                         ), '(−0,000,001,234.57)'\n    @eq ( Ω__60 = -> f\"(#{+1234.567}:_=015,.2f;)\"                         ), '(0,000,001,234.57)'\n    @eq ( Ω__61 = -> f\"(#{+1234.567}:=015,.2f;)\"                          ), '(0,000,001,234.57)'\n    @eq ( Ω__62 = -> f\"(#{+1234.567}:_=015.2f;)\"                          ), '(000000001234.57)'\n    @eq ( Ω__63 = -> f\"(#{+1234.567}:=015.2f;)\"                           ), '(000000001234.57)'\n    @eq ( Ω__64 = -> f\"(#{-1234.567}:_=015.2f;)\"                          ), '(−00000001234.57)'\n    @eq ( Ω__65 = -> f\"(#{-1234.567}:=015.2f;)\"                           ), '(−00000001234.57)'\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  from_the_docs: ->\n    { f, } = require '../../../apps/effstring'\n    ### TAINT check with `$` format will rely on locale setting of the machine the tests are running on ###\n    #.....................................................................................................\n    @eq ( Ω__66 = -> f\"#{0.123}:.0%;\"   ), '12%'                  # rounded percentage, \"12%\"\n    @eq ( Ω__67 = -> f\"#{-3.5}:($.2f;\"  ), '($3.50)'              # localized fixed-point currency, \"(£3.50)\"\n    # @eq ( Ω__68 = -> f\"#{-3.5}:($.2f;\"  ), '(£3.50)'              # localized fixed-point currency, \"(£3.50)\"\n    @eq ( Ω__69 = -> f\"#{42}:+20;\"      ), '                 +42' # space-filled and signed, \"                 +42\"\n    @eq ( Ω__70 = -> f\"#{42}:.^20;\"     ), '.........42.........' # dot-filled and centered, \".........42.........\"\n    @eq ( Ω__71 = -> f\"#{42e6}:.2s;\"    ), '42M'                  # SI-prefix with two significant digits, \"42M\"\n    @eq ( Ω__72 = -> f\"#{48879}:#x;\"    ), '0xbeef'               # prefixed lowercase hexadecimal, \"0xbeef\"\n    @eq ( Ω__73 = -> f\"#{4223}:,.2r;\"   ), '4,200'                # grouped thousands with two significant digits, \"4,200\"\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  effstring_format_test_js: ->\n    { f, } = require '../../../apps/effstring'\n    ### TAINT check with `$` format will rely on locale setting of the machine the tests are running on ###\n    #.....................................................................................................\n    @throws ( Ω__74 = -> f\"#{0}:foo;\"   ), /invalid format: foo/\n    @throws ( Ω__75 = -> f\"#{0}:.-2s;\"  ), /invalid format: \\.-2s/\n    @throws ( Ω__76 = -> f\"#{0}:.f;\"    ), /invalid format: \\.f/\n    @eq ( Ω__77 = -> f\"#{0}:.30f;\"              ), \"0.00000000000000000000\"\n    @eq ( Ω__78 = -> f\"#{1}:.0g;\"               ), \"1\"\n    @eq ( Ω__79 = -> f\"#{Number.MIN_VALUE}:s;\"  ), \"0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005y\"\n    @eq ( Ω__80 = -> f\"#{Number.MAX_VALUE}:s;\"  ), \"179769000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000Y\"\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  defaultlocale_test_js: ->\n    { f, } = require '../../../apps/effstring'\n    {format, formatPrefix, formatDefaultLocale} = require '../../../apps/effstring/node_modules/d3-format'\n    debug 'Ω__81', format\n    debug 'Ω__82', formatPrefix\n    debug 'Ω__83', formatDefaultLocale\n    #.......................................................................................................\n    en_US =\n      decimal:    '.',\n      thousands:  ',',\n      grouping:   [ 3, ],\n      currency:   [ '$', '', ]\n    fr_FR =\n      decimal:    ',',\n      thousands:  '.',\n      grouping:   [ 3, ],\n      currency:   [ '', '\\u00a0€', ],\n      percent:    '\\u202f%'\n    #.......................................................................................................\n    do =>\n      locale = formatDefaultLocale fr_FR\n      try\n        @eq ( Ω__84 = -> ( locale.format \"$,.2f\" ) 12345678.90 ), \"12.345.678,90\\u00a0€\"\n        @eq ( Ω__85 = -> ( locale.format \",.0%\"  ) 12345678.90 ), \"1.234.567.890\\u202f%\" # narrow no-break space\n      finally\n        formatDefaultLocale en_US\n      return null\n    #.......................................................................................................\n    do =>\n      locale = formatDefaultLocale fr_FR\n      try\n        @eq ( Ω__86 = -> formatPrefix ), locale.formatPrefix\n        # @eq ( Ω__87 = -> ( formatPrefix \",.2\", 1e3 ) 12345678.90 ), \"12.345,68k\"\n        @eq ( Ω__88 = -> ( locale.formatPrefix \",.2\", 1e3 ) 12345678.90 ), \"12.345,68k\"\n      finally\n        formatDefaultLocale en_US\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  format_type_c_test_js: ->\n    { f, } = require '../../../apps/effstring'\n    #.......................................................................................................\n    @eq ( Ω__89 = -> f\"#{'☃'}:c;\"         ), \"☃\"\n    @eq ( Ω__90 = -> f\"#{'☃'}:020c;\"      ),  \"0000000000000000000☃\"\n    @eq ( Ω__91 = -> f\"#{'☃'}: ^20c;\"     ), \"         ☃          \"\n    @eq ( Ω__92 = -> f\"#{'経済'}: ^20c;\"   ), '         経済         '\n    @eq ( Ω__93 = -> f\"#{'abcd'}: ^20c;\"   ), '        abcd        '\n    @eq ( Ω__94 = -> f\"#{'☃'}:$c;\"        ), \"$☃\"\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX: ->\n    { f\n      _locale_cfg_from_bcp47\n      new_formatter\n      new_locale              } = require '../../../apps/effstring'\n    #.......................................................................................................\n    debug 'Ωfstr__95', _locale_cfg_from_bcp47 'ar-AE'\n    debug 'Ωfstr__96', _locale_cfg_from_bcp47 'en-US'\n    debug 'Ωfstr__97', _locale_cfg_from_bcp47 'de-DE'\n    debug 'Ωfstr__98', new_locale 'ar-AE'\n    debug 'Ωfstr__99', new_locale 'en-US'\n    debug 'Ωfstr_100', new_locale 'de-DE'\n    debug 'Ωfstr_101', new_locale {}\n    f = new_formatter {}; debug 'Ωfstr_102', f\"#{1.23}:$03.2f; #{1234567890.123456}:20,.4f;\"\n    f = new_formatter 'de-DE'; debug 'Ωfstr_103', f\"#{1.23}:$03.2f; #{1234567890.123456}:20,.4f;\"\n    f = new_formatter 'ar-AE'; debug 'Ωfstr_104', f\"#{1.23}:$03.2f; #{1234567890.123456}:20,.4f;\"\n    f = new_formatter 'ar-001'; debug 'Ωfstr_105', f\"#{1.23}:$03.2f; #{1234567890.123456}:20,.4f;\"\n    f = new_formatter 'en-US'; debug 'Ωfstr_106', f\"#{1.23}:$03.2f; #{1234567890.123456}:20,.4f;\"\n    f = new_formatter 'es-MX'; debug 'Ωfstr_107', f\"#{1.23}:$03.2f; #{1234567890.123456}:20,.4f;\"\n    f = new_formatter 'en-IN'; debug 'Ωfstr_108', f\"#{1.23}:$03.2f; #{1234567890.123456}:20,.4f;\"\n    #.......................................................................................................\n    return null\n\n\n\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  # ( new Test { throw_on_error: true, } ).test { type_instantiation: @intertype_tasks.type_instantiation, }\n  # ( new Test { throw_on_error: true, } ).test @intertype_tasks\n  ( new Test { throw_on_error: false, } ).test @intertype_tasks\n"
  ]
}