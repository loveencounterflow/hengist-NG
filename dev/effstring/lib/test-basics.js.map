{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "AAEA;EAAA;AAAA,MAAA,IAAA,EAAA,GAAA,EAAA,SAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA;;EAEA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,CAAA,CAAE,KAAF,EACE,KADF,EAEE,IAFF,EAGE,IAHF,EAIE,KAJF,EAKE,MALF,EAME,IANF,EAOE,IAPF,EAQE,OARF,CAAA,GAQ4B,GAAG,CAAC,GAAG,CAAC,WAAR,CAAoB,uBAApB,CAR5B;;EASA,CAAA,CAAE,GAAF,EACE,OADF,EAEE,IAFF,EAGE,OAHF,EAIE,GAJF,CAAA,GAI4B,GAAG,CAAC,GAJhC;;EAKA,IAAA,GAA4B,OAAA,CAAQ,sBAAR;;EAC5B,SAAA,GAA4B,IAAI,CAAE,OAAA,CAAQ,mBAAR,CAAF,CAA+B,CAAC,SAApC,CAAA;;EAC5B,IAAA,GAA4B,OAAA,CAAQ,2BAAR;;EAC5B,CAAA,CAAE,IAAF,CAAA,GAA4B,IAA5B,EApBA;;;;;;;;;EA+BA,IAAC,CAAA,eAAD,GAGE,CAAA;;IAAA,cAAA,EAAgB,QAAA,CAAA,CAAA;AAClB,UAAA,SAAA,EAAA,SAAA,EAAA;MAAI,SAAA,GAAY,OAAA,CAAQ,yBAAR,EAAhB;;;MAGI,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,OAAO;MAAV,CAAd,CAAJ,EAA2C,QAA3C;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,OAAO,SAAS,CAAC;MAApB,CAAd,CAAJ,EAA2C,UAA3C,EAJJ;;AAMI,aAAO;IAPO,CAAhB;;IAUA,UAAA,EAAY,QAAA,CAAA,CAAA;AACd,UAAA,UAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA;MAAI,CAAA,CAAE,UAAF,CAAA,GAAiB,OAAA,CAAQ,yBAAR,CAAjB,EAAJ;;MAEI,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;AAAE,YAAA,GAAA,EAAA;wGAAmD;MAArD,CAAd,CAAJ,EAA+E;QAAE,GAAA,EAAK,GAAP;QAAiB,IAAA,EAAM;MAAvB,CAA/E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;AAAE,YAAA,GAAA,EAAA;yGAAmD;MAArD,CAAd,CAAJ,EAA+E;QAAE,GAAA,EAAK,IAAP;QAAiB,IAAA,EAAM;MAAvB,CAA/E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;AAAE,YAAA,GAAA,EAAA;yGAAmD;MAArD,CAAd,CAAJ,EAA+E;QAAE,GAAA,EAAK,IAAP;QAAiB,IAAA,EAAM;MAAvB,CAA/E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;AAAE,YAAA,GAAA,EAAA;2GAAmD;MAArD,CAAd,CAAJ,EAA+E;QAAE,GAAA,EAAK,MAAP;QAAiB,IAAA,EAAM;MAAvB,CAA/E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;AAAE,YAAA,GAAA,EAAA;4GAAmD;MAArD,CAAd,CAAJ,EAA+E;QAAE,GAAA,EAAK,IAAP;QAAiB,IAAA,EAAM;MAAvB,CAA/E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;AAAE,YAAA,GAAA,EAAA;6GAAmD;MAArD,CAAd,CAAJ,EAA+E;QAAE,GAAA,EAAK,IAAP;QAAiB,IAAA,EAAM;MAAvB,CAA/E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;AAAE,YAAA,GAAA,EAAA;+GAAmD;MAArD,CAAd,CAAJ,EAA+E;QAAE,GAAA,EAAK,IAAP;QAAiB,IAAA,EAAM;MAAvB,CAA/E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;AAAE,YAAA,GAAA,EAAA;6GAAmD;MAArD,CAAd,CAAJ,EAA+E;QAAE,GAAA,EAAK,IAAP;QAAiB,IAAA,EAAM;MAAvB,CAA/E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;AAAE,YAAA,GAAA,EAAA;2GAAmD;MAArD,CAAd,CAAJ,EAA+E;QAAE,GAAA,EAAK,MAAP;QAAiB,IAAA,EAAM;MAAvB,CAA/E,EAVJ;;AAYI,aAAO;IAbG,CAVZ;;IA0BA,mBAAA,EAAqB,QAAA,CAAA,CAAA;AACvB,UAAA,CAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA;MAAI,CAAA,CAAE,CAAF,CAAA,GAAS,OAAA,CAAQ,yBAAR,CAAT,EAAJ;;MAEI,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA;MAAJ,CAAd,CAAJ,EAA6E,EAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,IAAA;MAAJ,CAAd,CAAJ,EAA6E,MAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,QAAA;MAAJ,CAAd,CAAJ,EAA6E,UAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,UAAA;MAAJ,CAAd,CAAJ,EAA6E,WAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,WAAA;MAAJ,CAAd,CAAJ,EAA6E,aAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,CAAA;MAAJ,CAAd,CAAJ,EAA6E,OAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,IAAA;MAAJ,CAAd,CAAJ,EAA6E,SAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,KAAA;MAAJ,CAAd,CAAJ,EAA6E,SAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,KAAA;MAAJ,CAAd,CAAJ,EAA6E,SAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,OAAJ,CAAA,OAAA;MAAJ,CAAd,CAAJ,EAA6E,UAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,OAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,OAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,OAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,OAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,MAAA;MAAJ,CAAd,CAAJ,EAA6E,WAA7E,EAhBJ;;AAkBI,aAAO;IAnBY,CA1BrB;;IAgDA,iBAAA,EAAmB,QAAA,CAAA,CAAA;AACrB,UAAA,eAAA,EAAA,0BAAA,EAAA,sBAAA,EAAA,CAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA;MAAI,CAAA,CAAE,CAAF,EACE,eADF,EAEE,sBAFF,EAGE,0BAHF,CAAA,GAGiC,OAAA,CAAQ,yBAAR,CAHjC,EAAJ;;MAKI,IAAC,CAAA,MAAD,CAAQ,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,MAAA;MAAJ,CAAd,CAAR,EAAmD,gEAAnD;MACA,IAAC,CAAA,MAAD,CAAQ,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,EAAA;MAAJ,CAAd,CAAR,EAAmD,sDAAnD;MACA,IAAC,CAAA,MAAD,CAAQ,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,GAAA;MAAJ,CAAd,CAAR,EAAmD,6DAAnD;MACA,IAAC,CAAA,MAAD,CAAQ,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,SAAA;MAAJ,CAAd,CAAR,EAAmD,mEAAnD;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;AAAE,YAAA;AAAC;iBAAI,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,GAAA,EAAL;SAAyB,aAAA;UAAM;iBAAO,CAAA,YAAa,gBAA1B;;MAA5B,CAAd,CAAJ,EAA6F,IAA7F;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;AAAE,YAAA;AAAC;iBAAI,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,GAAA,EAAL;SAAyB,aAAA;UAAM;iBAAO,CAAA,YAAa,uBAA1B;;MAA5B,CAAd,CAAJ,EAAoG,IAApG;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;AAAE,YAAA;AAAC;iBAAI,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,GAAA,EAAL;SAAyB,aAAA;UAAM;iBAAO,CAAA,YAAa,2BAA1B;;MAA5B,CAAd,CAAJ,EAAwG,KAAxG;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;AAAE,YAAA;AAAC;iBAAI,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,SAAA,EAAL;SAAyB,aAAA;UAAM;iBAAO,CAAA,YAAa,gBAA1B;;MAA5B,CAAd,CAAJ,EAA6F,IAA7F;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;AAAE,YAAA;AAAC;iBAAI,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,SAAA,EAAL;SAAyB,aAAA;UAAM;iBAAO,CAAA,YAAa,uBAA1B;;MAA5B,CAAd,CAAJ,EAAoG,IAApG;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;AAAE,YAAA;AAAC;iBAAI,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,SAAA,EAAL;SAAyB,aAAA;UAAM;iBAAO,CAAA,YAAa,2BAA1B;;MAA5B,CAAd,CAAJ,EAAwG,IAAxG;MACA,IAAC,CAAA,MAAD,CAAQ,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,QAAA;MAAJ,CAAd,CAAR,EAAkD,2BAAlD;MACA,IAAC,CAAA,MAAD,CAAQ,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,SAAA;MAAJ,CAAd,CAAR,EAAkD,2BAAlD;MACA,IAAC,CAAA,MAAD,CAAQ,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,WAAA;MAAJ,CAAd,CAAR,EAAkD,2BAAlD;MACA,IAAC,CAAA,MAAD,CAAQ,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,SAAA;MAAJ,CAAd,CAAR,EAAkD,2BAAlD,EAlBJ;;AAoBI,aAAO;IArBU,CAhDnB;;IAwEA,oBAAA,EAAsB,QAAA,CAAA,CAAA;AACxB,UAAA,CAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA;MAAI,CAAA,CAAE,CAAF,CAAA,GAAS,OAAA,CAAQ,yBAAR,CAAT,EAAJ;;MAEI,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,OAAJ,CAAA,QAAA;MAAJ,CAAd,CAAJ,EAA6E,UAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,OAAJ,CAAA,SAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,OAAJ,CAAA,SAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,QAAJ,CAAA,SAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,QAAJ,CAAA,SAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,QAAJ,CAAA,UAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,QAAJ,CAAA,UAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,QAAJ,CAAA,WAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,QAAJ,CAAA,WAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E,EAVJ;;MAYI,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,CAAC,QAAL,CAAA,WAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,CAAC,QAAL,CAAA,YAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,CAAC,QAAL,CAAA,YAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,CAAC,QAAL,CAAA,YAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,CAAC,QAAL,CAAA,YAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,CAAC,QAAL,CAAA,YAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,CAAC,QAAL,CAAA,YAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,CAAC,QAAL,CAAA,aAAA;MAAJ,CAAd,CAAJ,EAA6E,qBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,CAAC,QAAL,CAAA,YAAA;MAAJ,CAAd,CAAJ,EAA6E,qBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,CAAC,QAAL,CAAA,YAAA;MAAJ,CAAd,CAAJ,EAA6E,oBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,CAAC,QAAL,CAAA,WAAA;MAAJ,CAAd,CAAJ,EAA6E,oBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,CAAC,QAAL,CAAA,WAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,CAAC,QAAL,CAAA,UAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,CAAC,QAAL,CAAA,WAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAA,CAAI,CAAC,QAAL,CAAA,UAAA;MAAJ,CAAd,CAAJ,EAA6E,mBAA7E,EA1BJ;;AA4BI,aAAO;IA7Ba,CAxEtB;;IAwGA,aAAA,EAAe,QAAA,CAAA,CAAA;AACjB,UAAA,CAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA;MAAI,CAAA,CAAE,CAAF,CAAA,GAAS,OAAA,CAAQ,yBAAR,CAAT,EAAJ;;;MAGI,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAG,KAAH,CAAA,KAAA;MAAJ,CAAd,CAAJ,EAA2C,KAA3C,EAHJ;MAII,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAG,CAAC,GAAJ,CAAA,OAAA;MAAJ,CAAd,CAAJ,EAA2C,SAA3C,EAJJ;;MAMI,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAG,EAAH,CAAA,KAAA;MAAJ,CAAd,CAAJ,EAA2C,sBAA3C,EANJ;MAOI,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAG,EAAH,CAAA,MAAA;MAAJ,CAAd,CAAJ,EAA2C,sBAA3C,EAPJ;MAQI,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAG,IAAH,CAAA,KAAA;MAAJ,CAAd,CAAJ,EAA2C,KAA3C,EARJ;MASI,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAG,KAAH,CAAA,IAAA;MAAJ,CAAd,CAAJ,EAA2C,QAA3C,EATJ;MAUI,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAG,IAAH,CAAA,MAAA;MAAJ,CAAd,CAAJ,EAA2C,OAA3C,EAVJ;;AAYI,aAAO;IAbM,CAxGf;;IAwHA,wBAAA,EAA0B,QAAA,CAAA,CAAA;AAC5B,UAAA,CAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA;MAAI,CAAA,CAAE,CAAF,CAAA,GAAS,OAAA,CAAQ,yBAAR,CAAT,EAAJ;;;MAGI,IAAC,CAAA,MAAD,CAAQ,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAG,CAAH,CAAA,KAAA;MAAJ,CAAd,CAAR,EAA2C,qBAA3C;MACA,IAAC,CAAA,MAAD,CAAQ,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAG,CAAH,CAAA,MAAA;MAAJ,CAAd,CAAR,EAA2C,uBAA3C;MACA,IAAC,CAAA,MAAD,CAAQ,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAG,CAAH,CAAA,IAAA;MAAJ,CAAd,CAAR,EAA2C,qBAA3C;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAG,CAAH,CAAA,MAAA;MAAJ,CAAd,CAAJ,EAAmD,wBAAnD;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAG,CAAH,CAAA,KAAA;MAAJ,CAAd,CAAJ,EAAmD,GAAnD;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAG,MAAM,CAAC,SAAV,CAAA,GAAA;MAAJ,CAAd,CAAJ,EAAmD,iTAAnD;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAG,MAAM,CAAC,SAAV,CAAA,GAAA;MAAJ,CAAd,CAAJ,EAAmD,gSAAnD,EATJ;;AAWI,aAAO;IAZiB,CAxH1B;;IAuIA,qBAAA,EAAuB,QAAA,CAAA,CAAA;AACzB,UAAA,KAAA,EAAA,CAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,YAAA,EAAA;MAAI,CAAA,CAAE,CAAF,CAAA,GAAS,OAAA,CAAQ,yBAAR,CAAT;MACA,CAAA,CAAC,MAAD,EAAS,YAAT,EAAuB,mBAAvB,CAAA,GAA8C,OAAA,CAAQ,gDAAR,CAA9C;MACA,KAAA,CAAM,WAAN,EAAmB,MAAnB;MACA,KAAA,CAAM,WAAN,EAAmB,YAAnB;MACA,KAAA,CAAM,WAAN,EAAmB,mBAAnB,EAJJ;;MAMI,KAAA,GACE;QAAA,OAAA,EAAY,GAAZ;QACA,SAAA,EAAY,GADZ;QAEA,QAAA,EAAY,CAAE,CAAF,CAFZ;QAGA,QAAA,EAAY,CAAE,GAAF,EAAO,EAAP;MAHZ;MAIF,KAAA,GACE;QAAA,OAAA,EAAY,GAAZ;QACA,SAAA,EAAY,GADZ;QAEA,QAAA,EAAY,CAAE,CAAF,CAFZ;QAGA,QAAA,EAAY,CAAE,EAAF,EAAM,SAAN,CAHZ;QAIA,OAAA,EAAY;MAJZ;MAMC,CAAA,CAAA,CAAA,GAAA,EAAA;AACP,YAAA,MAAA,EAAA,SAAA,EAAA;QAAM,MAAA,GAAS,mBAAA,CAAoB,KAApB;AACT;UACE,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;mBAAG,CAAE,MAAM,CAAC,MAAP,CAAc,OAAd,CAAF,CAAA,CAA0B,WAA1B;UAAH,CAAd,CAAJ,EAA8D,sBAA9D;UACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;mBAAG,CAAE,MAAM,CAAC,MAAP,CAAc,MAAd,CAAF,CAAA,CAA0B,WAA1B;UAAH,CAAd,CAAJ,EAA8D,sBAA9D,EAFF;SAAA;UAIE,mBAAA,CAAoB,KAApB,EAJF;;AAKA,eAAO;MAPN,CAAA;MASA,CAAA,CAAA,CAAA,GAAA,EAAA;AACP,YAAA,MAAA,EAAA,SAAA,EAAA;QAAM,MAAA,GAAS,mBAAA,CAAoB,KAApB;AACT;UACE,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;mBAAG;UAAH,CAAd,CAAJ,EAAqC,MAAM,CAAC,YAA5C,EAAR;;UAEQ,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;mBAAG,CAAE,MAAM,CAAC,YAAP,CAAoB,KAApB,EAA2B,GAA3B,CAAF,CAAA,CAAmC,WAAnC;UAAH,CAAd,CAAJ,EAAuE,YAAvE,EAHF;SAAA;UAKE,mBAAA,CAAoB,KAApB,EALF;;AAMA,eAAO;MARN,CAAA,IA3BP;;AAqCI,aAAO;IAtCc,CAvIvB;;IAgLA,qBAAA,EAAuB,QAAA,CAAA,CAAA;AACzB,UAAA,CAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA;MAAI,CAAA,CAAE,CAAF,CAAA,GAAS,OAAA,CAAQ,yBAAR,CAAT,EAAJ;;MAEI,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAG,GAAH,CAAA,GAAA;MAAJ,CAAd,CAAJ,EAA6C,GAA7C;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAG,GAAH,CAAA,MAAA;MAAJ,CAAd,CAAJ,EAA8C,sBAA9C;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAG,GAAH,CAAA,OAAA;MAAJ,CAAd,CAAJ,EAA6C,sBAA7C;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAG,IAAH,CAAA,OAAA;MAAJ,CAAd,CAAJ,EAA4C,sBAA5C;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAG,MAAH,CAAA,OAAA;MAAJ,CAAd,CAAJ,EAA8C,sBAA9C;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAC,CAAA,CAAA,CAAG,GAAH,CAAA,IAAA;MAAJ,CAAd,CAAJ,EAA6C,IAA7C,EAPJ;;AASI,aAAO;IAVc,CAhLvB;;IA6LA,gBAAA,EAAkB,QAAA,CAAA,CAAA;AACpB,UAAA,UAAA,EAAA,eAAA,EAAA,sBAAA,EAAA,mBAAA,EAAA,sBAAA,EAAA,CAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA;MAAI,CAAA,CAAE,CAAF,EACE,QADF,EAEE,eAFF,EAGE,UAHF,EAIE,sBAJF,EAKE,sBALF,EAME,mBANF,CAAA,GAMuC,OAAA,CAAQ,yBAAR,CANvC,EAAJ;;MAQI,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,oBAAA,IAA6B,CAAE,CAAE,OAAO,UAAT,CAAA,KAAqC,QAAvC;MAAhC,CAAd,CAAJ,EAAyG,IAAzG;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,gCAAA,IAA6B,CAAE,CAAE,OAAO,sBAAT,CAAA,KAAqC,UAAvC;MAAhC,CAAd,CAAJ,EAAyG,IAAzG;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,gCAAA,IAA6B,CAAE,CAAE,OAAO,sBAAT,CAAA,KAAqC,UAAvC;MAAhC,CAAd,CAAJ,EAAyG,IAAzG;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,6BAAA,IAA6B,CAAE,CAAE,OAAO,mBAAT,CAAA,KAAqC,UAAvC;MAAhC,CAAd,CAAJ,EAAyG,IAAzG,EAXJ;;MAaI,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG;MAAH,CAAd,CAAJ,EAAuD;QAAE,OAAA,EAAS,GAAX;QAAgB,SAAA,EAAW,GAA3B;QAAgC,QAAA,EAAU,CAAE,CAAF,CAA1C;QAAiD,QAAA,EAAU,CAAE,GAAF,EAAO,EAAP,CAA3D;QAAwE,QAAA,EAAU,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,GAA1C,EAA+C,GAA/C,CAAlF;QAAwI,OAAA,EAAS,GAAjJ;QAAsJ,KAAA,EAAO,GAA7J;QAAkK,GAAA,EAAK;MAAvK,CAAvD;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,sBAAA,CAAuB,OAAvB;MAAH,CAAd,CAAJ,EAAuD;QAAE,OAAA,EAAS,GAAX;QAAgB,SAAA,EAAW,GAA3B;QAAgC,QAAA,EAAU,CAAE,CAAF,CAA1C;QAAiD,QAAA,EAAU,CAAE,EAAF,EAAM,OAAN,CAA3D;QAA4E,QAAA,EAAU,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,GAA1C,EAA+C,GAA/C;MAAtF,CAAvD;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,sBAAA,CAAuB,OAAvB;MAAH,CAAd,CAAJ,EAAuD;QAAE,OAAA,EAAS,GAAX;QAAgB,SAAA,EAAW,GAA3B;QAAgC,QAAA,EAAU,CAAE,CAAF,CAA1C;QAAiD,QAAA,EAAU,CAAE,GAAF,EAAO,EAAP;MAA3D,CAAvD;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,sBAAA,CAAuB,OAAvB;MAAH,CAAd,CAAJ,EAAuD;QAAE,OAAA,EAAS,GAAX;QAAgB,SAAA,EAAW,GAA3B;QAAgC,QAAA,EAAU,CAAE,CAAF,CAA1C;QAAiD,QAAA,EAAU,CAAE,EAAF,EAAM,IAAN;MAA3D,CAAvD;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,sBAAA,CAAuB,OAAvB;MAAH,CAAd,CAAJ,EAAuD;QAAE,OAAA,EAAS,GAAX;QAAgB,SAAA,EAAW,GAA3B;QAAgC,QAAA,EAAU,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,CAA1C;QAA4E,QAAA,EAAU,CAAE,GAAF,EAAO,EAAP;MAAtF,CAAvD,EAjBJ;;MAmBI,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,mBAAA,CAAoB,OAApB;MAAH,CAAd,CAAJ,EAAuD;QAAE,OAAA,EAAS,GAAX;QAAgB,SAAA,EAAW,GAA3B;QAAgC,QAAA,EAAU,CAAE,CAAF,CAA1C;QAAiD,QAAA,EAAU,CAAE,EAAF,EAAM,OAAN,CAA3D;QAA4E,QAAA,EAAU,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,GAA1C,EAA+C,GAA/C;MAAtF,CAAvD;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,mBAAA,CAAoB,OAApB;MAAH,CAAd,CAAJ,EAAuD;QAAE,OAAA,EAAS,GAAX;QAAgB,SAAA,EAAW,GAA3B;QAAgC,QAAA,EAAU,CAAE,CAAF,CAA1C;QAAiD,QAAA,EAAU,CAAE,GAAF,EAAO,EAAP;MAA3D,CAAvD;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,mBAAA,CAAoB,OAApB;MAAH,CAAd,CAAJ,EAAuD;QAAE,OAAA,EAAS,GAAX;QAAgB,SAAA,EAAW,GAA3B;QAAgC,QAAA,EAAU,CAAE,CAAF,CAA1C;QAAiD,QAAA,EAAU,CAAE,EAAF,EAAM,IAAN;MAA3D,CAAvD;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,mBAAA,CAAoB,OAApB;MAAH,CAAd,CAAJ,EAAuD;QAAE,OAAA,EAAS,GAAX;QAAgB,SAAA,EAAW,GAA3B;QAAgC,QAAA,EAAU,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,CAA1C;QAA4E,QAAA,EAAU,CAAE,GAAF,EAAO,EAAP;MAAtF,CAAvD;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,mBAAA,CAAoB,CAAA,CAApB;MAAH,CAAd,CAAJ,EAAuD,CAAA,CAAvD,EAvBJ;;MAyBI,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,sBAAA,CAAuB,OAAvB;MAAH,CAAd,CAAJ,EAAuG;QAAE,OAAA,EAAS,GAAX;QAAgB,SAAA,EAAW,GAA3B;QAAgC,QAAA,EAAU,CAAE,CAAF,CAA1C;QAAiD,QAAA,EAAU,CAAE,EAAF,EAAM,OAAN,CAA3D;QAA4E,QAAA,EAAU,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,GAA1C,EAA+C,GAA/C,CAAtF;QAA4I,OAAA,EAAS,GAArJ;QAA0J,KAAA,EAAO,GAAjK;QAAsK,GAAA,EAAK;MAA3K,CAAvG;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,sBAAA,CAAuB,OAAvB;MAAH,CAAd,CAAJ,EAAuG;QAAE,OAAA,EAAS,GAAX;QAAgB,SAAA,EAAW,GAA3B;QAAgC,QAAA,EAAU,CAAE,CAAF,CAA1C;QAAiD,QAAA,EAAU,CAAE,GAAF,EAAO,EAAP,CAA3D;QAAwE,QAAA,EAAU,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,GAA1C,EAA+C,GAA/C,CAAlF;QAAwI,OAAA,EAAS,GAAjJ;QAAsJ,KAAA,EAAO,GAA7J;QAAkK,GAAA,EAAK;MAAvK,CAAvG;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,sBAAA,CAAuB,OAAvB;MAAH,CAAd,CAAJ,EAAuG;QAAE,OAAA,EAAS,GAAX;QAAgB,SAAA,EAAW,GAA3B;QAAgC,QAAA,EAAU,CAAE,CAAF,CAA1C;QAAiD,QAAA,EAAU,CAAE,EAAF,EAAM,IAAN,CAA3D;QAAyE,QAAA,EAAU,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,GAA1C,EAA+C,GAA/C,CAAnF;QAAyI,OAAA,EAAS,GAAlJ;QAAuJ,KAAA,EAAO,GAA9J;QAAmK,GAAA,EAAK;MAAxK,CAAvG;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,sBAAA,CAAgC;UAAE,OAAA,EAAS;QAAX,CAAhC;MAAH,CAAd,CAAJ,EAAuG;QAAE,OAAA,EAAS,GAAX;QAAgB,SAAA,EAAW,GAA3B;QAAgC,QAAA,EAAU,CAAE,CAAF,CAA1C;QAAiD,QAAA,EAAU,CAAE,GAAF,EAAO,EAAP,CAA3D;QAAwE,QAAA,EAAU,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,GAA1C,EAA+C,GAA/C,CAAlF;QAAwI,OAAA,EAAS,QAAjJ;QAA2J,KAAA,EAAO,GAAlK;QAAuK,GAAA,EAAK;MAA5K,CAAvG;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,sBAAA,CAAuB,OAAvB,EAAgC;UAAE,OAAA,EAAS;QAAX,CAAhC;MAAH,CAAd,CAAJ,EAAuG;QAAE,OAAA,EAAS,GAAX;QAAgB,SAAA,EAAW,GAA3B;QAAgC,QAAA,EAAU,CAAE,CAAF,CAA1C;QAAiD,QAAA,EAAU,CAAE,EAAF,EAAM,IAAN,CAA3D;QAAyE,QAAA,EAAU,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,GAA1C,EAA+C,GAA/C,CAAnF;QAAyI,OAAA,EAAS,QAAlJ;QAA4J,KAAA,EAAO,GAAnK;QAAwK,GAAA,EAAK;MAA7K,CAAvG;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,sBAAA,CAAuB,OAAvB,EAAgC;UAAE,OAAA,EAAS;QAAX,CAAhC,EAA2D;UAAE,SAAA,EAAW;QAAb,CAA3D;MAAH,CAAd,CAAJ,EAAuG;QAAE,OAAA,EAAS,GAAX;QAAgB,SAAA,EAAW,GAA3B;QAAgC,QAAA,EAAU,CAAE,CAAF,CAA1C;QAAiD,QAAA,EAAU,CAAE,EAAF,EAAM,IAAN,CAA3D;QAAyE,QAAA,EAAU,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,GAA1C,EAA+C,GAA/C,CAAnF;QAAyI,OAAA,EAAS,QAAlJ;QAA4J,KAAA,EAAO,GAAnK;QAAwK,GAAA,EAAK;MAA7K,CAAvG;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,sBAAA,CAAuB,CAAA,CAAvB;MAAH,CAAd,CAAJ,EAAuG;QAAE,OAAA,EAAS,GAAX;QAAgB,SAAA,EAAW,GAA3B;QAAgC,QAAA,EAAU,CAAE,CAAF,CAA1C;QAAiD,QAAA,EAAU,CAAE,GAAF,EAAO,EAAP,CAA3D;QAAwE,QAAA,EAAU,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,GAA1C,EAA+C,GAA/C,CAAlF;QAAwI,OAAA,EAAS,GAAjJ;QAAsJ,KAAA,EAAO,GAA7J;QAAkK,GAAA,EAAK;MAAvK,CAAvG;MAEG,CAAA,CAAA,CAAA,GAAA,EAAA;AACP,YAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA;QAAM,UAAA,GAAc,sBAAA,CAAuB,OAAvB;QACd,MAAA,GAAc,UAAU,CAAC,YAAX,CAAwB,UAAxB;QACd,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;iBAAG,CAAE,MAAM,CAAC,MAAP,CAAc,UAAd,CAAF,CAAA,CAA6B,QAA7B;QAAH,CAAd,CAAJ,EAAiE,mBAAjE;QACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;iBAAG,CAAE,MAAM,CAAC,MAAP,CAAc,UAAd,CAAF,CAAA,CAA6B,UAA7B;QAAH,CAAd,CAAJ,EAAiE,qBAAjE;AACA,eAAO;MALN,CAAA;MAOA,CAAA,CAAA,CAAA,GAAA,EAAA;AACP,YAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA;QAAM,UAAA,GAAc,sBAAA,CAAuB,OAAvB,EAAgC;UAAE,QAAA,EAAU,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,GAA1C,EAA+C,GAA/C,CAAZ;UAAmE,OAAA,EAAS;QAA5E,CAAhC;QACd,MAAA,GAAc,UAAU,CAAC,YAAX,CAAwB,UAAxB;QACd,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;iBAAG,CAAE,MAAM,CAAC,MAAP,CAAc,UAAd,CAAF,CAAA,CAA6B,QAA7B;QAAH,CAAd,CAAJ,EAAiE,mBAAjE;QACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;iBAAG,CAAE,MAAM,CAAC,MAAP,CAAc,UAAd,CAAF,CAAA,CAA6B,UAA7B;QAAH,CAAd,CAAJ,EAAiE,qBAAjE;AACA,eAAO;MALN,CAAA,IAxCP;;MA+CO,CAAA,CAAE,CAAF,CAAA,GAAA;AACP,YAAA;QAAM,CAAA,GAAI,QAAA,CAAS,OAAT,EAAkB;UAAE,QAAA,EAAU,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,GAA1C,EAA+C,GAA/C,CAAZ;UAAmE,OAAA,EAAS;QAA5E,CAAlB;QACJ,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;iBAAK,CAAC,CAAA,CAAA,CAAG,QAAH,CAAA,SAAA;QAAN,CAAd,CAAJ,EAAuD,mBAAvD;AACA,eAAO;MAHN,CAAA,EAAE,GA/CT;;MAoDI,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAE,QAAA,CAAS,OAAT,CAAF,CAAoB,CAAA,CAAA,CAAG,qBAAH,CAAA,UAAA;MAAvB,CAAd,CAAJ,EAAiF,uCAAjF;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAE,QAAA,CAAS;UAAE,QAAA,EAAU,CAAE,CAAF;QAAZ,CAAT,CAAF,CAAkC,CAAA,CAAA,CAAG,qBAAH,CAAA,UAAA;MAArC,CAAd,CAAJ,EAA+F,uCAA/F;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAE,QAAA,CAAA,CAAF,CAAoB,CAAA,CAAA,CAAG,IAAH,CAAA,SAAA,CAAA,CAAmB,iBAAnB,CAAA,SAAA;MAAvB,CAAd,CAAJ,EAA4F,6BAA5F;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAE,QAAA,CAAS,CAAA,CAAT,CAAF,CAAoB,CAAA,CAAA,CAAG,IAAH,CAAA,SAAA,CAAA,CAAmB,iBAAnB,CAAA,SAAA;MAAvB,CAAd,CAAJ,EAA4F,6BAA5F;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAE,QAAA,CAAS,OAAT,CAAF,CAAoB,CAAA,CAAA,CAAG,IAAH,CAAA,SAAA,CAAA,CAAmB,iBAAnB,CAAA,SAAA;MAAvB,CAAd,CAAJ,EAA4F,8BAA5F;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAE,QAAA,CAAS,OAAT,CAAF,CAAoB,CAAA,CAAA,CAAG,IAAH,CAAA,SAAA,CAAA,CAAmB,iBAAnB,CAAA,SAAA;MAAvB,CAAd,CAAJ,EAA4F,6BAA5F;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAE,QAAA,CAAS,OAAT,CAAF,CAAoB,CAAA,CAAA,CAAG,IAAH,CAAA,SAAA,CAAA,CAAmB,iBAAnB,CAAA,SAAA;MAAvB,CAAd,CAAJ,EAA4F,6BAA5F;MACA,IAAC,CAAA,EAAD,CAAI,CAAE,SAAA,GAAY,QAAA,CAAA,CAAA;eAAG,CAAE,QAAA,CAAS,OAAT,CAAF,CAAoB,CAAA,CAAA,CAAG,IAAH,CAAA,SAAA,CAAA,CAAmB,iBAAnB,CAAA,SAAA;MAAvB,CAAd,CAAJ,EAA4F,6BAA5F,EA3DJ;;AA6DI,aAAO;IA9DS;EA7LlB,EAlCF;;;EAkSA,IAAG,MAAA,KAAU,OAAO,CAAC,IAArB;IAA+B,MAAS,CAAA,CAAA,CAAA,GAAA,EAAA;;MAEtC,CAAE,IAAI,IAAJ,CAAS;QAAE,cAAA,EAAgB;MAAlB,CAAT,CAAF,CAAuC,CAAC,IAAxC,CAA6C,IAAC,CAAA,eAA9C;aACA,CAAE,IAAI,IAAJ,CAAS;QAAE,cAAA,EAAgB;MAAlB,CAAT,CAAF,CAAsC,CAAC,IAAvC,CAA4C;QAAE,gBAAA,EAAkB,IAAC,CAAA,eAAe,CAAC;MAArC,CAA5C;IAHsC,CAAA,IAAxC;;AAlSA",
  "sourcesContent": [
    "\n\n'use strict'\n\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'intertype/test-basics'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\nWGUY                      = require '../../../apps/webguy'\nTMP_types                 = new ( require 'intertype-203.0.0' ).Intertype()\nGTNG                      = require '../../../apps/guy-test-NG'\n{ Test                  } = GTNG\n# test_mode                 = 'throw_failures'\n# test_mode                 = 'throw_errors'\n# test_mode                 = 'failsafe'\n\n\n\n\n############################################################################################################\n#\n#===========================================================================================================\n@intertype_tasks =\n\n  #---------------------------------------------------------------------------------------------------------\n  module_exports: ->\n    EFFSTRING = require '../../../apps/effstring'\n    #.....................................................................................................\n    # @throws ( Ωfstr___1 = -> create_typespace() ), /declaration for type 'wholenumber' contains forward reference to type 'integer'/\n    @eq ( Ωfstr___2 = -> typeof EFFSTRING   ), 'object'\n    @eq ( Ωfstr___3 = -> typeof EFFSTRING.f ), 'function'\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  re_matches: ->\n    { _format_re } = require '../../../apps/effstring'\n    #.....................................................................................................\n    @eq ( Ωfstr___4 = ->  ( ( \":5;)\"        ).match _format_re )?.groups ? null ), { fmt: '5',      tail: ')'       }\n    @eq ( Ωfstr___5 = ->  ( ( \":>5;)\"       ).match _format_re )?.groups ? null ), { fmt: '>5',     tail: ')'       }\n    @eq ( Ωfstr___6 = ->  ( ( \":<5;)\"       ).match _format_re )?.groups ? null ), { fmt: '<5',     tail: ')'       }\n    @eq ( Ωfstr___7 = ->  ( ( \":>5.2;)\"     ).match _format_re )?.groups ? null ), { fmt: '>5.2',   tail: ')'       }\n    @eq ( Ωfstr___8 = ->  ( ( \":\\\\;<5;)\"    ).match _format_re )?.groups ? null ), { fmt: '\\\\',     tail: '<5;)'    }\n    @eq ( Ωfstr___9 = ->  ( ( \":\\\\;<5;);\"   ).match _format_re )?.groups ? null ), { fmt: '\\\\',     tail: '<5;);'   }\n    @eq ( Ωfstr__10 = ->  ( ( \":\\\\;<5;)\\\\;\" ).match _format_re )?.groups ? null ), { fmt: '\\\\',     tail: '<5;)\\\\;' }\n    @eq ( Ωfstr__11 = ->  ( ( \":\\\\;>15;)\"   ).match _format_re )?.groups ? null ), { fmt: '\\\\',     tail: '>15;)'   }\n    @eq ( Ωfstr__12 = ->  ( ( \":;>15;)\"     ).match _format_re )?.groups ? null ), { fmt: ';>15',   tail: ')'       }\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  basic_functionality: ->\n    { f, } = require '../../../apps/effstring'\n    #.....................................................................................................\n    @eq ( Ωfstr__13 = -> f''                                                  ), ''\n    @eq ( Ωfstr__14 = -> f'helo'                                              ), 'helo'\n    @eq ( Ωfstr__15 = -> f'(#{123})'                                          ), '(#{123})'\n    @eq ( Ωfstr__16 = -> f'(#{123}\\;)'                                        ), '(#{123};)'\n    @eq ( Ωfstr__17 = -> f'(#{123}\\\\;)'                                       ), '(#{123}\\\\;)'\n    @eq ( Ωfstr__18 = -> f\"(#{123})\"                                          ), '(123)'\n    @eq ( Ωfstr__19 = -> f\"(#{123}:5;)\"                                       ), '(  123)'\n    @eq ( Ωfstr__20 = -> f\"(#{123}:>5;)\"                                      ), '(  123)'\n    @eq ( Ωfstr__21 = -> f\"(#{123}:<5;)\"                                      ), '(123  )'\n    @eq ( Ωfstr__22 = -> f\"(#{123.456}:>5.2;)\"                                ), '(1.2e+2)'\n    @eq ( Ωfstr__23 = -> f\"(#{123}:;>15;)\"                                    ), '(;;;;;;;;;;;;123)'\n    @eq ( Ωfstr__24 = -> f\"(#{123}:;<15;)\"                                    ), '(123;;;;;;;;;;;;)'\n    @eq ( Ωfstr__25 = -> f\"(#{123}:>>15;)\"                                    ), '(>>>>>>>>>>>>123)'\n    @eq ( Ωfstr__26 = -> f\"(#{123}:<>15;)\"                                    ), '(<<<<<<<<<<<<123)'\n    @eq ( Ωfstr__27 = -> f\"(#{123}:;<7;)\"                                     ), '(123;;;;)'\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  malformed_formats: ->\n    { f\n      Effstring_error\n      Effstring_syntax_error\n      Effstring_lib_syntax_error } = require '../../../apps/effstring'\n    #.......................................................................................................\n    @throws ( Ωfstr__28 = -> f\"(#{123}:;>15)\"       ), /\\(Effstring_syntax_error\\) illegal format expression ':;>15\\)'/\n    @throws ( Ωfstr__29 = -> f\"(#{123}:)\"           ), /\\(Effstring_syntax_error\\) illegal format expression/\n    @throws ( Ωfstr__30 = -> f\"(#{123}:;)\"          ), /\\(Effstring_syntax_error\\) illegal format expression ':;\\)'/\n    @throws ( Ωfstr__31 = -> f\"(#{123}:--->3f;)\"    ), /\\(Effstring_lib_syntax_error\\) illegal format expression '--->3f'/\n    @eq ( Ωfstr__32 = -> try f\"(#{123}:;)\"        catch e then e instanceof Effstring_error   ), true\n    @eq ( Ωfstr__33 = -> try f\"(#{123}:;)\"        catch e then e instanceof Effstring_syntax_error   ), true\n    @eq ( Ωfstr__34 = -> try f\"(#{123}:;)\"        catch e then e instanceof Effstring_lib_syntax_error   ), false\n    @eq ( Ωfstr__35 = -> try f\"(#{123}:--->3f;)\"  catch e then e instanceof Effstring_error   ), true\n    @eq ( Ωfstr__36 = -> try f\"(#{123}:--->3f;)\"  catch e then e instanceof Effstring_syntax_error   ), true\n    @eq ( Ωfstr__37 = -> try f\"(#{123}:--->3f;)\"  catch e then e instanceof Effstring_lib_syntax_error   ), true\n    @throws ( Ωfstr__38 = -> f\"(#{123}:\\\\;<5;)\"    ), /illegal format expression/\n    @throws ( Ωfstr__39 = -> f\"(#{123}:\\\\;<5;);\"   ), /illegal format expression/\n    @throws ( Ωfstr__40 = -> f\"(#{123}:\\\\;<5;)\\\\;\" ), /illegal format expression/\n    @throws ( Ωfstr__41 = -> f\"(#{123}:\\\\;>15;)\"   ), /illegal format expression/\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  fixed_point_notation: ->\n    { f, } = require '../../../apps/effstring'\n    #.....................................................................................................\n    @eq ( Ωfstr__42 = -> f\"(#{123.456}:>5.2f;)\"                               ), '(123.46)'\n    @eq ( Ωfstr__43 = -> f\"(#{123.456}:>15.2f;)\"                              ), '(         123.46)'\n    @eq ( Ωfstr__44 = -> f\"(#{123.456}:<15.2f;)\"                              ), '(123.46         )'\n    @eq ( Ωfstr__45 = -> f\"(#{1234.567}:>15.2f;)\"                             ), '(        1234.57)'\n    @eq ( Ωfstr__46 = -> f\"(#{1234.567}:<15.2f;)\"                             ), '(1234.57        )'\n    @eq ( Ωfstr__47 = -> f\"(#{1234.567}:=>15.2f;)\"                            ), '(========1234.57)'\n    @eq ( Ωfstr__48 = -> f\"(#{1234.567}:=<15.2f;)\"                            ), '(1234.57========)'\n    @eq ( Ωfstr__49 = -> f\"(#{1234.567}:=>15,.2f;)\"                           ), '(=======1,234.57)'\n    @eq ( Ωfstr__50 = -> f\"(#{1234.567}:=<15,.2f;)\"                           ), '(1,234.57=======)'\n    #.......................................................................................................\n    @eq ( Ωfstr__51 = -> f\"(#{-1234.567}:_>15,.2f;)\"                          ), '(______−1,234.57)'\n    @eq ( Ωfstr__52 = -> f\"(#{+1234.567}:_>-15,.2f;)\"                         ), '(_______1,234.57)'\n    @eq ( Ωfstr__53 = -> f\"(#{-1234.567}:_>-15,.2f;)\"                         ), '(______−1,234.57)'\n    @eq ( Ωfstr__54 = -> f\"(#{+1234.567}:_>+15,.2f;)\"                         ), '(______+1,234.57)'\n    @eq ( Ωfstr__55 = -> f\"(#{-1234.567}:_>+15,.2f;)\"                         ), '(______−1,234.57)'\n    @eq ( Ωfstr__56 = -> f\"(#{+1234.567}:_=+15,.2f;)\"                         ), '(+______1,234.57)'\n    @eq ( Ωfstr__57 = -> f\"(#{-1234.567}:_=+15,.2f;)\"                         ), '(−______1,234.57)'\n    @eq ( Ωfstr__58 = -> f\"(#{-1234.567}:_=+015,.2f;)\"                        ), '(−0,000,001,234.57)'\n    @eq ( Ωfstr__59 = -> f\"(#{-1234.567}:=+015,.2f;)\"                         ), '(−0,000,001,234.57)'\n    @eq ( Ωfstr__60 = -> f\"(#{+1234.567}:_=015,.2f;)\"                         ), '(0,000,001,234.57)'\n    @eq ( Ωfstr__61 = -> f\"(#{+1234.567}:=015,.2f;)\"                          ), '(0,000,001,234.57)'\n    @eq ( Ωfstr__62 = -> f\"(#{+1234.567}:_=015.2f;)\"                          ), '(000000001234.57)'\n    @eq ( Ωfstr__63 = -> f\"(#{+1234.567}:=015.2f;)\"                           ), '(000000001234.57)'\n    @eq ( Ωfstr__64 = -> f\"(#{-1234.567}:_=015.2f;)\"                          ), '(−00000001234.57)'\n    @eq ( Ωfstr__65 = -> f\"(#{-1234.567}:=015.2f;)\"                           ), '(−00000001234.57)'\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  from_the_docs: ->\n    { f, } = require '../../../apps/effstring'\n    ### TAINT check with `$` format will rely on locale setting of the machine the tests are running on ###\n    #.....................................................................................................\n    @eq ( Ωfstr__66 = -> f\"#{0.123}:.0%;\"   ), '12%'                  # rounded percentage, \"12%\"\n    @eq ( Ωfstr__67 = -> f\"#{-3.5}:($.2f;\"  ), '($3.50)'              # localized fixed-point currency, \"(£3.50)\"\n    # @eq ( Ωfstr__68 = -> f\"#{-3.5}:($.2f;\"  ), '(£3.50)'              # localized fixed-point currency, \"(£3.50)\"\n    @eq ( Ωfstr__69 = -> f\"#{42}:+20;\"      ), '                 +42' # space-filled and signed, \"                 +42\"\n    @eq ( Ωfstr__70 = -> f\"#{42}:.^20;\"     ), '.........42.........' # dot-filled and centered, \".........42.........\"\n    @eq ( Ωfstr__71 = -> f\"#{42e6}:.2s;\"    ), '42M'                  # SI-prefix with two significant digits, \"42M\"\n    @eq ( Ωfstr__72 = -> f\"#{48879}:#x;\"    ), '0xbeef'               # prefixed lowercase hexadecimal, \"0xbeef\"\n    @eq ( Ωfstr__73 = -> f\"#{4223}:,.2r;\"   ), '4,200'                # grouped thousands with two significant digits, \"4,200\"\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  effstring_format_test_js: ->\n    { f, } = require '../../../apps/effstring'\n    ### TAINT check with `$` format will rely on locale setting of the machine the tests are running on ###\n    #.....................................................................................................\n    @throws ( Ωfstr__74 = -> f\"#{0}:foo;\"   ), /invalid format: foo/\n    @throws ( Ωfstr__75 = -> f\"#{0}:.-2s;\"  ), /invalid format: \\.-2s/\n    @throws ( Ωfstr__76 = -> f\"#{0}:.f;\"    ), /invalid format: \\.f/\n    @eq ( Ωfstr__77 = -> f\"#{0}:.30f;\"              ), \"0.00000000000000000000\"\n    @eq ( Ωfstr__78 = -> f\"#{1}:.0g;\"               ), \"1\"\n    @eq ( Ωfstr__79 = -> f\"#{Number.MIN_VALUE}:s;\"  ), \"0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005y\"\n    @eq ( Ωfstr__80 = -> f\"#{Number.MAX_VALUE}:s;\"  ), \"179769000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000Y\"\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  defaultlocale_test_js: ->\n    { f, } = require '../../../apps/effstring'\n    {format, formatPrefix, formatDefaultLocale} = require '../../../apps/effstring/node_modules/d3-format'\n    debug 'Ωfstr__81', format\n    debug 'Ωfstr__82', formatPrefix\n    debug 'Ωfstr__83', formatDefaultLocale\n    #.......................................................................................................\n    en_US =\n      decimal:    '.',\n      thousands:  ',',\n      grouping:   [ 3, ],\n      currency:   [ '$', '', ]\n    fr_FR =\n      decimal:    ',',\n      thousands:  '.',\n      grouping:   [ 3, ],\n      currency:   [ '', '\\u00a0€', ],\n      percent:    '\\u202f%'\n    #.......................................................................................................\n    do =>\n      locale = formatDefaultLocale fr_FR\n      try\n        @eq ( Ωfstr__84 = -> ( locale.format \"$,.2f\" ) 12345678.90 ), \"12.345.678,90\\u00a0€\"\n        @eq ( Ωfstr__85 = -> ( locale.format \",.0%\"  ) 12345678.90 ), \"1.234.567.890\\u202f%\" # narrow no-break space\n      finally\n        formatDefaultLocale en_US\n      return null\n    #.......................................................................................................\n    do =>\n      locale = formatDefaultLocale fr_FR\n      try\n        @eq ( Ωfstr__86 = -> formatPrefix ), locale.formatPrefix\n        # @eq ( Ωfstr__87 = -> ( formatPrefix \",.2\", 1e3 ) 12345678.90 ), \"12.345,68k\"\n        @eq ( Ωfstr__88 = -> ( locale.formatPrefix \",.2\", 1e3 ) 12345678.90 ), \"12.345,68k\"\n      finally\n        formatDefaultLocale en_US\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  format_type_c_test_js: ->\n    { f, } = require '../../../apps/effstring'\n    #.......................................................................................................\n    @eq ( Ωfstr__89 = -> f\"#{'☃'}:c;\"         ), \"☃\"\n    @eq ( Ωfstr__90 = -> f\"#{'☃'}:020c;\"      ),  \"0000000000000000000☃\"\n    @eq ( Ωfstr__91 = -> f\"#{'☃'}: ^20c;\"     ), \"         ☃          \"\n    @eq ( Ωfstr__92 = -> f\"#{'経済'}: ^20c;\"   ), '         経済         '\n    @eq ( Ωfstr__93 = -> f\"#{'abcd'}: ^20c;\"   ), '        abcd        '\n    @eq ( Ωfstr__94 = -> f\"#{'☃'}:$c;\"        ), \"$☃\"\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  locale_internals: ->\n    { f\n      new_ftag\n      _default_locale\n      _d3_format\n      _locale_cfg_from_bcp47\n      _format_cfg_from_hints\n      _hint_as_locale_cfg              } = require '../../../apps/effstring'\n    #.......................................................................................................\n    @eq ( Ωfstr__95 = -> _d3_format?              and ( ( typeof _d3_format             ) is 'object'   ) ), true\n    @eq ( Ωfstr__96 = -> _locale_cfg_from_bcp47?  and ( ( typeof _locale_cfg_from_bcp47 ) is 'function' ) ), true\n    @eq ( Ωfstr__97 = -> _format_cfg_from_hints?  and ( ( typeof _format_cfg_from_hints ) is 'function' ) ), true\n    @eq ( Ωfstr__98 = -> _hint_as_locale_cfg?     and ( ( typeof _hint_as_locale_cfg    ) is 'function' ) ), true\n    #.......................................................................................................\n    @eq ( Ωfstr__99 = -> _default_locale                ), { decimal: '.', thousands: ',', grouping: [ 3 ], currency: [ '$', '' ], numerals: [ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' ], percent: '%', minus: '−', nan: 'NaN' }\n    @eq ( Ωfstr_100 = -> _locale_cfg_from_bcp47 'ar-AE' ), { decimal: '٫', thousands: '٬', grouping: [ 3 ], currency: [ '', ' د.إ.' ], numerals: [ '٠', '١', '٢', '٣', '٤', '٥', '٦', '٧', '٨', '٩' ] }\n    @eq ( Ωfstr_101 = -> _locale_cfg_from_bcp47 'en-US' ), { decimal: '.', thousands: ',', grouping: [ 3 ], currency: [ '$', '' ] }\n    @eq ( Ωfstr_102 = -> _locale_cfg_from_bcp47 'de-DE' ), { decimal: ',', thousands: '.', grouping: [ 3 ], currency: [ '', ' €' ] }\n    @eq ( Ωfstr_103 = -> _locale_cfg_from_bcp47 'en-IN' ), { decimal: '.', thousands: ',', grouping: [ 3, 2, 2, 2, 2, 2, 2, 2, 2, 2 ], currency: [ '₹', '' ] }\n    #.......................................................................................................\n    @eq ( Ωfstr_104 = -> _hint_as_locale_cfg 'ar-AE'    ), { decimal: '٫', thousands: '٬', grouping: [ 3 ], currency: [ '', ' د.إ.' ], numerals: [ '٠', '١', '٢', '٣', '٤', '٥', '٦', '٧', '٨', '٩' ] }\n    @eq ( Ωfstr_105 = -> _hint_as_locale_cfg 'en-US'    ), { decimal: '.', thousands: ',', grouping: [ 3 ], currency: [ '$', '' ] }\n    @eq ( Ωfstr_106 = -> _hint_as_locale_cfg 'de-DE'    ), { decimal: ',', thousands: '.', grouping: [ 3 ], currency: [ '', ' €' ] }\n    @eq ( Ωfstr_107 = -> _hint_as_locale_cfg 'en-IN'    ), { decimal: '.', thousands: ',', grouping: [ 3, 2, 2, 2, 2, 2, 2, 2, 2, 2 ], currency: [ '₹', '' ] }\n    @eq ( Ωfstr_108 = -> _hint_as_locale_cfg {}         ), {}\n    #.......................................................................................................\n    @eq ( Ωfstr_109 = -> _format_cfg_from_hints 'ar-AE'                                                 ), { decimal: '٫', thousands: '٬', grouping: [ 3 ], currency: [ '', ' د.إ.' ], numerals: [ '٠', '١', '٢', '٣', '٤', '٥', '٦', '٧', '٨', '٩' ], percent: '%', minus: '−', nan: 'NaN' }\n    @eq ( Ωfstr_110 = -> _format_cfg_from_hints 'en-US'                                                 ), { decimal: '.', thousands: ',', grouping: [ 3 ], currency: [ '$', '' ], numerals: [ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' ], percent: '%', minus: '−', nan: 'NaN' }\n    @eq ( Ωfstr_111 = -> _format_cfg_from_hints 'de-DE'                                                 ), { decimal: ',', thousands: '.', grouping: [ 3 ], currency: [ '', ' €' ], numerals: [ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' ], percent: '%', minus: '−', nan: 'NaN' }\n    @eq ( Ωfstr_112 = -> _format_cfg_from_hints          { percent: '\\xa0v.Hd.', }                      ), { decimal: '.', thousands: ',', grouping: [ 3 ], currency: [ '$', '' ], numerals: [ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' ], percent: ' v.Hd.', minus: '−', nan: 'NaN' }\n    @eq ( Ωfstr_113 = -> _format_cfg_from_hints 'de-DE', { percent: '\\xa0v.Hd.', }                      ), { decimal: ',', thousands: '.', grouping: [ 3 ], currency: [ '', ' €' ], numerals: [ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' ], percent: ' v.Hd.', minus: '−', nan: 'NaN' }\n    @eq ( Ωfstr_114 = -> _format_cfg_from_hints 'de-DE', { percent: '\\xa0v.Hd.', }, { thousands: \"'\", } ), { decimal: ',', thousands: \"'\", grouping: [ 3 ], currency: [ '', ' €' ], numerals: [ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' ], percent: ' v.Hd.', minus: '−', nan: 'NaN' }\n    @eq ( Ωfstr_115 = -> _format_cfg_from_hints {}                                                      ), { decimal: '.', thousands: ',', grouping: [ 3 ], currency: [ '$', '' ], numerals: [ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' ], percent: '%', minus: '−', nan: 'NaN' }\n    #.......................................................................................................\n    do =>\n      locale_cfg  = _format_cfg_from_hints 'de-DE'\n      locale      = _d3_format.formatLocale locale_cfg\n      @eq ( Ωfstr_116 = -> ( locale.format '_>17,.5%' ) 0.754321    ), '________75,43210%'\n      @eq ( Ωfstr_117 = -> ( locale.format '_>17,.5f' ) 1234567890  ), '1.234.567.890,00000'\n      return null\n    #.......................................................................................................\n    do =>\n      locale_cfg  = _format_cfg_from_hints 'de-DE', { numerals: [ '⁰', '¹', '²', '³', '⁴', '⁵', '⁶', '⁷', '⁸', '⁹', ], percent: ' v.H.', }\n      locale      = _d3_format.formatLocale locale_cfg\n      @eq ( Ωfstr_118 = -> ( locale.format '_>17,.5%' ) 0.754321    ), '____⁷⁵,⁴³²¹⁰ v.H.'\n      @eq ( Ωfstr_119 = -> ( locale.format '_>17,.5f' ) 1234567890  ), '¹.²³⁴.⁵⁶⁷.⁸⁹⁰,⁰⁰⁰⁰⁰'\n      return null\n    #.......................................................................................................\n    do ( f ) =>\n      f = new_ftag 'de-DE', { numerals: [ '⁰', '¹', '²', '³', '⁴', '⁵', '⁶', '⁷', '⁸', '⁹', ], percent: ' v.H.', }\n      @eq ( Ωfstr_120 = -> ( f\"#{0.754321}:_>17.5%;\" )    ), '____⁷⁵,⁴³²¹⁰ v.H.'\n      return null\n    #.......................................................................................................\n    @eq ( Ωfstr_121 = -> ( new_ftag 'en-US' )\"#{123456789123456789.75}:_>37,.5f;\" ), '________123,456,789,123,456,784.00000'\n    @eq ( Ωfstr_122 = -> ( new_ftag { grouping: [ 4, ], } )\"#{123456789123456789.75}:_>37,.5f;\" ), '_________12,3456,7891,2345,6784.00000'\n    @eq ( Ωfstr_123 = -> ( new_ftag()       )\"#{1.23}:$03.2f;[#{1234567890.123456}:20,.4f;]\" ), '$1.23[  1,234,567,890.1235]'\n    @eq ( Ωfstr_124 = -> ( new_ftag {}      )\"#{1.23}:$03.2f;[#{1234567890.123456}:20,.4f;]\" ), '$1.23[  1,234,567,890.1235]'\n    @eq ( Ωfstr_125 = -> ( new_ftag 'de-DE' )\"#{1.23}:$03.2f;[#{1234567890.123456}:20,.4f;]\" ), '1,23 €[  1.234.567.890,1235]'\n    @eq ( Ωfstr_126 = -> ( new_ftag 'en-US' )\"#{1.23}:$03.2f;[#{1234567890.123456}:20,.4f;]\" ), '$1.23[  1,234,567,890.1235]'\n    @eq ( Ωfstr_127 = -> ( new_ftag 'es-MX' )\"#{1.23}:$03.2f;[#{1234567890.123456}:20,.4f;]\" ), '$1.23[  1,234,567,890.1235]'\n    @eq ( Ωfstr_128 = -> ( new_ftag 'en-IN' )\"#{1.23}:$03.2f;[#{1234567890.123456}:20,.4f;]\" ), '₹1.23[ 1,23,45,67,890.1235]'\n    #.......................................................................................................\n    return null\n\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  # ( new Test { throw_on_error: true, } ).test @intertype_tasks\n  ( new Test { throw_on_error: false, } ).test @intertype_tasks\n  ( new Test { throw_on_error: true, } ).test { locale_internals: @intertype_tasks.locale_internals, }\n"
  ]
}