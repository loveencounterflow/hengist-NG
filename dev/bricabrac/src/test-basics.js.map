{
  "version": 3,
  "file": "test-basics.js",
  "sourceRoot": "../../../",
  "sources": [
    "dev/bricabrac/src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'bricabrac'\n{ rpr\n  inspect\n  echo\n  white\n  blue\n  gold\n  grey\n  red\n  bold\n  reverse\n  log     }               = GUY.trm\n{ f }                     = require '../../../apps/effstring'\nwrite                     = ( p ) -> process.stdout.write p\nC                         = require 'ansis'\n{ nfa }                   = require '../../../apps/normalize-function-arguments'\nGTNG                      = require 'guy-test'\n{ Test                  } = GTNG\nSFMODULES                 = require '../../../apps/bricabrac-single-file-modules'\n\n\n\n#===========================================================================================================\nsettings =\n    my_seed_1: 2873462134\n    my_seed_2: 2873462134 + 1\n\n#===========================================================================================================\n@tests = tests =\n\n  #---------------------------------------------------------------------------------------------------------\n  get_random_float: ->\n    { Get_random,\n      internals,  } = SFMODULES.unstable.require_get_random()\n    matchers        = []\n    probes          = []\n    max_count       = 1e4\n    seen            = new Set()\n    #.......................................................................................................\n    do =>\n      get_random = new Get_random { seed: settings.my_seed_1, }\n      for idx in [ 0 ... max_count ]\n        matchers.push t = get_random.float()\n        seen.add t\n      for value, idx in matchers\n        debug 'Ωbrbr___1', { idx, value, } unless 0 < value <= 1\n      @eq ( Ωbrbr___2 = -> matchers.every ( t ) -> 0 < t <= 1 ), true\n      @eq ( Ωbrbr___3 = -> seen.size ), max_count\n      return null\n    #.......................................................................................................\n    do =>\n      get_random = new Get_random { seed: settings.my_seed_1, }\n      for idx in [ 0 ... max_count ]\n        probes.push t = get_random.float()\n      @eq ( Ωbrbr___4 = -> probes ), matchers\n      return null\n    #.......................................................................................................\n    do =>\n      get_random = new Get_random { seed: settings.my_seed_2, }\n      count = 0\n      for idx in [ 0 ... max_count ]\n        count++ if ( t = get_random.float() ) in matchers\n      @eq ( Ωbrbr___5 = -> count ), 0\n      return null\n    #.......................................................................................................\n    do =>\n      get_random    = new Get_random()\n      count = 0\n      for idx in [ 0 ... max_count ]\n        count++ if ( t = get_random.float() ) in matchers\n      @eq ( Ωbrbr___6 = -> count < 10 ), true\n      return null\n    #.......................................................................................................\n    do =>\n      get_random  = new Get_random { seed: settings.my_seed_1, }\n      min         = 100\n      max         = 999\n      buckets     = {}\n      for bucket in [ min ... max ]\n        buckets[ Math.floor bucket / 10 ] = 0\n      for idx in [ 0 ... max_count ]\n        t = get_random.float { min, max, }\n        # debug 'Ωbrbr___7', t\n        bucket = Math.floor t / 10\n        buckets[ bucket ]++\n        @eq ( Ωbrbr___8 = -> min <= t <= max ), true\n      for _, count of buckets\n        @eq ( Ωbrbr___9 = -> 50 <= count <= 150 ), true\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  get_random_integer: ->\n    { Get_random,\n      internals,  } = SFMODULES.unstable.require_get_random()\n    max_count       = 1e4\n    #.......................................................................................................\n    do =>\n      get_random  = new Get_random { seed: settings.my_seed_1, }\n      min         = 100\n      max         = 999\n      buckets     = {}\n      for bucket in [ min ... max ]\n        buckets[ Math.floor bucket / 10 ] = 0\n      for idx in [ 0 ... max_count ]\n        t = get_random.integer { min, max, }\n        # debug 'Ωbrbr__10', t\n        bucket = Math.floor t / 10\n        buckets[ bucket ]++\n        @eq ( Ωbrbr__11 = -> min <= t <= max ), true\n      for _, count of buckets\n        @eq ( Ωbrbr__12 = -> 50 <= count <= 150 ), true\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  get_random_chr: ->\n    { Get_random,\n      internals,  } = SFMODULES.unstable.require_get_random()\n    max_count       = 1e4\n    #.......................................................................................................\n    do =>\n      get_random  = new Get_random { seed: settings.my_seed_1, }\n      for idx in [ 0 ... max_count ]\n        t = get_random.chr()\n        # debug 'Ωbrbr__13', rpr t\n      return null\n    #.......................................................................................................\n    do =>\n      get_random  = new Get_random { seed: settings.my_seed_1, }\n      result = ( get_random.chr { min: 'A', max: 'Z', } for _ in [ 1 .. 40 ] ).join ''\n      @eq ( Ωbrbr__14 = -> result ), 'PQKESUUNYHBEWGHGWECRSZZLVOSFQSETNSEXDFGF'\n      return null\n    #.......................................................................................................\n    do =>\n      on_stats    = ( stats ) ->\n        # debug 'Ωbrbr__15', stats\n      get_random  = new Get_random { seed: settings.my_seed_2, on_stats, }\n      result      = ( get_random.chr { min: 'A', max: 'Z', } for _ in [ 1 .. 40 ] ).join ''\n      @eq ( Ωbrbr__16 = -> result is 'PQKESUUNYHBEWGHGWECRSZZLVOSFQSETNSEXDFGF' ), false\n      @eq ( Ωbrbr__17 = -> /^[A-Z]{40}$/.test result ), true\n      return null\n    #.......................................................................................................\n    do =>\n      on_stats    = ( stats ) ->\n        # debug 'Ωbrbr__18', stats\n      get_random  = new Get_random { seed: settings.my_seed_2, on_stats, }\n      result      = ( get_random.chr { max: 0xff, filter: /[aeiouyAEIOUY]/, } for _ in [ 1 .. 40 ] ).join ''\n      # debug 'Ωbrbr__19', rpr result\n      @eq ( Ωbrbr__20 = -> /^[aeiouyAEIOUY]{40}$/.test result ), true\n      @eq ( Ωbrbr__21 = -> result ), 'yyUyIuuUaaIuUaUIIyOIoAYEOiOYIuiOuaiAUUeE'\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  get_random_chr_producer: ->\n    { Get_random,\n      internals,  } = SFMODULES.unstable.require_get_random()\n    #.......................................................................................................\n    do =>\n      rounds      = 0\n      on_stats    = ( stats ) -> rounds += stats.rounds if stats.name is 'chr'\n      get_random  = new Get_random { seed: settings.my_seed_2, on_stats, }\n      chr         = get_random.chr_producer { max: 0xff, filter: /[aeiouyAEIOUY]/, }\n      result      = ( chr() for _ in [ 1 .. 40 ] ).join ''\n      # debug 'Ωbrbr__22', rounds, ( rpr result )\n      @eq ( Ωbrbr__23 = -> /^[aeiouyAEIOUY]{40}$/.test result ), true\n      @eq ( Ωbrbr__24 = -> result ), 'yyUyIuuUaaIuUaUIIyOIoAYEOiOYIuiOuaiAUUeE'\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  get_random_text: ->\n    { Get_random,\n      internals,  } = SFMODULES.unstable.require_get_random()\n    max_count       = 1e4\n    #.......................................................................................................\n    do =>\n      on_stats    = ( stats ) ->\n        # info 'Ωbrbr__25', stats\n      get_random  = new Get_random { seed: settings.my_seed_1, on_stats, }\n      result      = get_random.text { min: 'A', max: 'Z', length: 40, }\n      @eq ( Ωbrbr__26 = -> result ), 'PQKESUUNYHBEWGHGWECRSZZLVOSFQSETNSEXDFGF'\n      return null\n    #.......................................................................................................\n    do =>\n      count_attempts  = ( n ) -> rounds[ n ] = ( rounds[ n ] ?= 0 ) + 1\n      rounds        = {}\n      on_stats        = ( stats ) ->\n        # help 'Ωbrbr__27', stats\n        return null unless stats.name is 'chr'\n        count_attempts stats.rounds\n        return null\n      valid_re    = /// ^ [ \\u0020-\\u007e \\u00a0-\\u00ac \\u00ae-\\u00ff ]{ 150 } $ ///v\n      get_random  = new Get_random { seed: null, on_stats, }\n      for _ in [ 1 .. 1 ]\n      # for _ in [ 1 .. 10 ]\n        result = get_random.text { min: 0x00, max: 0xff, length: 150, }\n        @eq ( Ωbrbr__28 = -> valid_re.test result ), true\n      # debug 'Ωbrbr__29', rounds\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  get_random_set_of_chrs: ->\n    { Get_random,\n      internals,  } = SFMODULES.unstable.require_get_random()\n    max_count       = 1e4\n    #.......................................................................................................\n    do =>\n      rounds         = 0\n      on_stats        = ( stats ) ->\n        rounds += stats.rounds\n        # urge 'Ωbrbr__30', stats if stats.name is 'set_of_chrs'\n        return null\n      valid_re    = /// ^ [ \\u0020-\\u007e \\u00a0-\\u00ac \\u00ae-\\u00ff ]{ 50 } $ ///v\n      get_random  = new Get_random { seed: null, on_stats, }\n      for _ in [ 1 .. 20 ]\n        result      = get_random.set_of_chrs { min: 0x00, max: 0xff, size: 50, }\n        result_rpr  = [ result..., ].join ''\n        @eq ( Ωbrbr__31 = -> valid_re.test result_rpr ), true\n        # debug 'Ωbrbr__32', rounds\n        rounds = 0\n      return null\n    #.......................................................................................................\n    do =>\n      rounds         = 0\n      on_stats        = ( stats ) ->\n        rounds += stats.rounds\n        # urge 'Ωbrbr__33', stats if stats.name is 'set_of_chrs'\n        return null\n      valid_re    = /// ^ [ 0-9 ]{ 10 } $ ///v\n      get_random  = new Get_random { seed: null, on_stats, }\n      for _ in [ 1 .. 20 ]\n        result      = get_random.set_of_chrs { min: '0', max: '9', size: 10, }\n        result_rpr  = [ result..., ].join ''\n        @eq ( Ωbrbr__34 = -> result.size              ), 10\n        @eq ( Ωbrbr__35 = -> valid_re.test result_rpr ), true\n        # debug 'Ωbrbr__36', rounds, rpr result\n        rounds = 0\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  get_random_set_of_texts: ->\n    { Get_random,\n      internals,  } = SFMODULES.unstable.require_get_random()\n    max_count       = 1e4\n    #.......................................................................................................\n    do =>\n      rounds         = 0\n      on_stats        = ( stats ) ->\n        rounds += stats.rounds\n        return null\n      valid_re    = /// ^ [ 0-9 ]{ 3 } $ ///v\n      get_random  = new Get_random { seed: null, on_stats, }\n      for _ in [ 1 .. 1 ]\n        result      = get_random.set_of_texts { min: '0', max: '9', length: 3, size: 10, }\n        @eq ( Ωbrbr__37 = -> result.size              ), 10\n        for random_text from result\n          @eq ( Ωbrbr__38 = -> valid_re.test random_text ), true\n        # debug 'Ωbrbr__39', rounds, rpr result\n        rounds = 0\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  get_random_text_of_variable_length: ->\n    { Get_random,\n      internals,  } = SFMODULES.unstable.require_get_random()\n    matchers        = [ 'εΧΚ', 'ονήφ', 'ΒΙ', 'ΟΠΟςΛ', 'η', 'ψψΩο', 'κΝε', 'Κμίκ', 'υΙ', 'ΟΛ', ]\n    #.......................................................................................................\n    do =>\n      result_rounds   = null\n      on_stats        = ( stats ) =>\n        # info 'Ωbrbr__40', stats\n        result_rounds = stats.rounds\n        @eq ( Ωbrbr__41 = -> result_rounds >= 0 ), true\n      get_random  = new Get_random { seed: settings.my_seed_1, on_stats, }\n      for idx in [ 0 .. 9 ]\n        result      = get_random.text { min: 'Α', max: 'ω', min_length: 1, max_length: 5, }\n        # debug 'Ωbrbr__42', rpr result\n        @eq ( Ωbrbr__43 = -> result ), matchers[ idx ]\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  get_random_text_of_variable_length_with_filter: ->\n    { Get_random,\n      internals,  } = SFMODULES.unstable.require_get_random()\n    result_matchers = [ 'Ακθ', 'ΑΣ', 'ΑΜ', 'ΑίΥΔ', 'ΑήδΛ', 'ΑήςδΠ', 'ΑξΡΤΘ', 'ΑΤΚΞ', 'ΑγιΔε', 'Αή', ]\n    round_matchers  = [ 34, 15, 189, 121, 75, 47, 87, 43, 119, 200, ]\n    #.......................................................................................................\n    do =>\n      result_rounds  = null\n      on_stats        = ( stats ) =>\n        return null unless stats.name is 'text'\n        # info 'Ωbrbr__44', idx, stats\n        result_rounds = stats.rounds\n        @eq ( Ωbrbr__45 = ->  result_rounds ), round_matchers[ idx ]\n      get_random  = new Get_random { seed: settings.my_seed_1, on_stats, }\n      for idx in [ 0 .. 9 ]\n        result      = get_random.text { min: 'Α', max: 'ω', min_length: 1, max_length: 5, filter: /^Α/v, }\n        # debug 'Ωbrbr__46', rpr result\n        @eq ( Ωbrbr__47 = -> /^Α[Α-ω]{0,4}$/v.test result ), true\n        @eq ( Ωbrbr__48 = -> result ), result_matchers[ idx ]\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  get_random_text_producer: ->\n    { Get_random,\n      internals,  } = SFMODULES.unstable.require_get_random()\n    result_matchers = [ 'Ακθ', 'ΑΣ', 'ΑΜ', 'ΑίΥΔ', 'ΑήδΛ', 'ΑήςδΠ', 'ΑξΡΤΘ', 'ΑΤΚΞ', 'ΑγιΔε', 'Αή', ]\n    round_matchers  = [ 34, 15, 189, 121, 75, 47, 87, 43, 119, 200, ]\n    #.......................................................................................................\n    do =>\n      result_rounds  = null\n      on_stats        = ( stats ) =>\n        return null unless stats.name is 'text'\n        # info 'Ωbrbr__49', idx, stats\n        result_rounds = stats.rounds\n        @eq ( Ωbrbr__50 = ->  result_rounds ), round_matchers[ idx ]\n      get_random      = new Get_random { seed: settings.my_seed_1, on_stats, }\n      get_random_text = get_random.text_producer { min: 'Α', max: 'ω', min_length: 1, max_length: 5, filter: /^Α/v, }\n      for idx in [ 0 .. 9 ]\n        result      = get_random_text()\n        # debug 'Ωbrbr__51', rpr result\n        @eq ( Ωbrbr__52 = -> /^Α[Α-ω]{0,4}$/v.test result ), true\n        @eq ( Ωbrbr__53 = -> result ), result_matchers[ idx ]\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  get_random_float_producer: ->\n    { Get_random,\n      internals,  } = SFMODULES.unstable.require_get_random()\n    result_matchers = [ 16.084712848532945, 16.42560794018209, 14.009152099024504, 18.174642121884972, 12.86115032620728, 10.208302834071219, 18.753091448452324, 12.430183209944516, 12.627715056296438, 12.425259067676961, ]\n    # round_matchers  = [ 34, 15, 189, 121, 75, 47, 87, 43, 119, 200, ]\n    #.......................................................................................................\n    do =>\n      result_rounds  = null\n      on_stats        = ( stats ) =>\n        return null unless stats.name is 'text'\n        # info 'Ωbrbr__54', idx, stats\n        result_rounds = stats.rounds\n        @eq ( Ωbrbr__55 = ->  result_rounds ), round_matchers[ idx ]\n      get_random        = new Get_random { seed: settings.my_seed_1, on_stats, }\n      filter            = ( n ) -> ( Math.floor n ) %% 2 is 0\n      get_random_float  = get_random.float_producer { min: 10, max: 20, filter, }\n      for idx in [ 0 .. 9 ]\n        result      = get_random_float()\n        # debug 'Ωbrbr__56', rpr result\n        @eq ( Ωbrbr__57 = -> result ), result_matchers[ idx ]\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  get_random_integer_producer: ->\n    { Get_random,\n      internals,  } = SFMODULES.unstable.require_get_random()\n    result_matchers = [ 16, 16, 14, 12, 18, 18, 20, 10, 12, 12, ]\n    rounds_matcher  = [ 0, 0, 0, 0, 1, 0, 1, 1, 2, 1 ]\n    #.......................................................................................................\n    do =>\n      my_on_stats         = ( stats ) =>\n        # debug 'Ωbrbr__58', stats\n        rounds.push stats.rounds if stats.name is 'integer'\n      rounds             = []\n      get_random          = new Get_random { seed: settings.my_seed_1, on_stats: my_on_stats, }\n      filter              = ( n ) -> ( Math.floor n ) %% 2 is 0\n      get_random_integer  = get_random.integer_producer { min: 10, max: 20, filter, }\n      # debug 'Ωbrbr__59', get_random.cfg\n      for idx in [ 0 .. 9 ]\n        result = get_random_integer()\n        # debug 'Ωbrbr__60', rpr result\n        @eq ( Ωbrbr__61 = -> result ), result_matchers[ idx ]\n      @eq ( Ωbrbr__62 = -> rounds ), rounds_matcher\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  get_random_set_of_texts_of_variable_length: ->\n    { Get_random,\n      internals,  } = SFMODULES.unstable.require_get_random()\n    # matchers        = [ 'εΧΚ', 'ονήφ', 'ΒΙ', 'ΟΠΟςΛ', 'η', 'ψψΩο', 'κΝε', 'Κμίκ', 'υΙ', 'ΟΛ', ]\n    #.......................................................................................................\n    do =>\n      result_rounds  = null\n      on_stats        = ( stats ) =>\n        info 'Ωbrbr__63', stats if stats.name is 'set_of_texts'\n        result_rounds = stats.rounds if stats.name is 'set_of_texts'\n        @eq ( Ωbrbr__64 = -> result_rounds >= 0 ), true\n      get_random  = new Get_random { seed: settings.my_seed_1, on_stats, }\n      matchers    = [\n        new Set [ '⾉⽕⼢⾗⾮⾩', '⿋⼽⼄⼠⾺⼴', '⼴⾼⼦', '⾏⾚', '⿓⽛⾱⽳⾝⼭⾈⾜⼣⾥', ]\n        new Set [ '⾝⼥⿇⼞⼭⼵', '⽐⼸⽺', '⼔⿓⼌⾣⾅⾲⽁⼍', '⽲⼩⼑⿌', '⼩⾶⼕⽓⽐', ]\n        new Set [ '⼢⿀⾳⿕⼔⿀⼗⾉⽔', '⾇⾚⼠⼘⼼⾐', '⼏⿉⾜⼦⾜⼆⽞', '⽍⽠⾿⼔⼗⿎', '⾇⽤⿃⾅⽋⾎', ]\n        new Set [ '⼘⼂⾛⾖⼨⾛⾜', '⽉⼛⿉⼘⿒⽂⼫⽗⾜', '⼔⿋⿄', '⼟⼅⼎⾂⼮⽵⾾⾼⽔', '⾨⽩⾐⼊⼂⽆', ]\n        new Set [ '⽿⽩⽊', '⼽⾖⾜⾶⾩⾮', '⾶⼮⾃', '⽿⽸⾽⼡⽻⾊⼶', '⽆⼠⽴⼿⼼⼿⽫⾈', ]\n        new Set [ '⽣', '⾱⽻⽀⽛⾽⾲⼦⾶⼹', '⼕⽗⼌⼖⽽⽦⽎', '⽚⾌⼾⾌⼧⼛⼹', '⾂⼣⿁', ]\n        new Set [ '⾘⽲⾟⽤⼘', '⾁⾧⽜⼕⾰⾐⼩', '⼱⾑⿃⿒⼽⼙', '⿏⾰⾓⼐⼈', '⽘⽗⽽⼘⿀', ]\n        new Set [ '⽳⼱⼤⾾⽷⾠⼿⾕', '⼛⼂⿃⼶⼭⼫', '⼫⾀⾄⿋⼏⼾', '⽁⼽⼹⾯⿃⽮⾳⽑⽩⽓', '⼯⽎⾱⽫⽩⾳', ]\n        new Set [ '⼷⾕⼈⼶⽩⽿⾡⼃⾜', '⾱⿇⾞⾴⽝', '⾵', '⽻⿔⽀⿎⾑⽌⼤⽘', '⿊⼭⼳⿒⼐⽥⽙⾲⽟', ]\n        new Set [ '⽣⽪', '⽙⼟⽰⾗', '⽰', '⼴⿑⾁⽺', '⾐⽌⾠⾭⽘', ]\n        ]\n      for idx in [ 0 .. 9 ]\n        result = get_random.set_of_texts { min: '⼀', max: '⿕', size: 5, min_length: 1, max_length: 10, }\n        @eq ( Ωbrbr__65 = -> result ), matchers[ idx ]\n        # debug 'Ωbrbr__66', result\n      return null\n    #.......................................................................................................\n    do =>\n      #.....................................................................................................\n      result_rounds  = null\n      on_stats        = ( stats ) =>\n        # debug 'Ωbrbr__67', stats\n        return null unless stats.name is 'walk_unique'\n        result_rounds = stats.rounds\n        # debug 'Ωbrbr__68', result_rounds\n        @eq ( Ωbrbr__69 = -> result_rounds ), matchers[ idx ].result_rounds\n      #.....................................................................................................\n      get_random  = new Get_random { seed: settings.my_seed_1, on_stats, }\n      matchers    = [\n        { result_rounds:  4, result_rpr: '5641793082', }\n        { result_rounds: 63, result_rpr: '2816794530', }\n        { result_rounds: 11, result_rpr: '4538196072', }\n        { result_rounds: 20, result_rpr: '7831924056', }\n        { result_rounds: 76, result_rpr: '0325467819', }\n        { result_rounds:  7, result_rpr: '3149760582', }\n        { result_rounds: 20, result_rpr: '2857361094', }\n        { result_rounds: 31, result_rpr: '4523786091', }\n        { result_rounds: 13, result_rpr: '4813560297', }\n        { result_rounds: 19, result_rpr: '7491065823', }\n        ]\n      for idx in [ 0 .. 9 ]\n        result      = get_random.set_of_texts { min: '0', max: '9', size: 10, length: 1, on_stats, }\n        # debug 'Ωbrbr__70', rpr result\n        result_rpr  = [ result..., ].join ''\n        @eq ( Ωbrbr__71 = -> result_rpr     ), matchers[ idx ].result_rpr\n        # @eq ( Ωbrbr__72 = -> result_rounds ), matchers[ idx ].result_rounds\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  exhaustion: ->\n    { Get_random,\n      internals,  } = SFMODULES.unstable.require_get_random()\n    #.......................................................................................................\n    do =>\n      result_rounds  = null\n      on_stats        = ( stats ) =>\n        # info 'Ωbrbr__73', stats if stats.name is 'walk'\n        # result_rounds = stats.rounds if stats.name is 'walk'\n        # @eq ( Ωbrbr__74 = -> result_rounds >= 0 ), true\n      get_random      = new Get_random { seed: settings.my_seed_1, on_stats, }\n      #.....................................................................................................\n      cfg =\n        min:            'A'\n        max:            'Z'\n        length:         3\n        filter:         /^[a-z]{3}$/\n        on_exhaustion: 'error'\n      @throws ( Ωbrbr__75 = -> get_random.text cfg ), /exhausted/\n      return null\n    #.......................................................................................................\n    do =>\n      result_rounds  = null\n      on_stats        = ( stats ) =>\n        # info 'Ωbrbr__76', stats if stats.name is 'walk'\n        # result_rounds = stats.rounds if stats.name is 'walk'\n        # @eq ( Ωbrbr__77 = -> result_rounds >= 0 ), true\n      get_random      = new Get_random { seed: settings.my_seed_1, on_stats, }\n      #.....................................................................................................\n      cfg =\n        min:            'A'\n        max:            'Z'\n        length:         3\n        filter:         /^[a-z]{3}$/\n        on_exhaustion: -> null\n      @eq ( Ωbrbr__78 = -> get_random.text cfg ), null\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  walk: ->\n    { Get_random,\n      internals,  } = SFMODULES.unstable.require_get_random()\n    #.......................................................................................................\n    do =>\n      idx             = -1\n      get_random      = new Get_random { seed: settings.my_seed_1, on_stats, }\n      on_stats        = ( stats ) =>\n        # info 'Ωbrbr__79', idx, stats # if stats.name is 'walk'\n        if stats.name is 'walk'\n          @eq ( Ωbrbr__80 = -> stats.rounds ), matcher.rounds\n        return null\n      #.....................................................................................................\n      result    =\n        values:   []\n      matcher   =\n        values:   [ 'ĂčÀ', 'tĢŅ', 'ľæű', 'Hpŗ', 'Śz^', 'ĖħŻ', 'żÉŉ', 'íĬČ', 'ĩuķ', 'ìīx', 'Ūm|' ]\n        rounds:   0\n      #.....................................................................................................\n      producer  = -> get_random.text { min: 'A', max: 0x017f, length: 3, on_stats, }\n      for value from get_random.walk { producer, n: 11, on_stats, }\n        idx++\n        # debug 'Ωbrbr__81', idx, rpr value\n        result.values.push value\n        @eq ( Ωbrbr__82 = -> value ), matcher.values[ idx ]\n      @eq ( Ωbrbr__83 = -> idx                    ), 10\n      @eq ( Ωbrbr__84 = -> result.values.length   ), 11\n      return null\n    # #.......................................................................................................\n    # do =>\n    #   get_random      = new Get_random { seed: settings.my_seed_1, on_stats, }\n    #   result_rounds  = null\n    #   on_stats        = ( stats ) =>\n    #     info 'Ωbrbr__85', stats if stats.name is 'walk'\n    #     result_rounds = stats.rounds if stats.name is 'walk'\n    #     @eq ( Ωbrbr__86 = -> result_rounds >= 0 ), true\n    #   #.....................................................................................................\n    #   producer  = -> get_random.text { min: '0', max: '9', length: 1, }\n    #   count     = 0\n    #   seen      = new Set()\n    #   for x from get_random.walk { producer, seen, n: 5, }\n    #     count++\n    #     debug 'Ωbrbr__87', count, rpr x\n    #   return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  walk_unique: ->\n    { Get_random,\n      internals,  } = SFMODULES.unstable.require_get_random()\n    #.......................................................................................................\n    do =>\n      get_random      = new Get_random { seed: settings.my_seed_1, on_stats, }\n      matchers        = [ 15, 16, 14, 11, 17, 19, 13, 10, 18, 12, ]\n      on_stats        = ( stats ) =>\n        # info 'Ωbrbr__88', stats\n        @eq ( Ωbrbr__89 = -> stats.rounds ), 4 if stats.name is 'walk_unique'\n      #.....................................................................................................\n      producer  = -> get_random.integer { min: 10, max: 19, on_stats, }\n      idx       = -1\n      for value from get_random.walk_unique { producer, n: 10, on_stats, }\n        idx++\n        # debug 'Ωbrbr__90', idx, rpr value\n        @eq ( Ωbrbr__91 = -> value ), matchers[ idx ]\n      return null\n    #.......................................................................................................\n    do =>\n      get_random      = new Get_random { seed: settings.my_seed_1, on_stats, }\n      on_stats        = ( stats ) =>\n        @eq ( Ωbrbr__92 = -> stats.rounds ), 4 if stats.name is 'walk_unique'\n      #.....................................................................................................\n      producer  = -> get_random.integer { min: 10, max: 19, on_stats, }\n      @throws ( Ωbrbr__93 = -> value for value from get_random.walk_unique { producer, n: 11, on_stats, } ), /exhausted/\n      return null\n    #.......................................................................................................\n    do =>\n      get_random      = new Get_random { seed: settings.my_seed_1, on_stats, }\n      matchers        = [ 15, 16, 14, 11, 17, 19, 13, 10, 18, 12, ]\n      on_stats        = ( stats ) =>\n        # info 'Ωbrbr__94', stats\n        @eq ( Ωbrbr__95 = -> stats.rounds ), get_random.cfg.max_rounds + 1 if stats.name is 'walk_unique'\n      #.....................................................................................................\n      producer  = -> get_random.integer { min: 10, max: 19, on_stats, }\n      idx       = -1\n      for value from get_random.walk_unique { producer, n: 20, on_stats, on_exhaustion: 'stop', }\n        idx++\n        # debug 'Ωbrbr__96', idx, rpr value\n        @eq ( Ωbrbr__97 = -> value ), matchers[ idx ]\n      return null\n    #.......................................................................................................\n    do =>\n      get_random      = new Get_random { seed: settings.my_seed_1, on_stats, }\n      matchers        = '¨¯yD¾ÖÑõ`%AãV[åH5¶ÂüýÙÅO®ÃEÍÄGñ?XItZ-Ë¬Úd.kK2öJÞ6wsïéÜÿ9°x§ÁB_·À0ò&qè8÷ì«nµ²\"½Ým<óeM{Qí@PçÐ+j¥ß^©æC¡±Óib,c\\\\³7£r~aê¿Ç:ÎSzùØº(|T¼¦ª/úu¢ÛY¤É#ðþø¸oFU1}p$W Õô4ÌäÈë>Ïv×LR]fg\\'î´¹ûÒâÊ)»hÔ!;à*NáÆ=3l'\n      results         = []\n      max_rounds      = 1_000\n      on_stats        = ( stats ) =>\n        # info 'Ωbrbr__98', stats\n        @eq ( Ωbrbr__99 = -> stats.rounds ), max_rounds + 1 if stats.name is 'walk_unique'\n      #.....................................................................................................\n      producer  = -> get_random.chr { min: 0x20, max: 0xff, on_stats, }\n      idx       = -1\n      for value from get_random.walk_unique { producer, n: 200, on_stats, on_exhaustion: 'stop', max_rounds, }\n        idx++\n        # debug 'Ωbrbr_100', idx, rpr value\n        @eq ( Ωbrbr_101 = -> value ), matchers[ idx ]\n        results.push value\n      # debug 'Ωbrbr_102', rpr results.join ''\n      return null\n    #.......................................................................................................\n    do =>\n      get_random      = new Get_random { seed: settings.my_seed_1, on_stats, }\n      matchers        = '»hÔ!;à*NáÆ=3l'\n      results         = []\n      max_rounds      = 1_000\n      on_stats        = ( stats ) =>\n        # info 'Ωbrbr_103', stats\n        @eq ( Ωbrbr_104 = -> stats.rounds ), max_rounds + 1 if stats.name is 'walk_unique'\n      #.....................................................................................................\n      seen      = new Set '¨¯yD¾ÖÑõ`%AãV[åH5¶ÂüýÙÅO®ÃEÍÄGñ?XItZ-Ë¬Úd.kK2öJÞ6wsïéÜÿ9°x§ÁB_·À0ò&qè8÷ì«nµ²\"½Ým<óeM{Qí@PçÐ+j¥ß^©æC¡±Óib,c\\\\³7£r~aê¿Ç:ÎSzùØº(|T¼¦ª/úu¢ÛY¤É#ðþø¸oFU1}p$W Õô4ÌäÈë>Ïv×LR]fg\\'î´¹ûÒâÊ)'\n      producer  = -> get_random.chr { min: 0x20, max: 0xff, on_stats, }\n      idx       = -1\n      for value from get_random.walk_unique { producer, n: 200, seen, on_stats, on_exhaustion: 'stop', max_rounds, }\n        idx++\n        # debug 'Ωbrbr_105', idx, rpr value\n        @eq ( Ωbrbr_106 = -> value ), matchers[ idx ]\n        results.push value\n      # debug 'Ωbrbr_107', rpr results.join ''\n      return null\n    #.......................................................................................................\n    do =>\n      get_random      = new Get_random { seed: settings.my_seed_1, on_stats, }\n      matchers        = 'pqkesunyhbewgcrszlvofqset'\n      results         = []\n      on_stats        = ( stats ) =>\n        # info 'Ωbrbr_108', stats\n        @eq ( Ωbrbr_109 = -> stats.rounds ), 7 if stats.name is 'walk_unique'\n      #.....................................................................................................\n      seen      = new Set()\n      purview   = 5 ### NOTE maximum size of 'window' where unqiueness is guaranteed; `seen` will not grow beyond this ###\n      producer  = -> get_random.chr { min: 'a', max: 'z', on_stats, }\n      idx       = -1\n      for value from get_random.walk_unique { producer, n: 25, seen, purview, on_stats, on_exhaustion: 'stop', }\n        idx++\n        # debug 'Ωbrbr_110', idx, rpr value\n        @eq ( Ωbrbr_111 = -> value ), matchers[ idx ]\n        results.push value\n      @eq ( Ωbrbr_112 = -> [ seen..., ].join '' ), 'ofqset'\n      @eq ( Ωbrbr_113 = -> seen.size ), purview + 1\n      # debug 'Ωbrbr_114', rpr results.join ''\n      return null\n    #.......................................................................................................\n    do =>\n      get_random      = new Get_random { seed: settings.my_seed_1, on_stats, }\n      matchers        = '4325614325614325614325614'\n      results         = []\n      on_stats        = ( stats ) =>\n        # info 'Ωbrbr_115', stats\n        @eq ( Ωbrbr_116 = -> stats.rounds ), 64 if stats.name is 'walk_unique'\n      #.....................................................................................................\n      seen      = new Set()\n      purview   = 5 ### NOTE maximum size of 'window' where unqiueness is guaranteed; `seen` will not grow beyond this ###\n      producer  = -> get_random.chr { min: '1', max: '6', on_stats, }\n      idx       = -1\n      for value from get_random.walk_unique { producer, n: 25, seen, purview, on_stats, on_exhaustion: 'stop', }\n        idx++\n        # debug 'Ωbrbr_117', idx, rpr value\n        @eq ( Ωbrbr_118 = -> value ), matchers[ idx ]\n        results.push value\n      @eq ( Ωbrbr_119 = -> [ seen..., ].join '' ), '325614'\n      @eq ( Ωbrbr_120 = -> seen.size ), purview + 1\n      # debug 'Ωbrbr_121', rpr results.join ''\n      return null\n    #.......................................................................................................\n    do =>\n      get_random      = new Get_random { seed: settings.my_seed_1, on_stats, }\n      matchers        = '532647132657432165472365172436512736541236541'\n      results         = []\n      on_stats        = ( stats ) =>\n        # info 'Ωbrbr_122', stats\n        @eq ( Ωbrbr_123 = -> stats.rounds ), 129 if stats.name is 'walk_unique'\n      #.....................................................................................................\n      seen      = new Set()\n      purview   = 5 ### NOTE maximum size of 'window' where unqiueness is guaranteed; `seen` will not grow beyond this ###\n      producer  = -> get_random.chr { min: '1', max: '7', on_stats, }\n      idx       = -1\n      for value from get_random.walk_unique { producer, n: 45, seen, purview, on_stats, on_exhaustion: 'stop', }\n        idx++\n        # debug 'Ωbrbr_124', idx, rpr value\n        @eq ( Ωbrbr_125 = -> value ), matchers[ idx ]\n        results.push value\n      @eq ( Ωbrbr_126 = -> [ seen..., ].join '' ), '236541'\n      @eq ( Ωbrbr_127 = -> seen.size ), purview + 1\n      # debug 'Ωbrbr_128', rpr results.join ''\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  stats: ->\n    { Get_random,\n      internals,  } = SFMODULES.unstable.require_get_random()\n    #.......................................................................................................\n    do =>\n      sentinel      = Symbol 'sentinel'\n      on_exhaustion = -> sentinel\n      stats = new internals.Stats { name: 'something', on_exhaustion, }\n      @eq     ( Ωbrbr_129 = -> stats.name           ), 'something'\n      @eq     ( Ωbrbr_130 = -> stats.max_rounds     ), internals.max_rounds\n      @eq     ( Ωbrbr_131 = -> stats.rounds         ), 0\n      @throws ( Ωbrbr_132 = -> stats.rounds++       ), /Cannot set property/\n      @eq     ( Ωbrbr_133 = -> stats.retry()        ), internals.go_on\n      @eq     ( Ωbrbr_134 = -> stats.rounds         ), 1\n      stats._rounds = internals.max_rounds - 1\n      # debug 'Ωbrbr_135', stats\n      # debug 'Ωbrbr_136', stats.rounds\n      # debug 'Ωbrbr_137', internals.max_rounds\n      # debug 'Ωbrbr_138', stats.max_rounds\n      @eq ( Ωbrbr_139 = -> stats.retry() ), internals.go_on\n      @eq ( Ωbrbr_140 = -> stats.retry() ), sentinel\n      @eq ( Ωbrbr_141 = -> stats.retry() ), sentinel\n      return null\n    #.......................................................................................................\n    do =>\n      on_exhaustion = undefined\n      stats = new internals.Stats { name: 'something', on_exhaustion, }\n      stats._rounds = internals.max_rounds - 1\n      @eq     ( Ωbrbr_142 = -> stats.retry() ), internals.go_on\n      @throws ( Ωbrbr_143 = -> stats.retry() ), /exhausted/\n      @throws ( Ωbrbr_144 = -> stats.retry() ), /exhausted/\n      return null\n    #.......................................................................................................\n    do =>\n      on_exhaustion = null\n      stats = new internals.Stats { name: 'something', on_exhaustion, }\n      stats._rounds = internals.max_rounds - 1\n      @eq     ( Ωbrbr_145 = -> stats.retry() ), internals.go_on\n      @throws ( Ωbrbr_146 = -> stats.retry() ), /exhausted/\n      @throws ( Ωbrbr_147 = -> stats.retry() ), /exhausted/\n      return null\n    #.......................................................................................................\n    do =>\n      on_exhaustion = 'error'\n      stats = new internals.Stats { name: 'something', on_exhaustion, }\n      stats._rounds = internals.max_rounds - 1\n      @eq     ( Ωbrbr_148 = -> stats.retry() ), internals.go_on\n      @throws ( Ωbrbr_149 = -> stats.retry() ), /exhausted/\n      @throws ( Ωbrbr_150 = -> stats.retry() ), /exhausted/\n      return null\n    #.......................................................................................................\n    do =>\n      sentinel      = Symbol 'sentinel'\n      stats_result  = null\n      on_exhaustion = -> sentinel\n      on_stats      = -> sentinel\n      max_rounds   = 3\n      stats = new internals.Stats { name: 'something', on_exhaustion, on_stats, max_rounds, }\n      @eq     ( Ωbrbr_151 = -> stats.rounds ), 0\n      @eq     ( Ωbrbr_152 = -> stats.retry() ), internals.go_on\n      @eq     ( Ωbrbr_153 = -> stats.rounds ), 1\n      @eq     ( Ωbrbr_154 = -> stats.retry() ), internals.go_on\n      @eq     ( Ωbrbr_155 = -> stats.rounds ), 2\n      @eq     ( Ωbrbr_156 = -> stats.retry() ), internals.go_on\n      @eq     ( Ωbrbr_157 = -> stats.rounds ), 3\n      @eq     ( Ωbrbr_158 = -> stats.retry() ), sentinel\n      @eq     ( Ωbrbr_159 = -> stats.finish 'value' ), 'value'\n      @throws ( Ωbrbr_160 = -> stats.finish 'value' ), /finished/\n      @throws ( Ωbrbr_161 = -> stats.retry() ), /finished/\n      @throws ( Ωbrbr_162 = -> stats.retry() ), /finished/\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  require_format_stack_parse_line: ->\n    { Format_stack,               } = SFMODULES.unstable.require_format_stack()\n    { type_of,                    } = SFMODULES.unstable.require_type_of()\n    #.......................................................................................................\n    probes_and_matchers = [\n      [ \"\"\"at <anonymous> (/path/to/hengist-NG/dev/bricabrac/src/test-dbric.coffee:290:11)\"\"\",              { callee: '<anonymous>',                               path: '/path/to/hengist-NG/dev/bricabrac/src/test-dbric.coffee', folder_path: '/path/to/hengist-NG/dev/bricabrac/src/',  file_name: 'test-dbric.coffee',        line_nr: 290,  column_nr: 11, type: 'main',       }, ]\n      [ \"\"\"at Object.<anonymous> (/path/to/hengist-NG/dev/bricabrac/src/test-dbric.coffee:245:41)\"\"\",       { callee: 'Object.<anonymous>',                        path: '/path/to/hengist-NG/dev/bricabrac/src/test-dbric.coffee', folder_path: '/path/to/hengist-NG/dev/bricabrac/src/',  file_name: 'test-dbric.coffee',        line_nr: 245,  column_nr: 41, type: 'main',       }, ]\n      [ \"\"\"at Object.<anonymous> (/path/to/hengist-NG/dev/bricabrac/src/test-dbric.coffee:3:1)\"\"\",          { callee: 'Object.<anonymous>',                        path: '/path/to/hengist-NG/dev/bricabrac/src/test-dbric.coffee', folder_path: '/path/to/hengist-NG/dev/bricabrac/src/',  file_name: 'test-dbric.coffee',        line_nr: 3,    column_nr: 1,  type: 'main',       }, ]\n      [ \"\"\"at do_something (../whatever/src/test-dbric.coffee:3:1)\"\"\",                                      { callee: 'do_something',                              path: '../whatever/src/test-dbric.coffee',                       folder_path: '../whatever/src/',                        file_name: 'test-dbric.coffee',        line_nr: 3,    column_nr: 1,  type: 'external',   }, ]\n      [ \"\"\"at do_something (node_modules/test-dbric.coffee:3:1)\"\"\",                                         { callee: 'do_something',                              path: 'node_modules/test-dbric.coffee',                          folder_path: 'node_modules/',                           file_name: 'test-dbric.coffee',        line_nr: 3,    column_nr: 1,  type: 'dependency', }, ]\n      [ \"\"\"at Module._compile (node:internal/modules/cjs/loader:1738:14)\"\"\",                                { callee: 'Module._compile',                           path: 'node:internal/modules/cjs/loader',                        folder_path: 'node:internal/modules/cjs/',              file_name: 'loader',                   line_nr: 1738, column_nr: 14, type: 'internal',   }, ]\n      [ \"\"\"at Object..js (node:internal/modules/cjs/loader:1871:10)\"\"\",                                     { callee: 'Object..js',                                path: 'node:internal/modules/cjs/loader',                        folder_path: 'node:internal/modules/cjs/',              file_name: 'loader',                   line_nr: 1871, column_nr: 10, type: 'internal',   }, ]\n      [ \"\"\"at Module.load (node:internal/modules/cjs/loader:1470:32)\"\"\",                                    { callee: 'Module.load',                               path: 'node:internal/modules/cjs/loader',                        folder_path: 'node:internal/modules/cjs/',              file_name: 'loader',                   line_nr: 1470, column_nr: 32, type: 'internal',   }, ]\n      [ \"\"\"at Module._load (node:internal/modules/cjs/loader:1290:12)\"\"\",                                   { callee: 'Module._load',                              path: 'node:internal/modules/cjs/loader',                        folder_path: 'node:internal/modules/cjs/',              file_name: 'loader',                   line_nr: 1290, column_nr: 12, type: 'internal',   }, ]\n      [ \"\"\"at TracingChannel.traceSync (node:diagnostics_channel:322:14)\"\"\",                                { callee: 'TracingChannel.traceSync',                  path: 'node:diagnostics_channel',                                folder_path: '',                                        file_name: 'node:diagnostics_channel', line_nr: 322,  column_nr: 14, type: 'internal',   }, ]\n      [ \"\"\"at wrapModuleLoad (node:internal/modules/cjs/loader:238:24)\"\"\",                                  { callee: 'wrapModuleLoad',                            path: 'node:internal/modules/cjs/loader',                        folder_path: 'node:internal/modules/cjs/',              file_name: 'loader',                   line_nr: 238,  column_nr: 24, type: 'internal',   }, ]\n      [ \"\"\"at Module.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:154:5)\"\"\",          { callee: 'Module.executeUserEntryPoint [as runMain]', path: 'node:internal/modules/run_main',                          folder_path: 'node:internal/modules/',                  file_name: 'run_main',                 line_nr: 154,  column_nr: 5,  type: 'internal',   }, ]\n      [ \"\"\"at node:internal/main/run_main_module:33:47\"\"\",                                                  { callee: '[anonymous]',                               path: 'node:internal/main/run_main_module',                      folder_path: 'node:internal/main/',                     file_name: 'run_main_module',          line_nr: 33,   column_nr: 47, type: 'internal',   }, ]\n      [ \"\"\"some other format\"\"\",                                                                            { callee: '', path: '', folder_path: 'some other format', file_name: '', line_nr: '', column_nr: '', type: 'unparsable' }, ]\n      ]\n    #.......................................................................................................\n    format_stack = new Format_stack { relative: false, }\n    @eq ( Ωbrbr_163 = -> type_of format_stack.parse_line ), 'function'\n    for [ probe, matcher, ] in probes_and_matchers\n      @eq ( Ωbrbr_164 = -> format_stack.parse_line probe ), matcher\n    #.......................................................................................................\n    @throws ( Ωbrbr_165 = -> format_stack.parse_line 673              ), /expected a text, got a float/\n    @throws ( Ωbrbr_166 = -> format_stack.parse_line false            ), /expected a text, got a boolean/\n    @throws ( Ωbrbr_167 = -> format_stack.parse_line Symbol 'abc'     ), /expected a text, got a symbol/\n    @throws ( Ωbrbr_168 = -> format_stack.parse_line \"line 1\\nline 2\" ), /expected a single line, got a text with line breaks/\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  require_format_stack_parse_line_relative: ->\n    { format_stack,               } = SFMODULES.unstable.require_format_stack()\n    { type_of,                    } = SFMODULES.unstable.require_type_of()\n    #.......................................................................................................\n    probes_and_matchers = [\n      [ \"\"\"at <anonymous> (#{process.cwd()}/dev/bricabrac/src/test-dbric.coffee:290:11)\"\"\",                 { callee: '<anonymous>',                               path: 'dev/bricabrac/src/test-dbric.coffee',                     folder_path: 'dev/bricabrac/src/',  file_name: 'test-dbric.coffee',        line_nr: 290,  column_nr: 11, type: 'main',       }, ]\n      [ \"\"\"at Object.<anonymous> (#{process.cwd()}/dev/bricabrac/src/test-dbric.coffee:245:41)\"\"\",          { callee: 'Object.<anonymous>',                        path: 'dev/bricabrac/src/test-dbric.coffee',                     folder_path: 'dev/bricabrac/src/',  file_name: 'test-dbric.coffee',        line_nr: 245,  column_nr: 41, type: 'main',       }, ]\n      [ \"\"\"at Object.<anonymous> (#{process.cwd()}/dev/bricabrac/src/test-dbric.coffee:3:1)\"\"\",             { callee: 'Object.<anonymous>',                        path: 'dev/bricabrac/src/test-dbric.coffee',                     folder_path: 'dev/bricabrac/src/',  file_name: 'test-dbric.coffee',        line_nr: 3,    column_nr: 1,  type: 'main',       }, ]\n      [ \"\"\"at do_something (../whatever/src/test-dbric.coffee:3:1)\"\"\",                                      { callee: 'do_something',                              path: '../whatever/src/test-dbric.coffee',                       folder_path: '../whatever/src/',                        file_name: 'test-dbric.coffee',        line_nr: 3,    column_nr: 1,  type: 'external',   }, ]\n      [ \"\"\"at do_something (node_modules/test-dbric.coffee:3:1)\"\"\",                                       { callee: 'do_something',                              path: 'node_modules/test-dbric.coffee',                        folder_path: 'node_modules/',                         file_name: 'test-dbric.coffee',        line_nr: 3,    column_nr: 1,  type: 'dependency', }, ]\n      [ \"\"\"at Module._compile (node:internal/modules/cjs/loader:1738:14)\"\"\",                                { callee: 'Module._compile',                           path: 'node:internal/modules/cjs/loader',                        folder_path: 'node:internal/modules/cjs/',              file_name: 'loader',                   line_nr: 1738, column_nr: 14, type: 'internal',   }, ]\n      [ \"\"\"at Object..js (node:internal/modules/cjs/loader:1871:10)\"\"\",                                     { callee: 'Object..js',                                path: 'node:internal/modules/cjs/loader',                        folder_path: 'node:internal/modules/cjs/',              file_name: 'loader',                   line_nr: 1871, column_nr: 10, type: 'internal',   }, ]\n      [ \"\"\"at Module.load (node:internal/modules/cjs/loader:1470:32)\"\"\",                                    { callee: 'Module.load',                               path: 'node:internal/modules/cjs/loader',                        folder_path: 'node:internal/modules/cjs/',              file_name: 'loader',                   line_nr: 1470, column_nr: 32, type: 'internal',   }, ]\n      [ \"\"\"at Module._load (node:internal/modules/cjs/loader:1290:12)\"\"\",                                   { callee: 'Module._load',                              path: 'node:internal/modules/cjs/loader',                        folder_path: 'node:internal/modules/cjs/',              file_name: 'loader',                   line_nr: 1290, column_nr: 12, type: 'internal',   }, ]\n      [ \"\"\"at TracingChannel.traceSync (node:diagnostics_channel:322:14)\"\"\",                                { callee: 'TracingChannel.traceSync',                  path: 'node:diagnostics_channel',                                folder_path: '',                                        file_name: 'node:diagnostics_channel', line_nr: 322,  column_nr: 14, type: 'internal',   }, ]\n      [ \"\"\"at wrapModuleLoad (node:internal/modules/cjs/loader:238:24)\"\"\",                                  { callee: 'wrapModuleLoad',                            path: 'node:internal/modules/cjs/loader',                        folder_path: 'node:internal/modules/cjs/',              file_name: 'loader',                   line_nr: 238,  column_nr: 24, type: 'internal',   }, ]\n      [ \"\"\"at Module.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:154:5)\"\"\",          { callee: 'Module.executeUserEntryPoint [as runMain]', path: 'node:internal/modules/run_main',                          folder_path: 'node:internal/modules/',                  file_name: 'run_main',                 line_nr: 154,  column_nr: 5,  type: 'internal',   }, ]\n      [ \"\"\"at node:internal/main/run_main_module:33:47\"\"\",                                                  { callee: '[anonymous]',                               path: 'node:internal/main/run_main_module',                      folder_path: 'node:internal/main/',                     file_name: 'run_main_module',          line_nr: 33,   column_nr: 47, type: 'internal',   }, ]\n      [ \"\"\"some other format\"\"\",                                                                            { callee: '', path: '', folder_path: 'some other format', file_name: '', line_nr: '', column_nr: '', type: 'unparsable' }, ]\n      ]\n    #.......................................................................................................\n    try\n      cwd = process.cwd()\n      @eq ( Ωbrbr_169 = -> type_of format_stack.parse_line ), 'function'\n      for [ probe, matcher, ] in probes_and_matchers\n        @eq ( Ωbrbr_170 = -> format_stack.parse_line probe ), matcher\n    finally\n      process.chdir cwd\n    #.......................................................................................................\n    @throws ( Ωbrbr_171 = -> format_stack.parse_line 673              ), /expected a text, got a float/\n    @throws ( Ωbrbr_172 = -> format_stack.parse_line false            ), /expected a text, got a boolean/\n    @throws ( Ωbrbr_173 = -> format_stack.parse_line Symbol 'abc'     ), /expected a text, got a symbol/\n    @throws ( Ωbrbr_174 = -> format_stack.parse_line \"line 1\\nline 2\" ), /expected a single line, got a text with line breaks/\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  require_format_stack_format_line: ->\n    { Format_stack,               } = SFMODULES.unstable.require_format_stack()\n    { strip_ansi,                 } = SFMODULES.require_strip_ansi()\n    { type_of,                    } = SFMODULES.unstable.require_type_of()\n    #.......................................................................................................\n    probes_and_matchers = [\n      [ \"\"\"at <anonymous> (/path/to/hengist-NG/dev/bricabrac/src/test-dbric.coffee:290:11)\"\"\",        '—— /path/to/hengist-NG/dev/bricabrac/src/——test-dbric.coffee —— (290——:11) ——             —— # <anonymous>() ——                                 ——', ]\n      [ \"\"\"at Object.<anonymous> (/path/to/hengist-NG/dev/bricabrac/src/test-dbric.coffee:245:41)\"\"\", '—— /path/to/hengist-NG/dev/bricabrac/src/——test-dbric.coffee —— (245——:41) ——             —— # Object.<anonymous>() ——                          ——', ]\n      [ \"\"\"at Object.<anonymous> (/path/to/hengist-NG/dev/bricabrac/src/test-dbric.coffee:3:1)\"\"\",    '—— /path/to/hengist-NG/dev/bricabrac/src/——test-dbric.coffee —— (3——:1) ——                —— # Object.<anonymous>() ——                          ——', ]\n      [ \"\"\"at do_something (../whatever/src/test-dbric.coffee:3:1)\"\"\",                                '—— ../whatever/src/——test-dbric.coffee —— (3——:1) ——                                      —— # do_something() ——                                ——', ]\n      [ \"\"\"at do_something (../node_modules/whatever/src/test-dbric.coffee:3:1)\"\"\",                   '—— ../node_modules/whatever/src/——test-dbric.coffee —— (3——:1) ——                         —— # do_something() ——                                ——', ]\n      [ \"\"\"at do_something (node_modules/test-dbric.coffee:3:1)\"\"\",                                   '—— node_modules/——test-dbric.coffee —— (3——:1) ——                                         —— # do_something() ——                                ——', ]\n      [ \"\"\"at Module._compile (node:internal/modules/cjs/loader:1738:14)\"\"\",                          '—— node:internal/modules/cjs/——loader —— (1738——:14) ——                                   —— # Module._compile() ——                             ——', ]\n      [ \"\"\"at Object..js (node:internal/modules/cjs/loader:1871:10)\"\"\",                               '—— node:internal/modules/cjs/——loader —— (1871——:10) ——                                   —— # Object..js() ——                                  ——', ]\n      [ \"\"\"at Module.load (node:internal/modules/cjs/loader:1470:32)\"\"\",                              '—— node:internal/modules/cjs/——loader —— (1470——:32) ——                                   —— # Module.load() ——                                 ——', ]\n      [ \"\"\"at Module._load (node:internal/modules/cjs/loader:1290:12)\"\"\",                             '—— node:internal/modules/cjs/——loader —— (1290——:12) ——                                   —— # Module._load() ——                                ——', ]\n      [ \"\"\"at TracingChannel.traceSync (node:diagnostics_channel:322:14)\"\"\",                          '—— ——node:diagnostics_channel —— (322——:14) ——                                            —— # TracingChannel.traceSync() ——                    ——', ]\n      [ \"\"\"at wrapModuleLoad (node:internal/modules/cjs/loader:238:24)\"\"\",                            '—— node:internal/modules/cjs/——loader —— (238——:24) ——                                    —— # wrapModuleLoad() ——                              ——', ]\n      [ \"\"\"at Module.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:154:5)\"\"\",    '—— node:internal/modules/——run_main —— (154——:5) ——                                       —— # Module.executeUserEntryPoint [as runMain]() ——   ——', ]\n      [ \"\"\"at node:internal/main/run_main_module:33:47\"\"\",                                            '—— node:internal/main/——run_main_module —— (33——:47) ——                                   —— # [anonymous]() ——                                 ——', ]\n      [ \"\"\"some other format\"\"\",                                                                      '—— some other format—— —— (——:) ——                                                        —— # () ——                                            ——', ]\n      ]\n    #.......................................................................................................\n    do =>\n      format_stack = new Format_stack { relative: false, padding: { path: 80, callee: 50, }, context: false, }\n      @eq ( Ωbrbr_175 = -> type_of format_stack.cfg         ), 'pod'\n      @eq ( Ωbrbr_176 = -> type_of format_stack.format_line ), 'function'\n      for [ probe, matcher, ] in probes_and_matchers\n        @eq ( Ωbrbr_177 = -> strip_ansi ( format_stack.format_line probe ), '——' ), matcher\n        # echo format_stack.format_line probe\n        # debug 'Ωbrbr_178', do Ωbrbr_179 = -> rpr strip_ansi ( format_stack.format_line probe ), '——'\n      return null\n    #.......................................................................................................\n    do =>\n      format_stack = new Format_stack { relative: true, }\n      try not_a_variable catch error\n        echo()\n        for line in error.stack.split '\\n'\n          echo format_stack.format_line line\n      return null\n    #.......................................................................................................\n    do =>\n      format_stack = new Format_stack { relative: true, }\n      @throws ( Ωbrbr_180 = -> format_stack.format_line 673              ), /expected a text, got a float/\n      @throws ( Ωbrbr_181 = -> format_stack.format_line false            ), /expected a text, got a boolean/\n      @throws ( Ωbrbr_182 = -> format_stack.format_line Symbol 'abc'     ), /expected a text, got a symbol/\n      @throws ( Ωbrbr_183 = -> format_stack.format_line \"line 1\\nline 2\" ), /expected a single line, got a text with line breaks/\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  require_format_stack_format_stack: ->\n    { format_stack,               } = SFMODULES.unstable.require_format_stack()\n    { strip_ansi,                 } = SFMODULES.require_strip_ansi()\n    { type_of,                    } = SFMODULES.unstable.require_type_of()\n    PATH                            = require 'node:path'\n    #.......................................................................................................\n    do =>\n      try\n        cwd         = process.cwd()\n        reference   = PATH.resolve __dirname, '../../../'\n        process.cwd reference\n        class Custom_error extends Error\n        fn_1        = -> throw new Custom_error \"oops\"\n        fn_2        = -> fn_1()\n        fn_3        = -> fn_2()\n        fn_4        = -> fn_3()\n        fn_5        = -> fn_4()\n        fn_5()\n\n        do =>\n          return null\n\n          try fn_5() catch error then null\n          { stack, }  = error\n          # for line in stack.split '\\n'\n          #   echo format_stack.format_line line\n          echo()\n          echo()\n          echo '———————————————————————————————————————————————————————————————————————————'\n          echo()\n          echo()\n          echo format_stack error\n          echo stack\n      finally\n        process.chdir cwd\n      return null\n    # #.......................................................................................................\n    # do =>\n    #   format_stack = new Format_stack { relative: true, }\n    #   try not_a_variable catch error\n    #     echo()\n    #     for line in error.stack.split '\\n'\n    #       echo format_stack.format_line line\n    #   return null\n    #.......................................................................................................\n    return null\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  guytest_cfg = { throw_on_error: false,  show_passes: false, report_checks: false, }\n  guytest_cfg = { throw_on_error: true,   show_passes: false, report_checks: false, }\n  # ( new Test guytest_cfg ).test { require_format_stack_parse_line: tests.require_format_stack_parse_line, }\n  # ( new Test guytest_cfg ).test { require_format_stack_parse_line_relative: tests.require_format_stack_parse_line_relative, }\n  # ( new Test guytest_cfg ).test { tests, }\n  # ( new Test guytest_cfg ).test { require_format_stack_format_line: tests.require_format_stack_format_line, }\n  # ( new Test guytest_cfg ).test { require_format_stack_format_stack: tests.require_format_stack_format_stack, }\n  tests.require_format_stack_format_stack()\n  #.........................................................................................................\n  demo_clean = ->\n    ( new Test guytest_cfg ).test { get_random_integer_producer: tests.get_random_integer_producer, }\n    a = {}\n    b = { o: 6, }\n    c = { o: undefined, }\n    clean = ( x ) -> Object.fromEntries ( [ k, v, ] for k, v of x when v? )\n    debug 'Ωbrbr_192', d = { a..., ( clean b )..., ( clean c )..., }\n  #.........................................................................................................\n  return null\n"
  ]
}