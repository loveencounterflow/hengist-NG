{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'intertype/test-basics'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\n# WGUY                      = require '../../../apps/webguy'\nGTNG                      = require '../../../apps/guy-test-NG'\n{ Test                  } = GTNG\n{ f }                     = require '../../../apps/effstring'\n{ red\n  reverse               } = GUY.trm\n\n\n\n############################################################################################################\n#\n#===========================================================================================================\n@nfa_tasks =\n\n  #=========================================================================================================\n  internals:\n\n    #-------------------------------------------------------------------------------------------------------\n    push_pop_set_at: ->\n      NFA = require '../../../apps/normalize-function-arguments'\n      { push_at\n        pop_at\n        set_at } = NFA.internals\n      A = ( parts ) -> Array.from parts.join ''\n      #.......................................................................................................\n      do =>\n        @eq     ( Ωnfat___1 = -> push_at  A'abcd', -1, '^'                    ), A'abc^d'\n        @eq     ( Ωnfat___2 = -> push_at  A'abcd', -2, '^'                    ), A'ab^cd'\n        @eq     ( Ωnfat___3 = -> push_at  A'abcd', -3, '^'                    ), A'a^bcd'\n        @eq     ( Ωnfat___4 = -> push_at  A'',     -1, '^'                    ), A'^'\n        @eq     ( Ωnfat___5 = -> push_at  A'',     -2, '^'                    ), A'^'\n        @eq     ( Ωnfat___6 = -> push_at  A'',     -3, '^'                    ), A'^'\n        @throws ( Ωnfat___7 = -> push_at  A'',      1, '?'                    ), /expected negative number/\n        @throws ( Ωnfat___8 = -> push_at  A'',      0, '?'                    ), /expected negative number/\n        @eq     ( Ωnfat___9 = -> [ ( set_at ( d = A'abcd' ), -1, '^' ), d, ]  ), [ '^', A'abc^', ]\n        @eq     ( Ωnfat__10 = -> [ ( set_at ( d = A'abcd' ), -2, '^' ), d, ]  ), [ '^', A'ab^d', ]\n        @eq     ( Ωnfat__11 = -> [ ( set_at ( d = A'abcd' ), -3, '^' ), d, ]  ), [ '^', A'a^cd', ]\n        # @eq     ( Ωnfat__12 = -> [ ( pop_at ( d = A'abc^' ), -1 ), d, ]       ), [ '^', A'abc', ]\n        # @eq     ( Ωnfat__13 = -> [ ( pop_at ( d = A'ab^c' ), -2 ), d, ]       ), [ '^', A'abc', ]\n        # @eq     ( Ωnfat__14 = -> [ ( pop_at ( d = A'a^bc' ), -3 ), d, ]       ), [ '^', A'abc', ]\n        # @throws ( Ωnfat__15 = -> pop_at   A'',      1                         ), /expected negative number/\n        # @throws ( Ωnfat__16 = -> pop_at   A'',      0                         ), /expected negative number/\n        # @throws ( Ωnfat__17 = -> pop_at   [], -1          ), /list too short/\n        # @throws ( Ωnfat__18 = -> pop_at   [ 1, ], -2      ), /list too short/\n        return null\n      # #.......................................................................................................\n      # do =>\n      #   d = A'abcdef'\n      #   @eq     ( Ωnfat__19 = -> push_at  [           ], -1, 'g' ), [ 'g', ]\n      #   @eq     ( Ωnfat__20 = -> push_at  [ 'b',      ], -1, 'a' ), [ 'a', 'b', ]\n      #   @eq     ( Ωnfat__21 = -> push_at  [ 'a', 'c', ], -1, 'b' ), [ 'a', 'b', 'c', ]\n      #   return null\n      #.......................................................................................................\n      return null\n\n  #=========================================================================================================\n  basics: ->\n    NFA = require '../../../apps/normalize-function-arguments'\n    { nfa\n      get_signature } = NFA\n    #.......................................................................................................\n    do =>\n      fn = nfa ( a, b, c, cfg ) -> { a, b, c, cfg, }\n      frz = Object.freeze\n      #.....................................................................................................\n      @eq     ( Ωnfat__22 = -> fn()                           ), { a: undefined, b: undefined, c: undefined, cfg: {a: undefined, b: undefined, c: undefined, } }\n      @eq     ( Ωnfat__23 = -> fn 1                           ), { a: 1,         b: undefined, c: undefined, cfg: { a: 1,        b: undefined, c: undefined, } }\n      @eq     ( Ωnfat__24 = -> fn 1, 2                        ), { a: 1,         b: 2,         c: undefined, cfg: { a: 1,        b: 2,         c: undefined,  } }\n      @eq     ( Ωnfat__25 = -> fn 1, 2, 3                     ), { a: 1,         b: 2,         c: 3,         cfg: { a: 1,        b: 2,         c: 3 } }\n      @throws ( Ωnfat__26 = -> fn 1, 2, 3, 4                  ), /expected an optional POD at position -1/\n      @eq     ( Ωnfat__27 = -> fn                 {}          ), { a: undefined, b: undefined, c: undefined, cfg: { a: undefined, b: undefined, c: undefined, } }\n      @eq     ( Ωnfat__28 = -> fn 1,              {}          ), { a: 1,         b: undefined, c: undefined, cfg: { a: 1,         b: undefined, c: undefined, } }\n      @eq     ( Ωnfat__29 = -> fn 1, 2,           {}          ), { a: 1,         b: 2,         c: undefined, cfg: { a: 1,         b: 2,         c: undefined, } }\n      @eq     ( Ωnfat__30 = -> fn 1, 2, 3,        {}          ), { a: 1,         b: 2,         c: 3,         cfg: { a: 1,         b: 2,         c: 3,         } }\n      @throws ( Ωnfat__31 = -> fn 1, 2, 3, 4,     {}          ), /expected up to 4 arguments, got 5/\n      @eq     ( Ωnfat__32 = -> fn                 { b: 88, }  ), { a: undefined, b: 88,        c: undefined, cfg: { a: undefined, b: 88,        c: undefined, } }\n      @eq     ( Ωnfat__33 = -> fn 1,              { b: 88, }  ), { a: 1,         b: 88,        c: undefined, cfg: { a: 1,         b: 88,        c: undefined, } }\n      @eq     ( Ωnfat__34 = -> fn 1, 2,           { b: 88, }  ), { a: 1,         b: 2,         c: undefined, cfg: { a: 1,         b: 2,         c: undefined, } }\n      @eq     ( Ωnfat__35 = -> fn 1, 2, 3,        { b: 88, }  ), { a: 1,         b: 2,         c: 3,         cfg: { a: 1,         b: 2,         c: 3,         } }\n      @throws ( Ωnfat__36 = -> fn 1, 2, 3, 4,     { b: 88, }  ), /expected up to 4 arguments, got 5/\n      @eq     ( Ωnfat__37 = -> fn             frz { b: 88, }  ), { a: undefined, b: 88,        c: undefined, cfg: { a: undefined, b: 88,        c: undefined, } }\n      @eq     ( Ωnfat__38 = -> fn 1,          frz { b: 88, }  ), { a: 1,         b: 88,        c: undefined, cfg: { a: 1,         b: 88,        c: undefined, } }\n      @eq     ( Ωnfat__39 = -> fn 1, 2,       frz { b: 88, }  ), { a: 1,         b: 2,         c: undefined, cfg: { a: 1,         b: 2,         c: undefined, } }\n      @eq     ( Ωnfat__40 = -> fn 1, 2, 3,    frz { b: 88, }  ), { a: 1,         b: 2,         c: 3,         cfg: { a: 1,         b: 2,         c: 3,         } }\n      @throws ( Ωnfat__41 = -> fn 1, 2, 3, 4, frz { b: 88, }  ), /expected up to 4 arguments, got 5/\n      #.....................................................................................................\n      return null\n    #.......................................................................................................\n    do =>\n      fn = nfa ( cfg ) -> { cfg, }\n      frz = Object.freeze\n      #.....................................................................................................\n      @eq     ( Ωnfat__42 = -> fn()                           ), { cfg: {} }\n      @eq     ( Ωnfat__43 = -> fn                 {}          ), { cfg: {} }\n      @eq     ( Ωnfat__44 = -> fn                 { b: 88, }  ), { cfg: { b: 88, } }\n      @eq     ( Ωnfat__45 = -> fn             frz { b: 88, }  ), { cfg: { b: 88, } }\n      @throws ( Ωnfat__46 = -> fn 1, 2, 3, 4                  ), /expected up to 1 arguments, got 4/\n      @throws ( Ωnfat__47 = -> fn 1, 2, 3, 4,     {}          ), /expected up to 1 arguments, got 5/\n      @throws ( Ωnfat__48 = -> fn 1, 2, 3, 4,     { b: 88, }  ), /expected up to 1 arguments, got 5/\n      @throws ( Ωnfat__49 = -> fn 1, 2, 3, 4, frz { b: 88, }  ), /expected up to 1 arguments, got 5/\n      #.....................................................................................................\n      return null\n    #.......................................................................................................\n    do =>\n      @throws ( Ωnfat__50 = -> nfa () -> {} ), /not compliant/\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  get_signature: ->\n    NFA = require '../../../apps/normalize-function-arguments'\n    { nfa\n      get_signature } = NFA\n    #.......................................................................................................\n    do =>\n      optional = null\n      ```\n      const empty_fn = function (\n\n        cfg\n\n        ) {};\n      ```\n      @eq     ( Ωnfat__51 = -> get_signature ( a, cfg             ) ->  ), { names: [ 'a', 'cfg' ], q_idx: 1, q_ridx: -1, }\n      @throws ( Ωnfat__52 = -> get_signature ( a = optional, cfg  ) ->  ), /not compliant/\n      @throws ( Ωnfat__53 = -> get_signature ( a                  ) ->  ), /not compliant/\n      @eq     ( Ωnfat__54 = -> get_signature empty_fn                   ), { names: [ 'cfg' ], q_idx: 0, q_ridx: -1, }\n      @eq     ( Ωnfat__55 = -> get_signature ( cfg )                ->  ), { names: [ 'cfg' ], q_idx: 0, q_ridx: -1, }\n      @eq     ( Ωnfat__56 = -> get_signature ( a, b, c, cfg       ) ->  ), { names: [ 'a', 'b', 'c', 'cfg' ], q_idx: 3, q_ridx: -1, }\n      # ### TAINT limitation of CoffeeScript: signature runs up to soak, trailing paramters handled inside function body ###\n      # @eq     ( Ωnfat__57 = -> get_signature ( a, b..., c       ) ->  ), { a: 'bare', b: 'soak', }\n      @throws ( Ωnfat__58 = -> get_signature ( a, b..., c, cfg    ) ->  ), /not compliant/\n      @throws ( Ωnfat__59 = -> get_signature ( a, b = null, cfg   ) ->  ), /not compliant/\n      return null\n    #.......................................................................................................\n    do =>\n      @throws ( Ωnfat__60 = -> get_signature ( a, b, cfg, c,      g ) ->  ), /not compliant/\n      @eq     ( Ωnfat__61 = -> get_signature ( a, b,      c, cfg, g ) ->  ), { names: [ 'a', 'b', 'c', 'cfg', 'g', ], q_idx: 3, q_ridx: -2, }\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  template_class: ->\n    NFA = require '../../../apps/normalize-function-arguments'\n    { Template } = NFA\n    #.......................................................................................................\n    do =>\n      @eq     ( Ωnfat__62 = -> new Template { arc: 10, bo: 11, cy: 12, din: 13; eps: 14, foo: 15, } ), { arc: 10, bo: 11, cy: 12, din: 13; eps: 14, foo: 15, }\n    #.......................................................................................................\n    do =>\n      mylist_1      = []\n      mylist_2      = []\n      t = new Template\n        mylist_1:     mylist_1\n        mylist_2:     -> mylist_2\n        mylist_3:     -> []\n      mylist_31 = t.mylist_3\n      mylist_32 = t.mylist_3\n      @eq     ( Ωnfat__63 = -> t ), { mylist_1: [], mylist_2: [], mylist_3: [], }\n      @eq     ( Ωnfat__64 = -> t.mylist_1   is    mylist_1  ), true\n      @eq     ( Ωnfat__65 = -> t.mylist_2   is    mylist_2  ), true\n      @eq     ( Ωnfat__66 = -> t.mylist_1   isnt  mylist_2  ), true\n      @eq     ( Ωnfat__67 = -> t.mylist_31  isnt  mylist_32 ), true\n      mylist_1.push 'A'\n      mylist_2.push 'B'\n      mylist_31.push 'C'\n      @eq     ( Ωnfat__68 = -> t ), { mylist_1: [ 'A', ], mylist_2: [ 'B', ], mylist_3: [], }\n      return null\n    #.......................................................................................................\n    do =>\n      cfg =\n        name:\n          first:    'John'\n          last:     'Doe'\n      t_1 = new Template cfg\n      t_2 = new Template cfg\n      @eq     ( Ωnfat__69 = -> t_1                        ), { name: { first: 'John', last: 'Doe', }, }\n      @eq     ( Ωnfat__70 = -> t_1.name isnt cfg.name     ), true\n      @eq     ( Ωnfat__71 = -> t_1                        ), { name: { first: 'John', last: 'Doe', }, }\n      @eq     ( Ωnfat__72 = -> t_2.name isnt cfg.name     ), true\n      @eq     ( Ωnfat__73 = -> t_1.name isnt t_2.name     ), true\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  template_setting: ->\n    NFA = require '../../../apps/normalize-function-arguments'\n    { nfa\n      internals } = NFA\n    # #.......................................................................................................\n    # ### NOTE for later: preserve managed properties? ###\n    # do =>\n    #   template =\n    #     arc:      10\n    #     bo:       11\n    #     cy:       12\n    #     sum:      -> @arc + @bo + @cy\n    #   fn = nfa { template, }, ( arc, bo, cy, cfg ) -> { arc, bo, cy, cfg, sum: cfg.sum, }\n    #   # fn = nfa ( arc, bo, cy, cfg ) -> { arc, bo, cy, cfg, sum: cfg.sum, }\n    #   debug 'Ωnfat__74', internals.gnd.nfa_cfg\n    #   debug 'Ωnfat__75', internals.gnd.nfa_cfg.template\n    #   debug 'Ωnfat__76', fn 1, 2, 3, {}\n    #   @eq     ( Ωnfat__77 = -> fn 1, 2, 3, {} ), { arc: 1, bo: 2, cy: 3, cfg: { arc: 1, bo: 2, cy: 3, sum: 6, }, sum: 6, }\n    #   @eq     ( Ωnfat__78 = -> fn 1, 2, 3     ), { arc: 1, bo: 2, cy: 3, cfg: { arc: 1, bo: 2, cy: 3, sum: 6, }, sum: 6, }\n    #   return null\n    #.......................................................................................................\n    do =>\n      template =\n        arc:      10\n        bo:       11\n        cy:       12\n      fn = nfa { template, }, ( arc, bo, cy, cfg ) -> { arc, bo, cy, cfg, }\n      @eq     ( Ωnfat__79 = -> fn 20, 21, 22, {} ), { arc: 20, bo: 21, cy: 22, cfg: { arc: 20, bo: 21, cy: 22, }, }\n      @eq     ( Ωnfat__80 = -> fn()              ), { arc: 10, bo: 11, cy: 12, cfg: { arc: 10, bo: 11, cy: 12, }, }\n      @eq     ( Ωnfat__81 = -> fn 20             ), { arc: 20, bo: 11, cy: 12, cfg: { arc: 20, bo: 11, cy: 12, }, }\n      @eq     ( Ωnfat__82 = -> fn 20, 21         ), { arc: 20, bo: 21, cy: 12, cfg: { arc: 20, bo: 21, cy: 12, }, }\n      @eq     ( Ωnfat__83 = -> fn 20, 21, 22     ), { arc: 20, bo: 21, cy: 22, cfg: { arc: 20, bo: 21, cy: 22, }, }\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  cfg_in_penultimate_position: ->\n    NFA = require '../../../apps/normalize-function-arguments'\n    { nfa\n      internals } = NFA\n    #.......................................................................................................\n    do =>\n      template =\n        name:     null\n      fn = nfa { template, }, ( name, cfg ) -> { name, cfg, }\n      @eq     ( Ωnfat__84 = -> fn()                         ), { name: null,      cfg: { name: null    } }\n      @eq     ( Ωnfat__85 = -> fn 'alice', { name: 'bob', } ), { name: 'alice',   cfg: { name: 'alice' } }\n      return null\n    #.......................................................................................................\n    do =>\n      template =\n        name:     'carl'\n      F   = Symbol.for 'F'\n      fn  = nfa { template, }, ( name, cfg, f ) -> { name, f, cfg, }\n      @eq     ( Ωnfat__86 = -> fn()                             ), { name: 'carl',  f: undefined, cfg: { name: 'carl',  f: undefined, }, }\n      @eq     ( Ωnfat__87 = -> fn          { name: 'bob', }, F  ), { name: 'bob',   f: F,         cfg: { name: 'bob',   f: F,         }, }\n      @eq     ( Ωnfat__88 = -> fn 'alice', { name: 'bob', }, F  ), { name: 'alice', f: F,         cfg: { name: 'alice', f: F,         }, }\n      @eq     ( Ωnfat__89 = -> fn          {              }, F  ), { name: 'carl',  f: F,         cfg: { name: 'carl',  f: F,         }, }\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  function_naming: ->\n    NFA = require '../../../apps/normalize-function-arguments'\n    { nfa\n      internals } = NFA\n    #.......................................................................................................\n    do =>\n      my_fn = ( cfg ) ->\n      @eq     ( Ωnfat__90 = ->       my_fn.name   ), 'my_fn'\n      @eq     ( Ωnfat__91 = -> ( nfa my_fn ).name ), 'my_fn'\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  use_isa_setting: ->\n    NFA = require '../../../apps/normalize-function-arguments'\n    { nfa\n      internals } = NFA\n    { gnd       } = internals\n    #.......................................................................................................\n    float           = isa: ( x ) -> Number.isFinite x\n    text            = isa: ( x ) -> ( typeof x ) is 'string'\n    nonempty_text   = isa: ( x ) -> ( text.isa x ) and x.length > 0\n    #.......................................................................................................\n    do =>\n      template  = { q: 0, u: 'u', }\n      isa       = ( x ) ->\n        return false unless gnd.pod.isa       x\n        return false unless float.isa         x.q\n        return false unless nonempty_text.isa x.u\n        return true\n      fn = nfa { isa, template, }, quantity_create = ( q, u, cfg ) -> cfg\n      @eq     ( Ωnfat__92 = ->  fn 3, 's'         ), { q: 3, u: 's', }\n      @throws ( Ωnfat__93 = ->  fn 3, ''          ), /validation error: expected a quantity_create_cfg/\n      return null\n    #.......................................................................................................\n    return null\n\n\n#===========================================================================================================\ndemo_isa_with_reason = ->\n  NFA = require '../../../apps/normalize-function-arguments'\n  { nfa\n    internals } = NFA\n  { gnd       } = internals\n  em = ( P... ) -> GUY.trm.reverse GUY.trm.gold GUY.trm.bold '', P..., ''\n  att = ( P... ) -> GUY.trm.reverse GUY.trm.red GUY.trm.bold '', P..., ''\n  #.......................................................................................................\n  float           = isa: ( x, nope = -> false ) ->\n    return nope \"Number.isFinite x\"         unless Number.isFinite x\n    return true\n  text            = isa: ( x, nope = -> false ) ->\n    return nope \"( typeof x ) is 'string'\"  unless ( typeof x ) is 'string'\n    return true\n  nonempty_text   = isa: ( x, nope = -> false ) ->\n    return nope \"text.isa x\"                unless text.isa x, nope\n    return nope \"x.length > 0\"              unless x.length > 0\n    return true\n  #.......................................................................................................\n  quantity = isa: ( x, nope = -> false ) ->\n    return nope \"gnd.pod.isa       x  \" unless gnd.pod.isa       x,    nope\n    return nope \"float.isa         x.q\" unless float.isa         x.q,  nope\n    return nope \"nonempty_text.isa x.u\" unless nonempty_text.isa x.u,  nope\n    return true\n  #.......................................................................................................\n  nonempty_text_2 = isa:\n    text_isa_x:           ( x ) -> text.isa x, nope\n    x_length_gt_0:        ( x ) -> x.length > 0\n  #.......................................................................................................\n  quantity_2 = isa:\n    gnd_pod_isa_x:            ( x ) -> gnd.pod.isa         x\n    float_isa_x_q:            ( x ) -> float.isa           x.q\n    nonempty_text_2_isa_x_u:  ( x ) -> nonempty_text_2.isa x.u\n  #.......................................................................................................\n  info 'Ωnfat__94', quantity_2.isa.gnd_pod_isa_x.toString()\n  info 'Ωnfat__94', quantity_2.isa.float_isa_x_q.toString()\n  info 'Ωnfat__94', quantity_2.isa.nonempty_text_2_isa_x_u.toString()\n  quantity_2.isa = do ( isas = quantity_2.isa ) =>\n    return ( x ) ->\n      for key, isa of isas\n        return nope key unless isa x\n      return true\n  #.......................................................................................................\n  nonempty_text_2.isa = do ( isas = nonempty_text_2.isa ) =>\n    return ( x ) ->\n      for key, isa of isas\n        return nope key unless isa x\n      return true\n\n  messages = []\n  nope = ( message ) -> false                         # discarding messages\n  nope = ( message ) -> messages.push message; false  # collecting messages\n  get_messages = -> R = ( ( \"#{att 'not'}#{em m}\" for m in messages ).join reverse ' ▶ ' ).replace /\\s+/g, ' '; messages = []; R\n  info 'Ωnfat__94', ( quantity.isa {},                nope  ), ( att \"failed\" ), em get_messages()\n  info 'Ωnfat__95', ( text.isa     null,              nope  ), ( att \"failed\" ), em get_messages()\n  info 'Ωnfat__96', ( quantity.isa { q: 8.1, },       nope  ), ( att \"failed\" ), em get_messages()\n  info 'Ωnfat__97', ( quantity.isa { q: 8.1, u: '' }, nope  ), ( att \"failed\" ), em get_messages()\n  info 'Ωnfat__98', ( quantity.isa { q: 8.1, u: 0  }, nope  ), ( att \"failed\" ), em get_messages()\n  info 'Ωnfat__99', ( quantity_2.isa { q: 8.1, u: 0  }  ), ( att \"failed\" ), em get_messages()\n  return null\n\n#===========================================================================================================\ndemo_types_as_functions = ->\n  ###\n\n  * a 'type' is a / is implemented as a function that accepts one argument `x` and returns `undefined`,\n    `null` or `true` if `x` is considered to be an element of the type / a value conforming to the type;\n    otherwise, it must return a string that identifies the test that `x` did not pass; so for example,\n    a type `empty` described as the set of all values that have a property `x.length` whose value is `0`:\n\n    empty = ( x ) -> return \"x.length is 0\" unless x? and ( x.length is 0 )\n\n  ###\n  isa = ( expectation = undefined ) -> return ( not expectation? ) or ( expectation is true )\n  ts =\n    # text: ( x ) -> if ( typeof x ) is 'string' then true else \"( typeof x ) is 'string'\"\n    text: ( x ) -> return \"( typeof x ) is 'string'\" unless ( typeof x ) is 'string'\n  debug 'Ωnfat__94', ( rpr ts.text '' ), ( isa ts.text '' )\n  debug 'Ωnfat__94', ( rpr ts.text 34 ), ( isa ts.text 34 )\n  return null\n\n#===========================================================================================================\nif module is require.main then await do =>\n  # guytest_cfg = { throw_on_error: true,   show_passes: true,  report_checks: false, }\n  # # guytest_cfg = { throw_on_error: false,  show_passes: false, report_checks: false, }\n  # ( new Test guytest_cfg ).test @nfa_tasks\n  # # ( new Test guytest_cfg ).test { push_pop_set_at: @nfa_tasks.internals.push_pop_set_at }\n  demo_isa_with_reason()\n  demo_types_as_functions()\n\n  # f = ( a, b, cfg ) -> { a, b, cfg, }\n  # debug()\n  # debug 'Ωnfat_100', f()\n  # debug 'Ωnfat_101', f undefined\n  # debug 'Ωnfat_102', f 0\n  # debug 'Ωnfat_103', f 0, 1\n  # debug 'Ωnfat_104', f 0, 1, undefined\n  # debug 'Ωnfat_105', f 0, 1, \"wat\"\n  # debug 'Ωnfat_106', f 0, 1, {}\n\n  # f = ( a, b, cfg, u ) -> { a, b, cfg, u, }\n  # debug()\n  # debug 'Ωnfat_107', f()\n  # debug 'Ωnfat_108', f undefined\n  # debug 'Ωnfat_109', f 0\n  # debug 'Ωnfat_110', f 0, {}\n  # debug 'Ωnfat_111', f 0, 1\n  # debug 'Ωnfat_112', f 0, 1, undefined\n  # debug 'Ωnfat_113', f 0, 1, \"wat\"\n  # debug 'Ωnfat_114', f 0, 1, {}\n  # debug 'Ωnfat_115', f 0, 1, undefined, 3\n  # debug 'Ωnfat_116', f 0, 1, \"wat\", 3\n  # debug 'Ωnfat_117', f 0, 1, {}, 3\n  # # debug 'Ωnfat_118', f [ 0, 1, , 3, ]...\n\n\n\n"
  ]
}