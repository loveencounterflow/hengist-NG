{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'promptparser/test-basics'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\nWGUY                      = require '../../../apps/webguy'\n# TMP_types                 = new ( require 'intertype-203.0.0' ).Intertype()\nGTNG                      = require '../../../apps/guy-test-NG'\n{ Test                  } = GTNG\nPATH                      = require 'node:path'\nFS                        = require 'node:fs'\n# test_mode                 = 'throw_failures'\n# test_mode                 = 'throw_errors'\n# test_mode                 = 'failsafe'\n{ isa\n  type_of }               = require 'intertype'\n\n\n#===========================================================================================================\ncfg = do ->\n  db_folder_path            = PATH.resolve  __dirname,                '/dev/shm'\n  db_file_path              = PATH.join     db_folder_path,           'prompts-and-generations.bd6ef2fc-3d7c-4e3e-9e41-76712e65cede.sqlite'\n  assets_folder_path        = PATH.resolve  __dirname,                '../../../assets'\n  promptparser_folder_path  = PATH.join     assets_folder_path,       'promptparser'\n  short_prompts_file_path   = PATH.join     promptparser_folder_path, 'short-prompts.md'\n  { assets_folder_path, promptparser_folder_path, short_prompts_file_path, db_folder_path, db_file_path, }\n\n\n#===========================================================================================================\n### TAINT consider to make test preparation a feature of `guy-test` ###\nprepare_task = ->\n  whisper GUY.trm.plum \"Ω___1 prepare_task / try to remove DB file:\", H.try_to_remove_file cfg.db_file_path\n  return null\n\n#===========================================================================================================\n### TAINT relocate these methods to `guy-test` ###\nH =\n\n  #---------------------------------------------------------------------------------------------------------\n  _get_stats: ( path ) ->\n    try ( R = FS.statSync path ) catch error\n      return null if error.code is 'ENOENT'\n      throw error\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  file_exists: ( path ) ->\n    return false unless ( stats = @_get_stats path )?\n    return stats.isFile()\n\n  #---------------------------------------------------------------------------------------------------------\n  folder_exists: ( path ) ->\n    return false unless ( stats = @_get_stats path )?\n    return stats.isDirectory()\n\n  #---------------------------------------------------------------------------------------------------------\n  try_to_remove_file: ( path ) ->\n    try FS.unlinkSync path catch error\n      return 0 if error.code is 'ENOENT'\n      throw error\n    return 1\n\n  # #---------------------------------------------------------------------------------------------------------\n  # @resolve_path = ( path ) -> PATH.resolve PATH.join __dirname, '../../../', path\n\n  # #---------------------------------------------------------------------------------------------------------\n  # @copy_over = ( from_path, to_path ) ->\n  #   @try_to_remove_file to_path unless to_path in [ ':memory:', '', ]\n  #   await FSP.copyFile from_path, to_path\n  #   return null\n\n\n#===========================================================================================================\npromptparser_tasks =\n\n  #---------------------------------------------------------------------------------------------------------\n  fundamentals:\n\n    #-------------------------------------------------------------------------------------------------------\n    can_find_source_locations_and_files: ->\n      prepare_task()\n      @eq ( assets_folder       = -> H.folder_exists  cfg.assets_folder_path        ), true\n      @eq ( promptparser_folder = -> H.folder_exists  cfg.promptparser_folder_path  ), true\n      @eq ( prompts_file        = -> H.file_exists    cfg.short_prompts_file_path   ), true\n      @eq ( db_folder           = -> H.folder_exists  cfg.db_folder_path            ), true\n      return null\n\n\n    #-------------------------------------------------------------------------------------------------------\n    cannot_use_wrong_path_1: ->\n      prepare_task()\n      { Prompt_file_reader } = require '../../../apps/promptparser'\n      use_wrong_paths = ->\n        db = new Prompt_file_reader '/foo/prompts-and-generations.sqlite', '/bar/short-prompts.md'\n        return null\n      @throws ( Ω___2 = -> use_wrong_paths() ), /Cannot open database because the directory does not exist/\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    cannot_use_wrong_path_2: ->\n      prepare_task()\n      { Prompt_file_reader } = require '../../../apps/promptparser'\n      use_wrong_paths = ->\n        db = new Prompt_file_reader '/foo/prompts-and-generations.sqlite', '/bar/short-prompts.md'\n        return null\n      @throws ( Ω___3 = -> use_wrong_paths() ), /Cannot open database because the directory does not exist/\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    can_omit_prompt_file_path: ->\n      prepare_task()\n      { Prompt_file_reader } = require '../../../apps/promptparser'\n      db = new Prompt_file_reader cfg.db_file_path, null\n      @eq ( Ω___4 = -> db instanceof Prompt_file_reader ), true\n      @eq ( Ω___5 = -> isa.object db.cfg                ), true\n      @eq ( Ω___6 = -> db.cfg.db_path                   ), cfg.db_file_path\n      @eq ( Ω___7 = -> db.cfg.datasource_path           ), null\n      @eq ( Ω___8 = -> db.cfg.has_db_path               ), true\n      @eq ( Ω___9 = -> db.cfg.has_datasource_path       ), false\n      return null\n\n  #---------------------------------------------------------------------------------------------------------\n  single_prompt_parsing:\n\n    #-------------------------------------------------------------------------------------------------------\n    interface: ->\n      prepare_task()\n      { Prompt_file_reader } = require '../../../apps/promptparser'\n      db = new Prompt_file_reader cfg.db_file_path, cfg.short_prompts_file_path\n      @eq ( Ω__10 = -> db.types.type_of db.parse_first_tokens                 ), 'function'\n      @eq ( Ω__11 = -> db.types.type_of db.parse_all_tokens                   ), 'function'\n      @eq ( Ω__12 = -> db.types.type_of db.parse_first_records                ), 'function'\n      @eq ( Ω__13 = -> db.types.type_of db.parse_all_records                  ), 'function'\n      @eq ( Ω__14 = -> db.types.type_of db.parse_first_tokens   '[s432] helo' ), 'list'\n      @eq ( Ω__15 = -> db.types.type_of db.parse_all_tokens     '[s432] helo' ), 'list'\n      @eq ( Ω__16 = -> db.types.type_of db.parse_first_records  '[s432] helo' ), 'list'\n      @eq ( Ω__17 = -> db.types.type_of db.parse_all_records    '[s432] helo' ), 'list'\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    parse_all_records: ->\n      prepare_task()\n      { Prompt_file_reader } = require '../../../apps/promptparser'\n      db = new Prompt_file_reader cfg.db_file_path, cfg.short_prompts_file_path\n      #.....................................................................................................\n      result  = db.parse_all_records '[s432] helo\\n[1] world\\n\\n'\n      matcher = [\n        [\n          { '$key': 'record', table: 'prompts', fields: { id: 'c6efaf27673db4f7', lnr: 1, prompt: 'helo', comment: null, rejected: false } },\n          { '$key': 'record', table: 'generations', fields: { prompt_id: 'c6efaf27673db4f7', nr: 1, count: 4 } },\n          { '$key': 'record', table: 'generations', fields: { prompt_id: 'c6efaf27673db4f7', nr: 2, count: 3 } },\n          { '$key': 'record', table: 'generations', fields: { prompt_id: 'c6efaf27673db4f7', nr: 3, count: 2 } } ],\n        [\n          { '$key': 'record', table: 'prompts', fields: { id: '7c211433f0207159', lnr: 2, prompt: 'world', comment: null, rejected: false } },\n          { '$key': 'record', table: 'generations', fields: { prompt_id: '7c211433f0207159', nr: 1, count: 1 } } ],\n        [\n          { '$key': 'record', table: 'prompts', fields: { id: 'da39a3ee5e6b4b0d', lnr: 2, prompt: '', comment: null, rejected: false } } ],\n        [\n          { '$key': 'record', table: 'prompts', fields: { id: 'da39a3ee5e6b4b0d', lnr: 2, prompt: '', comment: null, rejected: false } } ] ]\n      @eq ( Ω__18 = -> result ), matcher\n      #.....................................................................................................\n      do =>\n        for records from result\n          whisper 'Ω__19', '————————————————————————————————————————'\n          for record from records\n            whisper 'Ω__20', record\n        whisper 'Ω__21', '————————————————————————————————————————'\n      #.....................................................................................................\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    parse_first_records: ->\n      prepare_task()\n      { Prompt_file_reader } = require '../../../apps/promptparser'\n      db = new Prompt_file_reader cfg.db_file_path, cfg.short_prompts_file_path\n      #.....................................................................................................\n      result  = db.parse_first_records '[s432] helo\\n[1] world\\n\\n'\n      urge 'Ω__22', result\n      matcher = [\n        { '$key': 'record', table: 'prompts', fields: { id: 'c6efaf27673db4f7', lnr: 1, prompt: 'helo', comment: null, rejected: false } },\n        { '$key': 'record', table: 'generations', fields: { prompt_id: 'c6efaf27673db4f7', nr: 1, count: 4 } },\n        { '$key': 'record', table: 'generations', fields: { prompt_id: 'c6efaf27673db4f7', nr: 2, count: 3 } },\n        { '$key': 'record', table: 'generations', fields: { prompt_id: 'c6efaf27673db4f7', nr: 3, count: 2 } } ]\n      @eq ( Ω__23 = -> result ), matcher\n      #.....................................................................................................\n      do =>\n        for record from result\n          whisper 'Ω__24', record\n        whisper 'Ω__25', '————————————————————————————————————————'\n      #.....................................................................................................\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    parse_all_tokens: ->\n      prepare_task()\n      { Prompt_file_reader } = require '../../../apps/promptparser'\n      db = new Prompt_file_reader cfg.db_file_path, cfg.short_prompts_file_path\n      #.....................................................................................................\n      result  = db.parse_all_tokens '[s432] helo\\n[1] world\\n\\n'\n      matcher = [\n        [\n          { '$key': 'marks:marksleft', jump: 'marks', value: '[', lnr1: 1, x1: 0, lnr2: 1, x2: 1, data: null, source: '[s432] helo' },\n          { '$key': 'marks:format', jump: null, value: 's', lnr1: 1, x1: 1, lnr2: 1, x2: 2, data: null, source: '[s432] helo' },\n          { '$key': 'marks:generation', jump: null, value: '4', lnr1: 1, x1: 2, lnr2: 1, x2: 3, data: null, source: '[s432] helo' },\n          { '$key': 'marks:generation', jump: null, value: '3', lnr1: 1, x1: 3, lnr2: 1, x2: 4, data: null, source: '[s432] helo' },\n          { '$key': 'marks:generation', jump: null, value: '2', lnr1: 1, x1: 4, lnr2: 1, x2: 5, data: null, source: '[s432] helo' },\n          { '$key': 'marks:marksright', jump: 'plain', value: ']', lnr1: 1, x1: 5, lnr2: 1, x2: 6, data: null, source: '[s432] helo' },\n          { '$key': 'plain:prompt', jump: null, value: ' helo', lnr1: 1, x1: 6, lnr2: 1, x2: 11, data: null, source: '[s432] helo' } ],\n        [\n          { '$key': 'marks:marksleft', jump: 'marks', value: '[', lnr1: 2, x1: 0, lnr2: 2, x2: 1, data: null, source: '[1] world' },\n          { '$key': 'marks:generation', jump: null, value: '1', lnr1: 2, x1: 1, lnr2: 2, x2: 2, data: null, source: '[1] world' },\n          { '$key': 'marks:marksright', jump: 'plain', value: ']', lnr1: 2, x1: 2, lnr2: 2, x2: 3, data: null, source: '[1] world' },\n          { '$key': 'plain:prompt', jump: null, value: ' world', lnr1: 2, x1: 3, lnr2: 2, x2: 9, data: null, source: '[1] world' } ], #\n        [],\n        [] ]\n      @eq ( Ω__26 = -> result ), matcher\n      #.....................................................................................................\n      do =>\n        for records from result\n          whisper 'Ω__27', '————————————————————————————————————————'\n          for record from records\n            whisper 'Ω__28', record\n        whisper 'Ω__29', '————————————————————————————————————————'\n      #.....................................................................................................\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    parse_first_tokens: ->\n      prepare_task()\n      { Prompt_file_reader } = require '../../../apps/promptparser'\n      db = new Prompt_file_reader cfg.db_file_path, cfg.short_prompts_file_path\n      #.....................................................................................................\n      result  = db.parse_first_tokens '[s432] helo\\n[1] world\\n\\n'\n      urge 'Ω__30', result\n      matcher = [\n        { '$key': 'marks:marksleft', jump: 'marks', value: '[', lnr1: 1, x1: 0, lnr2: 1, x2: 1, data: null, source: '[s432] helo' },\n        { '$key': 'marks:format', jump: null, value: 's', lnr1: 1, x1: 1, lnr2: 1, x2: 2, data: null, source: '[s432] helo' },\n        { '$key': 'marks:generation', jump: null, value: '4', lnr1: 1, x1: 2, lnr2: 1, x2: 3, data: null, source: '[s432] helo' },\n        { '$key': 'marks:generation', jump: null, value: '3', lnr1: 1, x1: 3, lnr2: 1, x2: 4, data: null, source: '[s432] helo' },\n        { '$key': 'marks:generation', jump: null, value: '2', lnr1: 1, x1: 4, lnr2: 1, x2: 5, data: null, source: '[s432] helo' },\n        { '$key': 'marks:marksright', jump: 'plain', value: ']', lnr1: 1, x1: 5, lnr2: 1, x2: 6, data: null, source: '[s432] helo' },\n        { '$key': 'plain:prompt', jump: null, value: ' helo', lnr1: 1, x1: 6, lnr2: 1, x2: 11, data: null, source: '[s432] helo' } ]\n      @eq ( Ω__31 = -> result ), matcher\n      #.....................................................................................................\n      do =>\n        for record from result\n          whisper 'Ω__32', record\n        whisper 'Ω__33', '————————————————————————————————————————'\n      #.....................................................................................................\n      return null\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  t = new Test { throw_on_error: false, }\n  t = new Test { throw_on_error: true, }\n  t.test { promptparser_tasks, }\n\n"
  ]
}