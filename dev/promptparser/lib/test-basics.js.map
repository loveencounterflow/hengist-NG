{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "AAEA;EAAA;AAAA,MAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAGA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,CAAA,CAAE,KAAF,EACE,KADF,EAEE,IAFF,EAGE,IAHF,EAIE,KAJF,EAKE,MALF,EAME,IANF,EAOE,IAPF,EAQE,OARF,CAAA,GAQ4B,GAAG,CAAC,GAAG,CAAC,WAAR,CAAoB,0BAApB,CAR5B;;EASA,CAAA,CAAE,GAAF,EACE,OADF,EAEE,IAFF,EAGE,OAHF,EAIE,GAJF,CAAA,GAI4B,GAAG,CAAC,GAJhC;;EAKA,IAAA,GAA4B,OAAA,CAAQ,sBAAR,EAlB5B;;;EAoBA,IAAA,GAA4B,OAAA,CAAQ,2BAAR;;EAC5B,CAAA,CAAE,IAAF,CAAA,GAA4B,IAA5B,EArBA;;;;;;;EA8BA,IAAA,GAAO,QAAA,CAAA,CAAA;AACP,QAAA,kBAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA;IAAE,CAAA,CAAE,kBAAF,CAAA,GAAyB,OAAA,CAAQ,4BAAR,CAAzB;IACA,OAAA,GAAU,CACR,gCADQ,EAER,yBAFQ,EAGR,sCAHQ,EAIR,+CAJQ,EAKR,kBALQ,EAMR,eANQ,EAOR,cAPQ,EAQR,YARQ,EASR,MATQ,EAUR,YAVQ,EAWR,sDAXQ,EAYR,8DAZQ,EAaR,EAbQ,EAcR,IAdQ,EAeR,eAfQ,EAgBR,oBAhBQ,EAiBR,sBAjBQ;IAmBV,MAAA,GAAS,IAAI,kBAAJ,CAAA;IACT,OAAA,CAAQ,OAAR,EAAiB,0BAAjB;IACA,KAAA,yCAAA;;MACE,OAAA,CAAQ,OAAR,EAAiB,0BAAjB;AACA;MAAA,KAAA,uCAAA;;AACE;AACE,kBAAO,IAAP;AAAA,iBACO,CAAC,CAAC,IAAF,KAAU,QADjB;cACgC,IAAA,CAAQ,OAAR,EAAiB,GAAG,CAAC,GAAG,CAAC,OAAR,CAAgB,GAAA,CAAI,CAAC,CAAC,MAAN,CAAhB,CAAjB;AAAzB;AADP,iBAEO,CAAC,CAAC,QAFT;cAEgC,OAAA,CAAQ,OAAR,EAAiB,CAAA,CAAA,CAAG,CAAC,CAAC,IAAI,CAAC,MAAP,CAAc,EAAd,CAAH,EAAA,CAAA,CAAuB,GAAA,CAAI,CAAC,CAAC,KAAN,CAAvB,CAAA,CAAjB;AAAzB;AAFP;cAGgC,IAAA,CAAQ,OAAR,EAAiB,CAAA,CAAA,CAAG,CAAC,CAAC,IAAI,CAAC,MAAP,CAAc,EAAd,CAAH,EAAA,CAAA,CAAuB,GAAA,CAAI,CAAC,CAAC,KAAN,CAAvB,CAAA,CAAjB;AAHhC,WADF;SAKA,cAAA;UAAM;UACJ,IAAA,CAAK,OAAL,EAAc,KAAK,CAAC,OAApB;UACA,OAAA,CAAQ,OAAR,EAAiB,CAAjB,EAFF;;MANF;IAFF;AAWA,WAAO;EAlCF,EA9BP;;;;;;;EAuEA,IAAA,CAAA;AAvEA",
  "sourcesContent": [
    "\n\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'promptparser/test-basics'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\nWGUY                      = require '../../../apps/webguy'\n# TMP_types                 = new ( require 'intertype-203.0.0' ).Intertype()\nGTNG                      = require '../../../apps/guy-test-NG'\n{ Test                  } = GTNG\n# test_mode                 = 'throw_failures'\n# test_mode                 = 'throw_errors'\n# test_mode                 = 'failsafe'\n\n\n\n\n#===========================================================================================================\ndemo = ->\n  { Prompt_file_reader } = require '../../../apps/promptparser'\n  prompts = [\n    \"[s324w1 some remark] my prompt\"\n    \"[A++v 212] other prompt\"\n    \"[A++v 212 but no cigar] other prompt\"\n    \"[B 2x3 p#3014] Altbau, Versuchsraum, Institut\"\n    \"[WORDING p#4420]\"\n    \"[UNSAFE p#38]\"\n    \"[+++ + p#41]\"\n    \"[meh p#53]\"\n    \"[UU]\"\n    \"[A+v U1UU]\"\n    \"[A++v 22 but not following directions] \\t foo bar   \"\n    \"[A++v 22 but not following directions p#7765] \\t foo bar.   \"\n    \"\"\n    \"[]\"\n    \"just a prompt\"\n    \"     just a prompt\"\n    \"     [324] a prompt.\"\n    ]\n  parser = new Prompt_file_reader()\n  whisper 'Ω___9', '————————————————————————'\n  for prompt in prompts\n    whisper 'Ω__10', '————————————————————————'\n    for d in parser.parse prompt\n      try\n        switch true\n          when d.$key is 'source' then  urge    'Ω__11', GUY.trm.reverse rpr d.$value\n          when d.$stamped         then  whisper 'Ω__12', \"#{d.$key.padEnd 20} #{rpr d.value}\"\n          else                          info    'Ω__13', \"#{d.$key.padEnd 20} #{rpr d.value}\"\n      catch error\n        warn 'Ω__14', error.message\n        whisper 'Ω__15', d\n  return null\n  #.........................................................................................................\n  # p = B.as_pipeline()\n  # debug 'Ω__16', p.run_and_stop()\n  # # T?.eq result, [ [ '*', 'a1', 'a2', 'a3', 'b1', '!b2!', 'b3' ] ]\n  # process.exit 111\n\ndemo()\n\n"
  ]
}