{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'mirror-github-file-to-local'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\n# WGUY                      = require '../../../apps/webguy'\nGTNG                      = require '../../../apps/guy-test-NG'\n{ Test                  } = GTNG\n{ f }                     = require '../../../apps/effstring'\nSFMODULES                 = require '../../../apps/bricabrac-single-file-modules'\n{ ansi_colors_and_effects: C, } = SFMODULES.require_ansi_colors_and_effects()\n\n\n############################################################################################################\n#\n#===========================================================================================================\n@mirror_file_tasks =\n\n  #=========================================================================================================\n  basics: ->\n    patterns =\n      insert_replace: /// ^\n        (?<prefix> .*? )\n        <\n        <\n        <\n        (?<slash> \\/? )\n        (?<command> insert | replace )\n        \\x20+\n        ( (?<position> below | above ) \\x20+ )?\n        (src\\s*=\\s*)?(?<p1>\n          (?:\n            (?: ' (?: \\\\' | [^ ' ]  )+ ' ) |\n            (?: \" (?: \\\\\" | [^ \" ]  )+ \" ) |\n            (?: \\$ [a-zA-Z0-9]+          ) # insert JS identifier pattern\n            )\n          )\n        >\n        (?<user_eoi> [^ > ]* )\n        >\n        (?<system_eoi> [^ > ]* )\n        >\n        (?<suffix> .*? )\n        $ ///\n      publish: /// ^\n        (?<prefix> .*? )\n        <\n        <\n        <\n        (?<slash> \\/? )\n        (?<command> publish )\n        \\x20+\n        ( (?<disposition> one   | enclosed  ) \\x20+ )?\n        ( (?<position>    below | above     ) \\x20+ )?\n        (as\\s*=\\s*)?(?<p1>\n          (?:\n            (?: ' \\# (?: \\\\' | [^ ' ]  )+ ' ) |\n            (?: \" \\# (?: \\\\\" | [^ \" ]  )+ \" )\n            )\n          )\n        >\n        (?<user_eoi> [^ > ]* )\n        >\n        (?<system_eoi> [^ > ]* )\n        >\n        (?<suffix> .*? )\n        $ ///\n      generic: /// ^\n        (?<prefix> .*? )\n        <\n        <\n        <\n        (?<slash> \\/? )\n        (?<p1> .*? )\n        >\n        (?<user_eoi> [^ > ]* )\n        >\n        (?<system_eoi> [^ > ]* )\n        >\n        (?<suffix> .*? )\n        $ ///\n    #.......................................................................................................\n    probes = [\n      ### insert: ###\n      \"\"\"<<<insert below 'brackets.txt'>>>\"\"\"\n      \"\"\"<<<insert below 'brackets.txt'>USER>>\"\"\"\n      \"\"\"<!-- <<</insert 'brackets.txt'>>SYSTEM> -->\"\"\"\n      \"\"\"<!-- <<</insert below 'brackets.txt'>>SYSTEM> -->\"\"\"\n      \"\"\"<!-- <<</insert below 'my brackets.txt'>>SYSTEM> -->\"\"\"\n      \"\"\"<!-- <<</insert below \"my brackets.txt\">>SYSTEM> -->\"\"\"\n      \"\"\"<!-- <<</insert below \"my \\\\\" brackets.txt\">>SYSTEM> -->\"\"\"\n      \"\"\"<!-- <<</insert below 'my \\\\> brackets.txt'>>SYSTEM> -->\"\"\"\n      \"\"\"<!-- <<</insert below 'my > brackets.txt'>>SYSTEM> -->\"\"\"\n      \"\"\"<!-- <<</insert below $brackets>>SYSTEM> -->\"\"\"\n      \"\"\"<!-- <<</insert below src=$brackets>>> -->\"\"\"\n      \"\"\"# <<<insert $brackets>>>\"\"\"\n      #.....................................................................................................\n      ### replace: ###\n      \"\"\"# <<<replace above $header>>>\"\"\"\n      \"\"\"# <<<replace below $footer>>>\"\"\"\n      #.....................................................................................................\n      ### publish: ###\n      \"\"\"# <<<publish '#myname'>>>\"\"\"\n      \"\"\"# <<<publish as='#myname'>>>\"\"\"\n      \"\"\"# <<<publish above as='#myname'>>>\"\"\"\n      \"\"\"# <<<publish enclosed above as='#myname'>>>\"\"\"\n      \"\"\"# <<<publish below as='#myname'>>>\"\"\"\n      \"\"\"# <<<publish one below as='#myname'>>>\"\"\"\n      \"\"\"# <<<publish enclosed below as='#myname'>>>\"\"\"\n      \"\"\"# <<<publish enclosed as='#myname'>>>\"\"\"\n      \"\"\"# <<</publish enclosed as='#myname'>>>\"\"\"\n      \"\"\"# <<<publish enclosed '#myname'>>>\"\"\"\n      \"\"\"# <<<publish one '#myname'>>>\"\"\"\n      \"\"\"<!--<<<publish enclosed as='#id'>>>-->\"\"\"\n      #.....................................................................................................\n      ### generic: ###\n      \"\"\"<!-- <<</insert below \"my \" brackets.txt\">>SYSTEM> -->\"\"\"\n      \"\"\"# <<<publish enclosed #myname>>>\"\"\"\n      \"\"\"# <<<publish enclosed as=#myname>>>\"\"\"\n      \"\"\"# <<<>>>\"\"\"\n      \"\"\"# <<< >>>\"\"\"\n      \"\"\"# <<<<>>>\"\"\"\n      \"\"\"# <<<<<<>>>>>\"\"\"\n      \"\"\"<<<publish enclosed as=<name>>>>\"\"\"\n      \"\"\"<!--<<<publish enclosed as=<name>>>-->\"\"\"\n      #.....................................................................................................\n      ### no match: ###\n      ''\n      ]\n    #.......................................................................................................\n    color     = C.black\n    bg_color  = C.bg_gainsboro\n    error     = \"#{C.bg_pink} no match #{color+bg_color}\"\n    fmt       = ( x ) -> switch x\n      when ''         then  ''\n      when undefined  then  ''\n      when error      then  x\n      else                  rpr x\n    match_line = ( text ) ->\n      for pattern_name, pattern of patterns\n        return { pattern_name, match, } if ( match = probe.match pattern )?\n      return { pattern_name: null, match: null, }\n    for probe in probes\n      # urge 'Ωmf___3', rpr probe\n      { pattern_name, match, } = match_line probe\n      if match?\n        { prefix,\n          slash,\n          command,\n          disposition,\n          position,\n          p1,\n          user_eoi,\n          system_eoi,\n          suffix,     } = match.groups\n      else\n        prefix      = error\n        slash       = ''\n        command     = ''\n        disposition = ''\n        position    = ''\n        p1          = ''\n        user_eoi    = ''\n        system_eoi  = ''\n        suffix      = ''\n      p1_name = { insert_replace: 'src', publish: 'id', generic: 'inner', no_match: '', }[ pattern_name ? 'no_match' ]\n      p1_name = p1_name + ':' unless p1_name is ''\n      echo f\"#{color+bg_color}│#{C.overline1}#{fmt pattern_name}:<20c;│#{fmt prefix}:<10c;│#{fmt slash}:<10c;│#{fmt command}:<10c;│#{fmt disposition}:<10c;│#{fmt position}:<10c;│#{p1_name}:<10c;#{fmt p1}:<40c;│#{fmt user_eoi}:<10c;│#{fmt system_eoi}:<10c;│#{fmt suffix}:<10c;#{C.overline0}│#{C.default+C.bg_default}\"\n    #.......................................................................................................\n    return null\n\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  guytest_cfg = { throw_on_error: false,  show_passes: false, report_checks: false, }\n  guytest_cfg = { throw_on_error: true,   show_passes: false, report_checks: false, }\n  ( new Test guytest_cfg ).test @mirror_file_tasks\n  # ( new Test guytest_cfg ).test @mirror_file_tasks.builtins\n"
  ]
}