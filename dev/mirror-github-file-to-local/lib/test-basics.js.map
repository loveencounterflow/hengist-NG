{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'mirror-github-file-to-local'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\n# WGUY                      = require '../../../apps/webguy'\nGTNG                      = require '../../../apps/guy-test-NG'\n{ Test                  } = GTNG\n{ f }                     = require '../../../apps/effstring'\n\n#===========================================================================================================\nC = do =>\n  fg_from_dec   = ([ r, g, b, ]) -> \"\\x1b[38:2::#{r}:#{g}:#{b}m\"\n  bg_from_dec   = ([ r, g, b, ]) -> \"\\x1b[48:2::#{r}:#{g}:#{b}m\"\n  dec_from_hex  = ( rhx ) -> [ ( parseInt rhx[ 1 .. 2 ], 16 ), ( parseInt rhx[ 3 .. 4 ], 16 ), ( parseInt rhx[ 5 .. 6 ], 16 ), ]\n  fg_from_hex   = ( rhx ) -> fg_from_dec dec_from_hex rhx\n  bg_from_hex   = ( rhx ) -> bg_from_dec dec_from_hex rhx\n  #.........................................................................................................\n  rgb_dec =\n    black:              [   0,   0,   0, ]\n    darkslategray:      [  47,  79,  79, ]\n    dimgray:            [ 105, 105, 105, ]\n    slategray:          [ 112, 128, 144, ]\n    gray:               [ 128, 128, 128, ]\n    lightslategray:     [ 119, 136, 153, ]\n    darkgray:           [ 169, 169, 169, ]\n    silver:             [ 192, 192, 192, ]\n    lightgray:          [ 211, 211, 211, ]\n    gainsboro:          [ 220, 220, 220, ]\n  #.........................................................................................................\n  rgb_hex =\n    white:            '#ffffff'\n    amethyst:         '#f0a3ff'\n    blue:             '#0075dc'\n    caramel:          '#993f00'\n    damson:           '#4c005c'\n    ebony:            '#191919'\n    forest:           '#005c31'\n    green:            '#2bce48'\n    lime:             '#9dcc00'\n    quagmire:         '#426600'\n    honeydew:         '#ffcc99'\n    iron:             '#808080'\n    jade:             '#94ffb5'\n    khaki:            '#8f7c00'\n    mallow:           '#c20088'\n    navy:             '#003380'\n    orpiment:         '#ffa405'\n    pink:             '#ffa8bb'\n    red:              '#ff0010'\n    sky:              '#5ef1f2'\n    turquoise:        '#00998f'\n    violet:           '#740aff'\n    wine:             '#990000'\n    uranium:          '#e0ff66'\n    xanthin:          '#ffff80'\n    yellow:           '#ffe100'\n    zinnia:           '#ff5005'\n  #.........................................................................................................\n  R =\n    overline1:          '\\x1b[53m'\n    overline0:          '\\x1b[55m'\n    default:            '\\x1b[39m'\n    bg_default:         '\\x1b[49m'\n    reset:              '\\x1b[0m'\n    #.......................................................................................................\n    black:              fg_from_dec rgb_dec.black\n    darkslategray:      fg_from_dec rgb_dec.darkslategray\n    dimgray:            fg_from_dec rgb_dec.dimgray\n    slategray:          fg_from_dec rgb_dec.slategray\n    gray:               fg_from_dec rgb_dec.gray\n    lightslategray:     fg_from_dec rgb_dec.lightslategray\n    darkgray:           fg_from_dec rgb_dec.darkgray\n    silver:             fg_from_dec rgb_dec.silver\n    lightgray:          fg_from_dec rgb_dec.lightgray\n    gainsboro:          fg_from_dec rgb_dec.gainsboro\n    #.......................................................................................................\n    white:              fg_from_hex rgb_hex.white\n    amethyst:           fg_from_hex rgb_hex.amethyst\n    blue:               fg_from_hex rgb_hex.blue\n    caramel:            fg_from_hex rgb_hex.caramel\n    damson:             fg_from_hex rgb_hex.damson\n    ebony:              fg_from_hex rgb_hex.ebony\n    forest:             fg_from_hex rgb_hex.forest\n    green:              fg_from_hex rgb_hex.green\n    lime:               fg_from_hex rgb_hex.lime\n    quagmire:           fg_from_hex rgb_hex.quagmire\n    honeydew:           fg_from_hex rgb_hex.honeydew\n    iron:               fg_from_hex rgb_hex.iron\n    jade:               fg_from_hex rgb_hex.jade\n    khaki:              fg_from_hex rgb_hex.khaki\n    mallow:             fg_from_hex rgb_hex.mallow\n    navy:               fg_from_hex rgb_hex.navy\n    orpiment:           fg_from_hex rgb_hex.orpiment\n    pink:               fg_from_hex rgb_hex.pink\n    red:                fg_from_hex rgb_hex.red\n    sky:                fg_from_hex rgb_hex.sky\n    turquoise:          fg_from_hex rgb_hex.turquoise\n    violet:             fg_from_hex rgb_hex.violet\n    wine:               fg_from_hex rgb_hex.wine\n    uranium:            fg_from_hex rgb_hex.uranium\n    xanthin:            fg_from_hex rgb_hex.xanthin\n    yellow:             fg_from_hex rgb_hex.yellow\n    zinnia:             fg_from_hex rgb_hex.zinnia\n    #.......................................................................................................\n    bg_black:           bg_from_dec rgb_dec.black\n    bg_darkslategray:   bg_from_dec rgb_dec.darkslategray\n    bg_dimgray:         bg_from_dec rgb_dec.dimgray\n    bg_slategray:       bg_from_dec rgb_dec.slategray\n    bg_gray:            bg_from_dec rgb_dec.gray\n    bg_lightslategray:  bg_from_dec rgb_dec.lightslategray\n    bg_darkgray:        bg_from_dec rgb_dec.darkgray\n    bg_silver:          bg_from_dec rgb_dec.silver\n    bg_lightgray:       bg_from_dec rgb_dec.lightgray\n    bg_gainsboro:       bg_from_dec rgb_dec.gainsboro\n    #.......................................................................................................\n    bg_white:           bg_from_hex rgb_hex.white\n    bg_amethyst:        bg_from_hex rgb_hex.amethyst\n    bg_blue:            bg_from_hex rgb_hex.blue\n    bg_caramel:         bg_from_hex rgb_hex.caramel\n    bg_damson:          bg_from_hex rgb_hex.damson\n    bg_ebony:           bg_from_hex rgb_hex.ebony\n    bg_forest:          bg_from_hex rgb_hex.forest\n    bg_green:           bg_from_hex rgb_hex.green\n    bg_lime:            bg_from_hex rgb_hex.lime\n    bg_quagmire:        bg_from_hex rgb_hex.quagmire\n    bg_honeydew:        bg_from_hex rgb_hex.honeydew\n    bg_iron:            bg_from_hex rgb_hex.iron\n    bg_jade:            bg_from_hex rgb_hex.jade\n    bg_khaki:           bg_from_hex rgb_hex.khaki\n    bg_mallow:          bg_from_hex rgb_hex.mallow\n    bg_navy:            bg_from_hex rgb_hex.navy\n    bg_orpiment:        bg_from_hex rgb_hex.orpiment\n    bg_pink:            bg_from_hex rgb_hex.pink\n    bg_red:             bg_from_hex rgb_hex.red\n    bg_sky:             bg_from_hex rgb_hex.sky\n    bg_turquoise:       bg_from_hex rgb_hex.turquoise\n    bg_violet:          bg_from_hex rgb_hex.violet\n    bg_wine:            bg_from_hex rgb_hex.wine\n    bg_uranium:         bg_from_hex rgb_hex.uranium\n    bg_xanthin:         bg_from_hex rgb_hex.xanthin\n    bg_yellow:          bg_from_hex rgb_hex.yellow\n    bg_zinnia:          bg_from_hex rgb_hex.zinnia\n  #.........................................................................................................\n  return R\n\n\n############################################################################################################\n#\n#===========================================================================================================\n@mirror_file_tasks =\n\n  #=========================================================================================================\n  basics: ->\n    insert_tag_re =     /// ^\n      (?<prefix> .*? )\n      <\n      <\n      <\n      (?<slash> \\/? )\n      (?<command> insert | replace )\n      \\x20+\n      ( (?<position> below | above ) \\x20+ )?\n      (?<path>\n        (?:\n          (?: ' (?: \\\\' | [^ ' ]  )+ ' ) |\n          (?: \" (?: \\\\\" | [^ \" ]  )+ \" ) |\n          (?: \\$ [a-zA-Z0-9]+          ) # insert JS identifier pattern\n          )\n        )\n      >\n      (?<user_eoi> [^ > ]* )\n      >\n      (?<system_eoi> [^ > ]* )\n      >\n      (?<suffix> .*? )\n      $ ///\n    #.......................................................................................................\n    probes = [\n      \"\"\"<<<insert below 'brackets.txt'>>>\"\"\"\n      \"\"\"<<<insert below 'brackets.txt'>USER>>\"\"\"\n      \"\"\"<!-- <<</insert below 'brackets.txt'>>SYSTEM> -->\"\"\"\n      \"\"\"<!-- <<</insert below 'my brackets.txt'>>SYSTEM> -->\"\"\"\n      \"\"\"<!-- <<</insert below \"my brackets.txt\">>SYSTEM> -->\"\"\"\n      \"\"\"<!-- <<</insert below \"my \" brackets.txt\">>SYSTEM> -->\"\"\"\n      \"\"\"<!-- <<</insert below \"my \\\\\" brackets.txt\">>SYSTEM> -->\"\"\"\n      \"\"\"<!-- <<</insert below 'my \\\\> brackets.txt'>>SYSTEM> -->\"\"\"\n      \"\"\"<!-- <<</insert below 'my > brackets.txt'>>SYSTEM> -->\"\"\"\n      \"\"\"<!-- <<</insert below $brackets>>SYSTEM> -->\"\"\"\n      \"\"\"# <<<insert $brackets>>>\"\"\"\n      \"\"\"# <<<replace above $header>>>\"\"\"\n      \"\"\"# <<<replace below $footer>>>\"\"\"\n      ]\n    #.......................................................................................................\n    color     = C.black\n    bg_color  = C.bg_gainsboro\n    error     = \"#{C.bg_pink} no match #{color+bg_color}\"\n    fmt       = ( x ) -> switch x\n      when ''         then  ''\n      when undefined  then  ''\n      when error      then  x\n      else                  rpr x\n    for probe in probes\n      # urge 'Ωmf___3', rpr probe\n      if ( match = probe.match insert_tag_re )?\n        { prefix,\n          slash,\n          command,\n          position,\n          path,\n          user_eoi,\n          system_eoi,\n          suffix,     } = match.groups\n      else\n        prefix      = error\n        slash       = ''\n        command     = ''\n        position    = ''\n        path        = ''\n        user_eoi    = ''\n        system_eoi  = ''\n        suffix      = ''\n      echo f\"#{color+bg_color}│#{C.overline1}#{fmt prefix}:<10c;│#{fmt slash}:<10c;│#{fmt command}:<10c;│#{fmt position}:<10c;│#{fmt path}:<30c;│#{fmt user_eoi}:<10c;│#{fmt system_eoi}:<10c;│#{fmt suffix}:<10c;#{C.overline0}│#{C.default+C.bg_default}\"\n    #.......................................................................................................\n    return null\n\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  guytest_cfg = { throw_on_error: false,  show_passes: false, report_checks: false, }\n  guytest_cfg = { throw_on_error: true,   show_passes: false, report_checks: false, }\n  ( new Test guytest_cfg ).test @mirror_file_tasks\n  # ( new Test guytest_cfg ).test @mirror_file_tasks.builtins\n"
  ]
}